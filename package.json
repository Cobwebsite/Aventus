{
	"name": "aventus",
	"displayName": "Aventus",
	"description": "This extension allows compilation of Aventus Framework",
	"version": "1.3.1",
	"license": "MIT",
	"icon": "icons/logo.png",
	"author": {
		"name": "Cobwebsite",
		"email": "info@cobwebsite.ch",
		"url": "https://cobwesbite.ch"
	},
	"bin": {
		"aventus": "./cli/out/cli.js"
	},
	"publisher": "Cobwebsite",
	"engines": {
		"vscode": "^1.68.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/Cobwebsite/Aventus"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"*"
	],
	"main": "./client/out/index.js",
	"contributes": {
		"languages": [
			{
				"id": "Aventus HTML",
				"extensions": [
					".wcv.avt"
				],
				"configuration": "./syntaxes/html-language-configuration.json",
				"icon": {
					"light": "./icons/aventus-view.png",
					"dark": "./icons/aventus-view.png"
				}
			},
			{
				"id": "Aventus SCSS",
				"extensions": [
					".wcs.avt",
					".gs.avt"
				],
				"configuration": "./syntaxes/scss-language-configuration.json",
				"icon": {
					"light": "./icons/aventus-style.png",
					"dark": "./icons/aventus-style.png"
				}
			},
			{
				"id": "Aventus WebComponent",
				"extensions": [
					".wc.avt"
				],
				"configuration": "./syntaxes/html-language-configuration.json",
				"icon": {
					"light": "./icons/icon.png",
					"dark": "./icons/icon.png"
				}
			},
			{
				"id": "Aventus Ts",
				"extensions": [
					".wcl.avt",
					".data.avt",
					".lib.avt",
					".ram.avt",
					".state.avt",
					".static.avt",
					".def.avt",
					".package.avt"
				],
				"configuration": "./syntaxes/ts-language-configuration.json",
				"filenames": [
					"aventus.conf.avt",
					"aventus.sharp.avt",
					"template.avt"
				],
				"icon": {
					"light": "./icons/icon.png",
					"dark": "./icons/icon.png"
				}
			}
		],
		"grammars": [
			{
				"language": "Aventus Ts",
				"scopeName": "source.js",
				"path": "./syntaxes/javascript.tmLanguage.json"
			},
			{
				"language": "Aventus HTML",
				"scopeName": "text.html1.basic",
				"path": "./syntaxes/html.tmLanguage.json"
			},
			{
				"language": "Aventus SCSS",
				"scopeName": "source.css.scss",
				"path": "./syntaxes/scss.tmLanguage.json"
			},
			{
				"language": "Aventus WebComponent",
				"scopeName": "text.wc.avt",
				"path": "./syntaxes/wc.tmLanguage.json",
				"embeddedLanguages": {
					"source.css.scss": "Aventus SCSS",
					"source.js": "Aventus Ts",
					"text.html1.basic": "Aventus HTML"
				}
			}
		],
		"configuration": {
			"type": "object",
			"title": "Aventus",
			"order": 20,
			"properties": {
				"aventus.liveserver": {
					"type": "object",
					"title": "Live server",
					"additionalProperties": false,
					"properties": {
						"host": {
							"type": "string",
							"default": "0.0.0.0",
							"description": "Choose the host for the live server",
							"format": "ipv4"
						},
						"autoIncrementPort": {
							"type": "boolean",
							"default": true,
							"description": "Choose if the port must increase if it uses"
						},
						"port": {
							"type": "number",
							"default": 8080,
							"description": "Choose the port for the live server"
						},
						"rootFolder": {
							"type": "string",
							"default": "./dist",
							"description": "Choose the folder to serve"
						},
						"indexFile": {
							"type": "string",
							"default": "index.html",
							"description": "Choose the index file to serve"
						},
						"delay": {
							"type": "number",
							"default": 200,
							"description": "Delay to wait before sending live reload command"
						},
						"launch_browser": {
							"type": "boolean",
							"default": true,
							"description": "Start a browser"
						},
						"browser": {
							"type": "string",
							"default": "chrome",
							"description": "Choose the browser to use. If empty, it ll use the default browser"
						},
						"auto_close": {
							"type": "boolean",
							"default": true,
							"description": "Define if you browser tab need to be closed when server stop"
						}
					}
				},
				"aventus.updateImportOnRename": {
					"type": "boolean",
					"title": "Update import path on rename",
					"default": true
				},
				"aventus.projectPath": {
					"type": "array",
					"title": "Define path containing project templates",
					"default": [],
					"items": {
						"type": "string"
					}
				},
				"aventus.templatePath": {
					"type": "array",
					"title": "Define path containing element templates",
					"default": [],
					"items": {
						"type": "string"
					}
				},
				"aventus.readNodeModules": {
					"type": "boolean",
					"title": "Read the folder node_modules to suggest import",
					"description": "This may slow the extension",
					"default": false
				},
				"aventus.readDirs": {
					"type": "array",
					"title": "Define directories readable. If you use relative path, the . represents the workspace root not the .vscode folder",
					"default": [],
					"items": {
						"type": "string"
					}
				}
			}
		},
		"configurationDefaults": {
			"editor.tokenColorCustomizations": {
				"textMateRules": [
					{
						"scope": "aventus.css.tag",
						"settings": {
							"foreground": "#E066DC"
						}
					},
					{
						"scope": "aventus.js.tag",
						"settings": {
							"foreground": "#E5540E"
						}
					},
					{
						"scope": "aventus.html.tag",
						"settings": {
							"foreground": "#22AAEE"
						}
					},
					{
						"scope": "aventus.wcv.attribute",
						"settings": {
							"foreground": "#f18086"
						}
					},
					{
						"scope": "aventus.wcv.propvalue",
						"settings": {
							"foreground": "#4EC9B0"
						}
					},
					{
						"scope": "aventus.wcv.fctvalue",
						"settings": {
							"foreground": "#DCDCAA"
						}
					},
					{
						"scope": "aventus.wcv.changingtext",
						"settings": {
							"foreground": "#4EC9B0"
						}
					},
					{
						"scope": "aventus.wcv.changingstart",
						"settings": {
							"foreground": "#8e8686"
						}
					},
					{
						"scope": "aventus.wcv.changingstop",
						"settings": {
							"foreground": "#8e8686"
						}
					}
				]
			},
			"[Aventus HTML]": {
				"editor.snippetSuggestions": "top"
			},
			"emmet.includeLanguages": {
				"Aventus HTML": "html",
				"Aventus WebComponent": "html"
			}
		},
		"commands": [
			{
				"command": "aventus.create",
				"title": "Aventus : Create..."
			},
			{
				"command": "aventus.rename",
				"title": "Aventus : Rename"
			},
			{
				"command": "aventus.restart",
				"title": "Aventus : Restart"
			},
			{
				"command": "aventus.compile",
				"title": "Aventus : Compile"
			},
			{
				"command": "aventus.liveserver.start",
				"title": "Aventus : Start live server"
			},
			{
				"command": "aventus.liveserver.stop",
				"title": "Aventus : Stop live server"
			},
			{
				"command": "aventus.liveserver.toggle",
				"title": "Aventus : Toggle live server"
			},
			{
				"command": "aventus.static",
				"title": "Aventus : Copy static"
			},
			{
				"command": "aventus.component.merge",
				"title": "Aventus : Merge component in a single file"
			},
			{
				"command": "aventus.component.split",
				"title": "Aventus : Split component in multiple files"
			},
			{
				"command": "aventus.component.rename",
				"title": "Aventus : Rename component"
			},
			{
				"command": "aventus.addConfigSection",
				"title": "Aventus : Add Config Section"
			},
			{
				"command": "aventus.wc.create.cssvar",
				"title": "Aventus : Create style variable"
			},
			{
				"command": "aventus.wc.create.attribute",
				"title": "Aventus : Create attribute"
			},
			{
				"command": "aventus.wc.create.property",
				"title": "Aventus : Create property"
			},
			{
				"command": "aventus.wc.create.watch",
				"title": "Aventus : Create watch"
			},
			{
				"command": "aventus.wc.import.viewElement",
				"title": "Aventus : Import view element"
			},
			{
				"command": "aventus.wc.import.viewMethod",
				"title": "Aventus : Import view method"
			},
			{
				"command": "aventus.filesystem.created",
				"title": "Aventus : File created"
			},
			{
				"command": "aventus.filesystem.updated",
				"title": "Aventus : File updated"
			},
			{
				"command": "aventus.filesystem.deleted",
				"title": "Aventus : File deleted"
			},
			{
				"command": "aventus.filesystem.openAventus",
				"title": "Aventus : Open storage"
			},
			{
				"command": "aventus.template.import_project",
				"title": "Aventus : Import Projects"
			},
			{
				"command": "aventus.template.import",
				"title": "Aventus : Import Templates"
			},
			{
				"command": "aventus.getNamespace",
				"title": "Aventus : Get namespace for a path"
			},
			{
				"command": "aventus.dependances.show",
				"title": "Aventus : show webview"
			},
			{
				"command": "aventus.sharp.export",
				"title": "Aventus : Export sharp"
			},
			{
				"command": "aventus.openfile.debug",
				"title": "Aventus : Open debug file"
			},
			{
				"command": "aventus.openfile.debugsharp",
				"title": "Aventus : Open debug file"
			},
			{
				"command": "aventus.reloadSettings",
				"title": "Aventus : Reload settings"
			},
			{
				"command": "aventus.storybook.build",
				"title": "Aventus : Build storybook"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "explorerResourceIsFolder",
					"command": "aventus.create",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wcs|wcv).avt/",
					"command": "aventus.component.rename",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename =~ /^.*\\.wc.avt/",
					"command": "aventus.component.split",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wcs|wcv).avt/",
					"command": "aventus.component.merge",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename == aventus.conf.avt",
					"command": "aventus.addConfigSection",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename == aventus.sharp.avt",
					"command": "aventus.sharp.export",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename =~ /^.*\\.cs/",
					"command": "aventus.sharp.export",
					"group": "navigation@-50"
				}
			],
			"editor/context": [
				{
					"when": "resourceFilename =~ /^.*\\.(wcs|wc).avt/",
					"command": "aventus.wc.create.cssvar"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wc).avt/",
					"command": "aventus.wc.create.attribute"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wc).avt/",
					"command": "aventus.wc.create.property"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wc).avt/",
					"command": "aventus.wc.create.watch"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wc).avt/",
					"command": "aventus.wc.import.viewElement"
				},
				{
					"when": "resourceFilename =~ /^.*\\.(wcl|wc).avt/",
					"command": "aventus.wc.import.viewMethod"
				},
				{
					"when": "resourceFilename == aventus.conf.avt",
					"command": "aventus.addConfigSection",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename == aventus.sharp.avt",
					"command": "aventus.sharp.export",
					"group": "navigation@-50"
				},
				{
					"when": "resourceFilename =~ /^.*\\.cs/",
					"command": "aventus.sharp.export",
					"group": "navigation@-50"
				}
			],
			"commandPalette": [
				{
					"command": "aventus.restart",
					"when": "false"
				},
				{
					"command": "aventus.create",
					"when": "false"
				},
				{
					"command": "aventus.rename",
					"when": "false"
				},
				{
					"command": "aventus.component.merge",
					"when": "false"
				},
				{
					"command": "aventus.liveserver.start",
					"when": "false"
				},
				{
					"command": "aventus.liveserver.stop",
					"when": "false"
				},
				{
					"command": "aventus.liveserver.toggle",
					"when": "false"
				},
				{
					"command": "aventus.component.rename",
					"when": "false"
				},
				{
					"command": "aventus.component.split",
					"when": "false"
				},
				{
					"command": "aventus.addConfigSection",
					"when": "editorTextFocus && resourceFilename == aventus.conf.avt"
				},
				{
					"command": "aventus.wc.create.cssvar",
					"when": "false"
				},
				{
					"command": "aventus.wc.create.attribute",
					"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
				},
				{
					"command": "aventus.wc.create.property",
					"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
				},
				{
					"command": "aventus.wc.create.watch",
					"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
				},
				{
					"command": "aventus.wc.import.viewElement",
					"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
				},
				{
					"command": "aventus.wc.import.viewMethod",
					"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
				},
				{
					"command": "aventus.filesystem.created",
					"when": "false"
				},
				{
					"command": "aventus.filesystem.updated",
					"when": "false"
				},
				{
					"command": "aventus.filesystem.deleted",
					"when": "false"
				},
				{
					"command": "aventus.getNamespace",
					"when": "false"
				},
				{
					"command": "aventus.dependances.show",
					"when": "false"
				},
				{
					"command": "aventus.reloadSettings",
					"when": "false"
				},
				{
					"command": "aventus.openfile.debugsharp",
					"when": "false"
				}
			]
		},
		"keybindings": [
			{
				"command": "aventus.liveserver.toggle",
				"key": "f5",
				"mac": "f5",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.avt/"
			},
			{
				"command": "aventus.wc.create.cssvar",
				"key": "ctrl+k ctrl+numpad1",
				"mac": "cmd+f1",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcs).avt/"
			},
			{
				"command": "aventus.wc.create.attribute",
				"key": "ctrl+k ctrl+numpad1",
				"mac": "cmd+f1",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
			},
			{
				"command": "aventus.wc.create.property",
				"key": "ctrl+k ctrl+numpad2",
				"mac": "cmd+f2",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
			},
			{
				"command": "aventus.wc.create.watch",
				"key": "ctrl+k ctrl+numpad3",
				"mac": "cmd+f3",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
			},
			{
				"command": "aventus.wc.import.viewElement",
				"key": "ctrl+k ctrl+numpad4",
				"mac": "cmd+f4",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
			},
			{
				"command": "aventus.wc.import.viewMethod",
				"key": "ctrl+k ctrl+numpad5",
				"mac": "cmd+f5",
				"when": "editorTextFocus && resourceFilename =~ /^.*\\.(wcl|wc).avt/"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run webpack",
		"compile": "npm run clean && npm run compile:client && npm run compile:server",
		"compile:client": "tsc -b ./client/",
		"compile:server": "rimraf server/out && tsc -b ./server/",
		"dev:server": "rimraf server/out && tsc -b -w ./server/",
		"dev:client": "rimraf client/out && tsc -b -w ./client/",
		"dev:cli": "rimraf cli/out && tspc -b -w ./cli/",
		"webpack": "npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
		"clean": "rimraf client/out && rimraf server/out",
		"package": "npx vsce package --allow-star-activation && npx node-notifier-cli notify -t \"Packaging done\" -m \"The aventus extension has been packaged\" -i \"./icons/icon.png\"",
		"publish": "npx vsce publish --allow-star-activation && npx node-notifier-cli notify -t \"Publish done\" -m \"The aventus extension has been published\" -i \"./icons/icon.png\"",
		"package:cli": "rimraf cli/lib && rimraf cli/out && webpack --mode production --config ./cli/webpack.config.js && webpack --mode production --config ./cli/webpack.server.config.js && webpack --mode production --config ./cli/webpack.interaction.config.js && node ./cli/postBuild.mjs",
		"test": "jest",
		"watch": "concurrently \"npm run dev:server\" \"npm run dev:client\" -n \"server,client\""
	},
	"devDependencies": {
		"@aventusjs/storybook": "^0.0.16",
		"@babel/core": "^7.19.0",
		"@babel/preset-env": "^7.19.0",
		"@babel/preset-typescript": "^7.18.6",
		"@chromatic-com/storybook": "^1.6.0",
		"@storybook/addon-docs": "^8.1.11",
		"@storybook/addon-essentials": "^8.1.11",
		"@storybook/addon-links": "^8.1.11",
		"@storybook/addon-styling-webpack": "^1.0.0",
		"@storybook/blocks": "^8.1.11",
		"@storybook/test": "^8.1.11",
		"@storybook/web-components": "^8.1.11",
		"@storybook/web-components-vite": "^8.1.11",
		"@types/command-exists": "^1.2.0",
		"@types/connect": "^3.4.35",
		"@types/event-stream": "^4.0.0",
		"@types/jest": "^29.0.0",
		"@types/node": "^20.4.8",
		"@types/send": "^0.17.1",
		"@types/vscode": "^1.68.0",
		"@types/ws": "^8.5.3",
		"@vscode/vsce": "^3.2.1",
		"babel-jest": "^29.0.2",
		"concurrently": "^7.6.0",
		"jest": "^29.0.2",
		"merge-options": "^3.0.4",
		"module-alias": "^2.2.3",
		"node-notifier-cli": "^2.0.0",
		"remark-gfm": "^4.0.0",
		"rimraf": "^6.0.1",
		"storybook": "^8.1.11",
		"ts-jest": "^29.0.1",
		"ts-loader": "^9.3.1",
		"ts-patch": "^3.2.1",
		"tsc-alias": "^1.8.7",
		"webpack": "^5.96.1",
		"webpack-cli": "^5.1.4"
	},
	"dependencies": {
		"@inquirer/core": "^10.1.0",
		"@rollup/plugin-commonjs": "^25.0.0",
		"@rollup/plugin-node-resolve": "^15.1.0",
		"@rollup/plugin-virtual": "^3.0.1",
		"@types/estree": "^1.0.0",
		"@types/serve-index": "^1.9.1",
		"babel-minify": "^0.5.2",
		"chokidar": "^3.5.3",
		"command-exists": "^1.2.9",
		"commander": "^12.1.0",
		"connect": "^3.7.0",
		"event-stream": "^4.0.1",
		"inquirer-file-tree-selection-prompt": "^2.0.5",
		"md5": "^2.3.0",
		"open": "^8.4.0",
		"parse-color": "^1.0.0",
		"postcss": "^8.4.17",
		"postcss-scss": "^4.0.5",
		"postcss-sorting": "^7.0.1",
		"rollup": "^3.23.0",
		"sass": "^1.53.0",
		"send": "^0.18.0",
		"serve-index": "^1.9.1",
		"sudo-prompt": "^9.2.1",
		"terser": "^5.19.0",
		"typescript": "^5.5.3",
		"typescript-transform-paths": "^3.4.6",
		"uglify-js": "^3.17.1",
		"url": "^0.11.0",
		"uuid": "^9.0.0",
		"vscode-css-languageservice": "^6.3.0",
		"vscode-html-languageservice": "^5.3.0",
		"vscode-json-languageservice": "^5.0.0",
		"vscode-languageclient": "^9.0.1",
		"vscode-languageserver": "^9.0.1",
		"vscode-languageserver-textdocument": "^1.0.11",
		"ws": "^8.12.0"
	}
}
