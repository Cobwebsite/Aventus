import { FormElement } from "../Form/FormElement.lib.avt";

namespace Form {
    export class Checkbox extends Aventus.WebComponent implements Aventus.DefaultComponent, FormElement<boolean> {

        //#region static

        //#endregion


        //#region props
        @Property()
        public label: string = "";

        @Property((target: Checkbox) => {
            target.syncValue('checked');
        })
        public checked!: boolean;
        /**
         * @inheritdoc
         */
        @Watch((target: Checkbox) => {
            target.syncValue('value');
        })
        public value: boolean = false;
        /**
         * Determine if the fields is disabled
         */
        @Attribute()
        public disabled!: boolean;
        @Attribute()
        public reverse!: boolean;
        //#endregion


        //#region variables
        @ViewElement()
        protected checkboxEl!: HTMLInputElement;
        //#endregion


        //#region states

        //#endregion


        //#region constructor

        //#endregion


        //#region methods
        /**
         * @inheritdoc
         */
        public onChange: Aventus.Callback<(value: boolean) => void> = new Aventus.Callback();

        public syncValue(master: 'checked' | 'value') {
            if(this.checked != this.value) {
                if(master == 'checked') {
                    this.value = this.checked ?? false;
                }
                else {
                    this.checked = this.value;
                }
            }

            if(this.checkboxEl && this.checkboxEl?.checked != this.checked) {
                this.checkboxEl.checked = this.checked ?? false;
            }
        }

        /**
         * @inheritdoc
         */
        public validate(): boolean {
            return true;
        }


        protected override postCreation(): void {
            new Aventus.PressManager({
                element: this,
                onPress: () => {
                    this.checked = !this.checked;
                    this.onChange.trigger([this.checked]);
                }
            });
        }
        //#endregion

    }
}