import type { State } from "Aventus@Main:Aventus.package.avt";
import { Router } from "../Router/Router.wcl.avt";
import type { PageConfig } from "./PageConfig.lib.avt";

namespace Navigation {
    export abstract class Page extends Aventus.WebComponent implements Aventus.DefaultComponent {

        //#region static

        //#endregion


        //#region props
        @Property((target: Page) => {
            if(target.visible) {
                target.onShow();
            }
            else {
                target.onHide();
            }
        })
        public visible!: boolean;

        public router?: Router;
        protected state?: Aventus.State;
        //#endregion


        //#region variables

        //#endregion


        //#region constructor

        //#endregion


        //#region methods
        public abstract configure(): Aventus.Asyncable<PageConfig>;

        public async show(state?: Aventus.State) {
            this.state = state;
            this.visible = true;
        }
        public async hide() {
            this.visible = false;
            this.state = undefined;
        }
        public onShow() {

        }
        public onHide() {

        }
        /**
         * Add custom check
         * Return true if evrything is ok
         * False will prevent showing
         * string or state will redirect to the page
         */
        public isAllowed(state: State, pattern: string, router: Router): Aventus.Asyncable<boolean | State | string> {
            return true;
        }
        /**
         * Add function to load data
         * Return true if evrything is ok
         * False will prevent showing
         * string or state will redirect to the page
         */
        public loadData(state: Aventus.State): Aventus.Asyncable<boolean | State | string> {
            return true;
        }
        //#endregion

    }
}