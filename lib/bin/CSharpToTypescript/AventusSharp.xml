<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AventusSharp</name>
    </assembly>
    <members>
        <member name="T:AventusSharp.Data.Attributes.DeleteOnCascade">
            <summary>
            When the field below will be deleting the current item will be deleted too
            </summary>
        </member>
        <member name="T:AventusSharp.Data.Attributes.UpdateOnCascade">
            <summary>
            When the field below will be deleting the current field will be set to null
            </summary>
        </member>
        <member name="T:AventusSharp.Data.Attributes.ForceInherit">
            <summary>
            Attribute used for pushin the class fileds inside children
            </summary>
        </member>
        <member name="T:AventusSharp.Data.Attributes.ForeignKey">
            Use it to add a link to your database (works only on int)
        </member>
        <member name="T:AventusSharp.Data.Attributes.ForeignKey`1">
            Use it to add a link to your database (works only on int)
        </member>
        <member name="T:AventusSharp.Data.Attributes.Nullable">
            <summary>
            Attribute used to allow a null value for the Property
            </summary>
        </member>
        <member name="T:AventusSharp.Data.Attributes.NotNullable">
            <summary>
            Attribute used to allow a null value for the Property
            </summary>
        </member>
        <member name="F:AventusSharp.Data.DataManagerConfigLog.printErrorInConsole">
            <summary>
            Print all errors from storable action in the console
            </summary>
        </member>
        <member name="M:AventusSharp.Data.DataMainManager.DataInit.GetTypeForGenericClass(System.Type)">
            <summary>
            Always the first generic parameter for an abstract class
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.DataMainManager.ManagerInformation.CanBeInit(System.Boolean)">
            Can be init only if there is at least one class not in force inherit
        </member>
        <member name="P:AventusSharp.Data.Manager.DataMemberInfo.Type">
            <summary>
            Interface for Type
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Manager.DataMemberInfo.Name">
            <summary>
            Interface for Name
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.DataMemberInfo.GetCustomAttribute``1">
            <summary>
            Interface for GetCustomAttribute
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Manager.DataMemberInfo.GetCustomAttributes(System.Boolean)">
            <summary>
            Interface for GetCustomAttributes
            </summary>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Manager.DataMemberInfo.GetValue(System.Object)">
            <summary>
            Interface for GetValue
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Manager.DataMemberInfo.SetValue(System.Object,System.Object)">
            <summary>
            Interface for set value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="P:AventusSharp.Data.Manager.DataMemberInfo.ReflectedType">
            <summary>
            Interface for ReflectedType
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.DB.GenericDatabaseDM`2.DefineShortLinks``1">
            <summary>
            Call the metho ShortLink to define which table will be in shortlink (only id inside object)
            </summary>
            <typeparam name="X"></typeparam>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetAllWithError">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetAllWithError``1">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#GetAllWithError``1">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetAll">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetAll``1">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#GetAll``1">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetByIdWithError(System.Int32)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetByIdWithError``1(System.Int32)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#GetByIdWithError``1(System.Int32)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetById(System.Int32)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetById``1(System.Int32)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#GetById``1(System.Int32)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetByIdsWithError(System.Collections.Generic.List{System.Int32})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetByIdsWithError``1(System.Collections.Generic.List{System.Int32})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#GetByIdsWithError``1(System.Collections.Generic.List{System.Int32})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.GetByIds``1(System.Collections.Generic.List{System.Int32})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#GetByIds``1(System.Collections.Generic.List{System.Int32})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.WhereWithError(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.WhereWithError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#WhereWithError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Where(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.CreateWithError``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#CreateWithError``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Create``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Create``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.CreateWithError``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#CreateWithError``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Create``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Create``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.UpdateWithError``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#UpdateWithError``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Update``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Update``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.UpdateWithError``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#UpdateWithError``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Update``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Update``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.DeleteWithError``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#DeleteWithError``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Delete``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Delete``1(System.Collections.Generic.List{``0})">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.DeleteWithError``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#DeleteWithError``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.Delete``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Manager.GenericDM`2.AventusSharp#Data#Manager#IGenericDM#Delete``1(``0)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Create(System.Collections.Generic.List{`0})">
            <summary>
            Create inside the DM a bunch of elements and return them
            If something went wrong an empty list will be returned
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.CreateWithError(System.Collections.Generic.List{`0})">
            <summary>
            Create inside the DM a bunch of elements and return them
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Create(`0)">
            <summary>
            Create the value inside the DM and return it
            If something went wrong a null is returned
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.CreateWithError(`0)">
            <summary>
            Create the value inside the DM and return it
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Create">
            <summary>
            Create the current element inside the DM
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.CreateWithError">
            <summary>
            Create the current element inside the DM
            If return Count == 0 it means no error and your item is stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Update(System.Collections.Generic.List{`0})">
            <summary>
            Update inside the DM a bunch of elements and return them
            If something went wrong an empty list will be returned
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.UpdateWithError(System.Collections.Generic.List{`0})">
            <summary>
            Update inside the DM a bunch of elements and return them
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Update(`0)">
            <summary>
            Update the value inside the DM and return it
            If something went wrong a null is returned
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.UpdateWithError(`0)">
            <summary>
            Update the value inside the DM and return it
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Update">
            <summary>
            Update the current element inside the DM
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.UpdateWithError">
            <summary>
            Update the current element inside the DM
            If return Count == 0 it means no error and your item is stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Delete(System.Collections.Generic.List{`0})">
            <summary>
            Delete inside the DM a bunch of elements and return them
            If something went wrong an empty list will be returned
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Delete(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete inside the DM a bunch of elements and return them
            If something went wrong an empty list will be returned
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.DeleteWithError(System.Collections.Generic.List{`0})">
            <summary>
            Delete inside the DM a bunch of elements and return them
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.DeleteWithError(System.Collections.Generic.List{System.Int32})">
            <summary>
            Delete inside the DM a bunch of elements and return them
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Delete(`0)">
            <summary>
            Delete the value inside the DM and return it
            If something went wrong a null is returned
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.DeleteWithError(`0)">
            <summary>
            Delete the value inside the DM and return it
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.Delete">
            <summary>
            Delete the current element inside the DM
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storable`1.DeleteWithError">
            <summary>
            Delete the current element inside the DM
            If return Count == 0 it means no error and your item is stored
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.DefaultDBStorage`1.CheckAutoCUDBeforeCreate``1(System.Collections.Generic.List{AventusSharp.Data.Storage.Default.TableMember.TableMemberInfoSql},``0)">
            <summary>
            Check auto CUD before insert item into DB
            </summary>
            <typeparam name="X"></typeparam>
            <param name="members"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.DefaultDBStorage`1.CheckReverseLinkAfterCreate``1(System.Collections.Generic.List{AventusSharp.Data.Storage.Default.TableMember.TableReverseMemberInfo},``0,System.Int32)">
            <summary>
            Check auto CUD for reverse link
            </summary>
            <typeparam name="X"></typeparam>
            <param name="reverseMembers"></param>
            <param name="item"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.DefaultDBStorage`1.GroupDataByType``1(System.Collections.IList)">
            <summary>
            Order data but type
            </summary>
            <param name="table"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.DefaultDBStorage`1.RunInsideTransaction``1(``0,System.Func{AventusSharp.Data.ResultWithDataError{``0}})">
            <summary>
            Run a function inside a transaction that ll be commit if no error otherwise rollback
            </summary>
            <typeparam name="Y"></typeparam>
            <param name="defaultValue"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.SqlTableName">
            <summary>
            The sql name of the class
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.Name">
            <summary>
            The name of the class
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.Parent">
            <summary>
            The class parent, for heritance
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.Children">
            <summary>
            The class children, for heritance
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.IsAbstract">
            <summary>
            Is the class abstract ?
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.IsInfinite">
            <summary>
            Has the class an infinite loop
            </summary>
            <remarks>True if the class itself or a field contains a reference on itself</remarks>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.Members">
            <summary>
            List of members for this class only
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.Primary">
            <summary>
            List of primaries members for this class only
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableInfo.ReverseMembers">
            <summary>
            List of reverse members for this class only
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.CustomTableMemberInfoSql.DefineSetValue(System.Action{System.Object,System.Object})">
            <summary>
            Param 1 => the object
            Param 2 => the value
            </summary>
            <param name="fctSetValue"></param>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.CustomTableMemberInfoSql.DefineSetSqlValue(System.Action{System.Object,System.Object})">
            <summary>
            Param 1 => the object
            Param 2 => the value
            </summary>
            <param name="fctSetSQLValue"></param>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.ParseAttribute(System.Attribute)">
            <summary>
            Return true if the loop must be break
            </summary>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.MemberType">
            <summary>
            Interface for Type
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.MemberTypeWithNullable">
            <summary>
            Interface for Type
            </summary>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.Name">
            <summary>
            Interface for Name
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.GetCustomAttribute``1">
            <summary>
            Interface for GetCustomAttribute
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.GetCustomAttributes(System.Boolean)">
            <summary>
            Interface for GetCustomAttributes
            </summary>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.GetValue(System.Object)">
            <summary>
            Interface for GetValue
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.SetValue(System.Object,System.Object)">
            <summary>
            Interface for set value
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="P:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.ReflectedType">
            <summary>
            Interface for ReflectedType
            </summary>
        </member>
        <member name="M:AventusSharp.Data.Storage.Default.TableMember.TableMemberInfo.GetRealMember(System.Object)">
            <summary>
            Avoid Getting a member with generic param
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Routes.Request.RouterBody.GetData(System.Type,System.String)">
            <summary>
            Transform data into object T. Add path to tell where to find data to cast
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propPath">Path where to find data</param>
            <returns></returns>
        </member>
        <member name="T:AventusSharp.Tools.AventusJsonConverter">
            <summary>
            Custom converter to add type when we need it (avoid dico and list bc crash in js)
            </summary>
        </member>
        <member name="M:AventusSharp.Tools.AventusJsonConverter.CanConvert(System.Type)">
            <summary>
            always true because we can always convert until object
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:AventusSharp.Tools.AventusJsonConverter.CanRead">
            <summary>
            always false because its a writer not a reader
            </summary>
        </member>
        <member name="M:AventusSharp.Tools.AventusJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Throw an error because this class is a writer not a reader
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Tools.AventusJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:AventusSharp.Tools.InterfaceDumperExtension.GetCurrentInterfaces(System.Type)">
            <summary>
            List interfaces of an interface
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Tools.VoidWithError`1.ToGeneric">
            <summary>
            Transform to generic errors
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Tools.ResultWithError`2.ToGeneric``1(System.Func{`0,``0})">
            <summary>
            Transform to generic errors
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Tools.ResultWithError`2.ToGeneric">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.Tools.TypeTools.GetMemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Get the string that corresponds to the member passes in <paramref name="memberAccess"/>
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="memberAccess"></param>
            <returns></returns>
        </member>
        <member name="T:AventusSharp.WebSocket.Attributes.ListenOnBoot">
            <summary>
            Determine if the typescript must start listening this event when the connection open
            </summary>
        </member>
        <member name="M:AventusSharp.WebSocket.Request.WebSocketRouterBody.GetData(System.Type,System.String)">
            <summary>
            Transform data into object T. Add path to tell where to find data to cast
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propPath">Path where to find data</param>
            <returns></returns>
        </member>
        <member name="T:AventusSharp.WebSocket.WebSocketConnection">
            <summary>
            Class that represent a connection Ws between Client and Server
            </summary>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.GetContext">
            <summary>
            get context of the request
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.GetWebSocket">
            <summary>
            get WebSocket class from c#
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.#ctor(Microsoft.AspNetCore.Http.HttpContext,System.Net.WebSockets.WebSocket,AventusSharp.WebSocket.WsEndPoint)">
            <summary>
            default constructor
            </summary>
            <param name="context">context of request HTTP</param>
            <param name="webSocket">websocket create</param>
            <param name="instance">Instance of WebsocketInstance (parent)</param>
            <param name="ownerId">Owner id</param>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.Start">
            <summary>
            Start the WebSocket connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.Send(System.String,System.String,System.String)">
            <summary>
            Send a msg though this connection
            </summary>
            <param name="eventName">Event name</param>
            <param name="data">string to send</param>
            <param name="uid">Uid to identify request</param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.Send(System.String,Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Send a msg though this connection
            </summary>
            <param name="eventName">Event name</param>
            <param name="o">Object to send</param>
            <param name="uid">Uid to identify request</param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.Send(System.Byte[])">
            <summary>
            Send a msg though this connection
            </summary>
            <param name="dataToSend">Object to send</param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketConnection.Send(System.String,System.Object,System.String)">
            <summary>
            Send a msg though this connection
            </summary>
            <param name="eventName"></param>
            <param name="obj"></param>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WebSocketMiddleware.OnRequest(Microsoft.AspNetCore.Http.HttpContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Middleware function
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.Use(System.Func{AventusSharp.WebSocket.WebSocketConnection,System.String,AventusSharp.WebSocket.Request.WebSocketRouterBody,System.String,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
            Add action when a request go though this WS instance
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.CanOpenConnection(Microsoft.AspNetCore.Http.HttpContext,System.Net.WebSockets.WebSocket)">
            <summary>
            define if the connection can be open
            exemple if authentification needed, return false if not login
            </summary>
            <param name="context"></param>
            <param name="webSocket"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.StartNewInstance(Microsoft.AspNetCore.Http.HttpContext,System.Net.WebSockets.WebSocket)">
            <summary>
            Start a new connection WS between server and client
            </summary>
            <param name="context"></param>
            <param name="webSocket"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.RemoveInstance(AventusSharp.WebSocket.WebSocketConnection)">
            <summary>
            Remove connection of WS 
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.Route(AventusSharp.WebSocket.WebSocketConnection,System.String,AventusSharp.WebSocket.Request.WebSocketRouterBody,System.String)">
            <summary>
            This function is called to route to request to correct route
            </summary>
            <param name="connection"></param>
            <param name="path"></param>
            <param name="body"></param>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.Broadcast(System.String,System.String,System.String,System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection},System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection})">
            <summary>
            Dispatch a message to all active connections
            </summary>
            <param name="eventName"></param>
            <param name="data"></param>
            <param name="uid"></param>
            <param name="connections"></param>
            <param name="omit"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.Broadcast(System.String,Newtonsoft.Json.Linq.JObject,System.String,System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection},System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection})">
            <summary>
            Dispatch a message to all active connections
            </summary>
            <param name="eventName"></param>
            <param name="o"></param>
            <param name="uid"></param>
            <param name="connections"></param>
            <param name="omit"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.Broadcast(System.Byte[],System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection},System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection})">
            <summary>
            Dispatch a message to all active connections
            </summary>
            <param name="dataToSend"></param>
            <param name="connections"></param>
            <param name="omit"></param>
            <returns></returns>
        </member>
        <member name="M:AventusSharp.WebSocket.WsEndPoint.Broadcast(System.String,System.Object,System.String,System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection},System.Collections.Generic.List{AventusSharp.WebSocket.WebSocketConnection})">
            <summary>
            Dispatch a message to all active connections
            </summary>
            <param name="eventName"></param>
            <param name="obj"></param>
            <param name="uid"></param>
            <param name="connections"></param>
            <param name="omit"></param>
            <returns></returns>
        </member>
    </members>
</doc>
