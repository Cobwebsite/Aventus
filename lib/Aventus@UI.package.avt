// Aventus@UI:1.0.0
//#region js def //
declare global {

namespace Aventus{
type ProcessConfig = {
    handleErrors: (msg: string, errors: Aventus.GenericError[]) => void;
};

namespace Toast {
type ToastPosition = 'bottom' | 'top' | 'bottom left' | 'top left' | 'bottom right' | 'top right';
}

class ProgressCircle extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: ProgressCircle) => {
        target.render();
    })
	value: number;
    @Property((target: ProgressCircle) => {
        target.render();
    })
	stroke_width: number;
    @ViewElement()
	protected containerEl: HTMLDivElement;
    private svg?;
    private backCircle?;
    private percentCircle?;
    private getLimitedValue;
    protected render(): void;
    protected postCreation(): void;
}

namespace Navigation {
type LastParameter<T extends any> = T extends (...args: any) => any ? Last<Parameters<T>> : never;
}

namespace Modal {
interface ModalOptions<T = any> {
    closeWithEsc?: boolean;
    closeWithClick?: boolean;
    rejectValue?: T | null;
}
}

class Tracker {
    private readonly velocityMultiplier;
    updateTime: number;
    delta: {
        x: number;
        y: number;
    };
    velocity: {
        x: number;
        y: number;
    };
    lastPosition: {
        x: number;
        y: number;
    };
    constructor(touch: Touch | PointerEvent | MouseEvent);
    update(touch: Touch | PointerEvent | MouseEvent): void;
    private getPointerData;
    private getPosition;
}

namespace Layout {
class Row extends Aventus.WebComponent implements Aventus.DefaultComponent {
    constructor();
}
}

namespace Lib {
enum SpecialTouch {
    Backspace = 0,
    Insert = 1,
    End = 2,
    PageDown = 3,
    PageUp = 4,
    Escape = 5,
    AltGraph = 6,
    Control = 7,
    Alt = 8,
    Shift = 9,
    CapsLock = 10,
    Tab = 11,
    Delete = 12,
    ArrowRight = 13,
    ArrowLeft = 14,
    ArrowUp = 15,
    ArrowDown = 16,
    Enter = 17
}
}

namespace Lib {
interface ShortcutManagerOptions {
    replaceTemp?: boolean;
    preventDefault?: boolean;
}
}

class Collapse extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	open: boolean;
    @Attribute()
	no_animation: boolean;
    /**
     *
     */
    protected transitionEnd(e: Event): void;
    /**
     *
     */
    protected toggleOpen(): void;
}

namespace Layout {
interface ColOptions {
    use_container?: boolean;
}
}

namespace Layout {
class Col extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	private static use_container;
    static configure(options: Layout.ColOptions): void;
    @Attribute()
	use_container: boolean;
    @Attribute()
	size: number;
    @Attribute()
	size_xs: number;
    @Attribute()
	size_sm: number;
    @Attribute()
	size_md: number;
    @Attribute()
	size_lg: number;
    @Attribute()
	size_xl: number;
    @Attribute()
	offset: number;
    @Attribute()
	offset_xs: number;
    @Attribute()
	offset_sm: number;
    @Attribute()
	offset_md: number;
    @Attribute()
	offset_lg: number;
    @Attribute()
	offset_xl: number;
    @Attribute()
	offset_right: number;
    @Attribute()
	offset_right_xs: number;
    @Attribute()
	offset_right_sm: number;
    @Attribute()
	offset_right_md: number;
    @Attribute()
	offset_right_lg: number;
    @Attribute()
	offset_right_xl: number;
    @Attribute()
	center: boolean;
}
}

class Img extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	cache: boolean;
    @Property((target: Img) => {
        target.onSrcChanged();
    })
	src?: string;
    @Property((target: Img) => {
        if(target.src != "") {
            target.calculateSize();
        }
    })
	mode: 'stretch' | 'contains' | 'cover';
    @ViewElement()
	protected imgEl: HTMLImageElement;
    @ViewElement()
	protected svgEl: HTMLDivElement;
    private isCalculing?;
    private maxCalculateSize;
    private ratio;
    private resizeObserver?;
    private calculateSize;
    private onSrcChanged;
    protected postDestruction(): void;
    protected postCreation(): void;
}

namespace Form {
function isSubclassOf(subClass: Function, superClass: Function): boolean;
}

namespace Form {
type ExtractError<X> = [X] extends [Aventus.ResultWithError<infer Y>] ? Y : [X] extends [Aventus.VoidWithError] ? void : X;
}

namespace Navigation {
type PageFormConfig = {
    submitWithEnter?: boolean;
    autoLoading?: boolean;
};
}

namespace Navigation {
abstract class Page extends Aventus.WebComponent implements Aventus.DefaultComponent {

    @Property((target: Page) => {
            if(target.visible) {
                target.onShow();
            }
            else {
                target.onHide();
            }
        })
	visible: boolean;
    router?: Navigation.Router;
    protected state?: Aventus.State;
    abstract configure(): Aventus.Asyncable<Navigation.Page.PageConfig>;
    show(state?: Aventus.State): any;
    hide(): any;
    onShow(): void;
    onHide(): void;
    /**
     * Add custom check
     * Return true if evrything is ok
     * False will prevent showing
     * string or state will redirect to the page
     */
    isAllowed(state: Aventus.State, pattern: string, router: Navigation.Router): Aventus.Asyncable<boolean | Aventus.State | string>;
}
}

namespace Navigation.Page {
interface PageConfig {
    title?: string;
    description?: string;
    keywords?: string[];
    destroy?: boolean;
}
}

namespace Form {
interface InternalFormPart<T = any> {
    /**
     * The value of the form part, which can be of type T or an object with get and set methods.
     */
    value: {
        get: () => T;
        set: (value: T | undefined) => void;
    };
    /**
     * A validation function for the form part.
     */
    validate?: Form.FormPartValidate<T>;
    /**
     * Indicates whether validation should be performed on value change.
     */
    validateOnChange?: boolean;
    onValueChange: Aventus.Callback<() => void>;
    onValidation: Aventus.Callback<(errors: string[]) => Promise<string[]>, Promise<string[]>>;
    register: (element: Form.IFormElement) => void;
    unregister: (element: Form.IFormElement) => void;
    test: () => Promise<boolean>;
    handler: Form.FormHandler<any>;
}
}

class RouterStateManager extends Aventus.StateManager {
    static getInstance(): RouterStateManager;
}

namespace Navigation {
@Deprecated()
class RouterLink extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	state?: string;
    /**
     * If set define when active class is added otherwhise class active is added when state define is active
     */
    @Attribute()
	active_state?: string;
    onActiveChange: Aventus.Callback<(isActive: boolean) => void>;
    protected addClickEvent(): void;
    protected registerActiveStateListener(): void;
    protected prevent(e: Event): void;
    protected postCreation(): void;
    private __ad88894dc7dea62195d227cdd21fc210method0;
}
}

namespace Navigation {
class Link extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	to?: string;
    /**
     * If set define when active class is added otherwhise class active is added when to define is active
     */
    @Attribute()
	active_pattern?: string;
    onActiveChange: Aventus.Callback<(isActive: boolean) => void>;
    protected addClickEvent(): void;
    protected registerActivetoListener(): void;
    protected prevent(e: Event): void;
    protected postCreation(): void;
    private __7e4c6c9fe944acd9b1174c61347fdcb6method0;
}
}

namespace Navigation {
type RouteAsyncOption = {
    route: string;
    scriptUrl: string;
    render: () => new () => Navigation.Page;
};
}

namespace Form {
type WithError<X> = [X] extends [void] ? Aventus.VoidWithError : Aventus.ResultWithError<X>;
}

namespace Form {
type InternalForm<T> = {
    [K in keyof T]?: Form.InternalFormPart<T[K]>;
};
}

namespace Form {
type Constructor<T, AllowAbstract extends boolean = false> = AllowAbstract extends false ? new (...args: any[]) => T : abstract new (...args: any[]) => T;
}

namespace Toast {
type ToastManagerOptions = {
    defaultToast: Form.Constructor<Toast.ToastElement>;
    defaultToastManager: Form.Constructor<Toast.ToastManager>;
    defaultPosition: Toast.ToastPosition;
    defaultDelay: number;
    heightLimitPercent: number;
};
}

namespace Navigation {
type KeyResult<C extends Form.Constructor<Aventus.HttpRoute>, M> = M extends undefined ? ___Aventus.Navigation.FirstKey<InstanceType<C>> : M;
}

namespace Navigation {
type Result<C extends Form.Constructor<Aventus.HttpRoute>, M extends keyof InstanceType<C>> = InstanceType<C>[M] extends (...args: any) => any ? ReturnType<InstanceType<C>[M]> : any;
}

namespace Layout.Tabs {
abstract class Tabs<T extends Layout.Tabs.Tab, U extends Layout.Tabs.TabHeader<T>> extends Aventus.WebComponent implements Aventus.DefaultComponent {

    @ViewElement()
	protected headerEl: HTMLDivElement;
    @ViewElement()
	protected bodyEl: HTMLDivElement;
    protected activeHeader?: Layout.Tabs.TabHeader<T>;
    protected tabs: {
        [label: string]: T;
    };
    protected loadTabs(): any;
    setActive(tabHeader: Layout.Tabs.TabHeader<T> | number | string): any;
    protected abstract defineTabHeader(): Form.Constructor<U>;
    protected postCreation(): void;
}
}

namespace Navigation {
type RouterOptions = {
    page404?: Form.Constructor<Navigation.Page>;
    destroyPage?: boolean;
};
}

namespace Form {
type FormValidateResult = Aventus.Asyncable<string | string[] | boolean | undefined>;
}

namespace Form {
abstract class Validator<T> {

    static Test(validators: Form.Constructor<Form.Validator<any>> | Form.Constructor<Form.Validator<any>>[], value: any, name: string, globalValidation: () => Promise<void>): Promise<string[] | undefined>;
    @BindThis()
	abstract validate(value: T | undefined, name: string, globalValidation: () => Promise<void>): Form.FormValidateResult;
}
}

namespace Form.Validators {
class Required extends Form.Validator<any> {
    static msg: string;
    private _msg;
    constructor(msg?: string);
    /**
     * @inheritdoc
     */
    validate(value: any | undefined, name: string, globalValidation: () => Promise<void>): string | boolean;
}
}

namespace Form.Validators {
class Email extends Form.Validator<string> {
    static msg: string;
    private _msg;
    constructor(msg?: string);
    /**
     * @inheritdoc
     */
    validate(value: string | undefined, name: string, globalValidation: () => Promise<void>): boolean | string;
}
}

namespace Form {
type FormValidate = (field: string, value: unknown) => Form.FormValidateResult;
}

namespace Form {
type FormPartValidate<T> = (value: T | undefined, name: string, globalValidation: () => Promise<void>) => Form.FormValidateResult;
}

namespace Form {
type FormHandlerConfig<T> = {
    validate?: Form.FormValidate;
    validateOnChange?: boolean;
    handleValidateNoInputError?: (errors: {
        [K in keyof T]?: string[];
    }) => Aventus.Asyncable<void>;
    handleExecuteNoInputError?: (errors: Aventus.GenericError[]) => Aventus.Asyncable<void>;
};
}

namespace Form {
type FormPartValidateList<T> = Form.FormPartValidate<T> | Form.Constructor<Form.Validator<T>> | Form.Validator<T> | (Form.Constructor<Form.Validator<T>> | Form.Validator<T>)[];
}

namespace Form {
interface FormPart<T = any> {
    /**
     * A validation function for the form part.
     */
    validate?: Form.FormPartValidateList<T>;
    /**
     * Indicates whether validation should be performed on value change.
     */
    validateOnChange?: boolean;
}
}

namespace Form {
type FormSchema<T> = {
    [K in keyof T]: Form.FormPart<T[K]> | Form.FormPartValidateList<T[K]>;
};
}

namespace Form {
type SubmitFunction<T, X> = Aventus.Asyncable<Form.WithError<X>> | ((body: T) => Aventus.Asyncable<Form.WithError<X>>);
}

namespace Form {
interface IFormElement<T = any> {
    errors: string[];
    value: T | undefined;
    onChange: Aventus.Callback<(value: T) => void>;
    formPart?: Form.InternalFormPart<T>;
}
}

namespace Form {
@Storybook()
abstract class FormElement<T> extends Aventus.WebComponent implements Aventus.DefaultComponent, Form.IFormElement<T> {
    static get formAssociated(): boolean;
    @Attribute()
	protected has_errors: boolean;
    @Property()
	disabled: boolean;
    /**
     * Value for the current form element
     */
    @Watch((target: FormElement<T>) => {
            target.onValueChange(target.value);
        })
	value: T | undefined;
    /**
     * List of errors. You must display errors in child component
     */
    @Watch((target: FormElement<T>) => {
            target.onErrorsChange();
        })
	errors: string[];
    private _form?;
    @Injectable()
	get form(): Form.InternalFormPart<T> | undefined;
    @Injectable()
	set form(value: Form.InternalFormPart<T> | undefined);
    protected internals: ElementInternals;
    protected canLinkValueToForm: boolean;
    protected handler?: Form.IForm;
    constructor();
    onChange: Aventus.Callback<(value: T | undefined) => void>;
    @BindThis()
	protected refreshValueFromForm(): void;
    protected unlinkFormPart(): void;
    protected linkFormPart(): void;
    @BindThis()
	onFormValidation(errors: string[]): Promise<string[]>;
    validate(): Promise<boolean>;
    /**
     * Define your customs validations rules
     */
    protected validation(): Promise<string[]>;
    /**
     *
     */
    protected clearErrors(): void;
    protected triggerChange(value: T | undefined): void;
    protected onValueChange(value: T | undefined): void;
    protected onErrorsChange(): void;
    protected linkErrorToForm(): void;
    protected linkValueToForm(): void;
    protected formAssociatedCallback(form: HTMLFormElement): void;
    protected formDisabledCallback(disabled: boolean): void;
    protected postCreation(): void;
    protected postDestruction(): void;
}
}

namespace Form {
interface IForm {
    registerElement(element: Form.FormElement<any>): Form.IForm;
    registerSubmit(element: Form.ButtonElement): Form.IForm;
    requestSubmit(): Aventus.Asyncable<void>;
}
}

namespace Form {
abstract class ButtonElement extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static get formAssociated(): boolean;
    @Property()
	type: 'button' | 'submit' | 'reset' | 'menu';
    protected internals: ElementInternals;
    protected handler?: Form.IForm;
    constructor();
    protected triggerSubmit(): any;
    protected postCreation(): void;
}
}

namespace Form {
class Form<T extends any = any> extends Aventus.WebComponent implements Aventus.DefaultComponent, Form.IForm {

    static create<T>(schema: Form.FormSchema<T>, config?: Form.FormHandlerConfig<T>): Form.FormHandler<T>;
    static configure(value: Form.FormHandlerConfig<any>): void;
    static get defaultConfig(): Form.FormHandlerConfig<any> | undefined;
    static set formElements(value: Form.Constructor<Form.IForm, true>[]);
    static get formElements(): Form.Constructor<Form.IForm, true>[];
    @Injectable()
	form?: Form.FormHandler<any>;
    @Injectable()
	request?: Form.SubmitFunction<T, any>;
    protected elements: Form.FormElement<any>[];
    protected btns: Form.ButtonElement[];
    onSubmit: Aventus.Callback<() => void>;
    @BindThis()
	protected checkEnter(e: KeyboardEvent): void;
    registerElement(element: Form.FormElement<any>): Form.Form;
    registerSubmit(element: Form.ButtonElement): Form.Form;
    requestSubmit(): Promise<void>;
}
}

namespace Navigation {
abstract class PageForm<T, U> extends Navigation.Page implements Aventus.DefaultComponent, Form.IForm {
    private _form;
    get form(): Form.FormHandler<T>;
    protected elements: Form.FormElement<any>[];
    protected btns: Form.ButtonElement[];
    constructor();
    protected abstract formSchema(): Form.FormSchema<T>;
    protected formConfig(): Form.FormHandlerConfig<T>;
    protected pageConfig(): Navigation.PageFormConfig;
    protected abstract defineSubmit(submit: (fct: Form.SubmitFunction<T, U>) => Promise<Form.WithError<U> | null>): Promise<Form.WithError<U> | null>;
    submit(): unknown;
    protected setLoading(isLoading: boolean): void;
    @BindThis()
	protected checkEnter(e: KeyboardEvent): void;
    registerElement(element: Form.FormElement<any>): Navigation.PageForm<T, U>;
    registerSubmit(element: Form.ButtonElement): Navigation.PageForm<T, U>;
    requestSubmit(): Promise<void>;
}
}

namespace Navigation {
abstract class PageFormRoute<C extends Form.Constructor<Aventus.HttpRoute>, M extends undefined | keyof InstanceType<C> = undefined, RM extends Navigation.KeyResult<C, M> = Navigation.KeyResult<C, M>> extends Navigation.PageForm<Navigation.LastParameter<InstanceType<C>[RM]>, Form.ExtractError<Awaited<Navigation.Result<C, RM>>>> implements Aventus.DefaultComponent {

    protected defineSubmit(submit: (fct: Form.SubmitFunction<Navigation.LastParameter<InstanceType<C>[RM]>, Form.ExtractError<Awaited<Navigation.Result<C, RM>>>>) => Promise<Form.WithError<Form.ExtractError<Awaited<Navigation.Result<C, RM>>>> | null>): Promise<Form.WithError<Form.ExtractError<Awaited<Navigation.Result<C, RM>>>> | null>;
    abstract route(): M extends undefined ? C : [C, M];
    beforeSubmit(): Aventus.Asyncable<void>;
    abstract onResult(result: Awaited<Navigation.Result<C, RM> | null>): Aventus.Asyncable<void>;
}
}

namespace Form {
class FormHandler<T> {
    @Internal()
	private static _globalConfig?;
    @Internal()
	private static _IFormElements;
    private __watcher;
    get item(): T;
    set item(item: T);
    get parts(): Form.InternalForm<T>;
    private _elements;
    get elements(): {
        [K in keyof T]?: Form.IFormElement[];
    };
    private _globalValidation?;
    private _validateOnChange;
    private _handleValidateNoInputError?;
    private _handleExecuteNoInputError?;
    defaultValues: T;
    onItemChange: Aventus.Callback<(action: Aventus.WatchAction, path: string, value: any) => void>;
    constructor(schema: Form.FormSchema<T>, config?: Form.FormHandlerConfig<T>, defaultValues?: T);
    private writeValidationIntoConsole;
    private writeErrorIntoConsole;
    protected transformForm(form: Form.FormSchema<T>): Form.InternalForm<T>;
    protected transformFormPart(key: keyof T, part: Form.FormPart | undefined): void;
    protected onWatcherChanged(action: Aventus.WatchAction, path: string, value: any): any;
    private _validate;
    validate(key: keyof T): Promise<boolean>;
    validate(): Promise<boolean>;
    submit<X>(query: Form.SubmitFunction<T, X>): Promise<Form.WithError<X> | null>;
    execute<X>(query: Form.SubmitFunction<T, X>): Promise<Form.WithError<X>>;
    parseErrors<X>(queryResult: Form.WithError<X>): Aventus.GenericError[];
    reset(): void;
}
}

namespace Lib {
class ShortcutManager {
    private static memory;
    private static autoPrevents;
    private static isInit;
    private static arrayKeys;
    private static options;
    private static replacingMemory;
    private static isTxt;
    private static getText;
    static subscribe(combinaison: (Lib.SpecialTouch | string)[] | (Lib.SpecialTouch | string), cb: () => void | false | Promise<void>, options?: Lib.ShortcutManagerOptions): void;
    static unsubscribe(combinaison: (Lib.SpecialTouch | string)[] | (Lib.SpecialTouch | string), cb: () => void | false | Promise<void>): void;
    private static onKeyDown;
    private static onKeyUp;
    static init(): void;
    private static uninit;
}
}

namespace Layout {
class GridHelper extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: GridHelper) => {
            target.rulerLeftEl.style.setProperty("--ruler-size", target.ruler_size + target.unit);
            target.rulerTopEl.style.setProperty("--ruler-size", target.ruler_size + target.unit);
            target.lockEl.style.setProperty("--ruler-size", target.ruler_size + target.unit);
        })
	unit: 'px' | 'rem' | 'cm' | 'mm' | 'in';
    @Property()
	nb_col: number;
    @Property((target: GridHelper) => {

        })
	nb_row: number;
    @Property()
	col_width: number;
    @Property((target: GridHelper) => {

        })
	row_height: number;
    @Attribute()
	show_rulers: boolean;
    @Attribute()
	show_grid: boolean;
    @Attribute()
	show_ruler: boolean;
    @Attribute()
	show_guides: boolean;
    @Attribute()
	lock: boolean;
    @Attribute()
	visible: boolean;
    @Property((target: GridHelper) => {
            target.rulerLeftEl.style.setProperty("--ruler-size", target.ruler_size + target.unit);
            target.rulerTopEl.style.setProperty("--ruler-size", target.ruler_size + target.unit);
            target.lockEl.style.setProperty("--ruler-size", target.ruler_size + target.unit);
        })
	ruler_size: number;
    @Property()
	step: number;
    @Property()
	step_big: number;
    @Property()
	magnetic: number;
    @ViewElement()
	protected gridEl: HTMLDivElement;
    @ViewElement()
	protected colsEl: HTMLDivElement;
    @ViewElement()
	protected rowsEl: HTMLDivElement;
    @ViewElement()
	protected rulerTopEl: HTMLDivElement;
    @ViewElement()
	protected rulerLeftEl: HTMLDivElement;
    @ViewElement()
	protected rulerTopContentEl: HTMLDivElement;
    @ViewElement()
	protected rulerLeftContentEl: HTMLDivElement;
    @ViewElement()
	protected guidesEl: HTMLDivElement;
    @ViewElement()
	protected lockEl: HTMLDivElement;
    inPx(nb: number): number;
    fromPx(nbPx: number): number;
    /**
     *
     */
    protected toggleLock(): void;
    protected draw(): void;
    protected drawRulerTop(): void;
    protected drawRulerLeft(): void;
    protected addDragLeft(): void;
    protected addDragTop(): void;
    createGuideFromLeft(left: number): void;
    createGuideFromTop(top: number): void;
    protected addShortCut(): void;
    protected addResize(): void;
    save(): void;
    reload(): void;
    protected postCreation(): void;
}
}

namespace Layout {
class GridGuideHelper extends Aventus.WebComponent implements Aventus.DefaultComponent {

    @Attribute()
	direction: "y" | "x";
    @Attribute()
	moving: boolean;
    @ViewElement()
	protected positionEl: HTMLDivElement;
    container: Layout.GridHelper;
    displayValue(v: number): void;
    @BindThis()
	onStart(): void;
    protected applyMagnetic(valuePx: number): number;
    @BindThis()
	onMoveX(e: Aventus.NormalizedEvent): void;
    @BindThis()
	onMoveY(e: Aventus.NormalizedEvent): void;
    @BindThis()
	onStop(): void;
    protected postCreation(): void;
}
}

class TouchRecord {
    private _activeTouchID?;
    private _touchList;
    private get _primitiveValue();
    isActive(): boolean;
    getDelta(): any;
    getVelocity(): any;
    getNbOfTouches(): any;
    getTouches(): any;
    getEasingDistance(damping: number): {
        x: number;
        y: number;
    };
    track(evt: TouchEvent | PointerEvent | MouseEvent): {
        [id: number]: Tracker;
    };
    update(evt: TouchEvent | PointerEvent | MouseEvent): {
        [id: number]: Tracker;
    };
    release(evt: TouchEvent | PointerEvent | MouseEvent): void;
    private _getIdentifier;
    private _add;
    private _renew;
    private _delete;
    private _has;
    private _setActiveID;
    private _getActiveTracker;
}

namespace Layout {
class Scrollable extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static lock(element: Aventus.WebComponent): void;
    static unlock(element: Aventus.WebComponent): void;
    /**
     * Set the zoom to apply for the container
     */
    @Property((target: Scrollable) => {
            target.changeZoom();
        })
	zoom: number;
    @Attribute()
	min_zoom: number;
    @Attribute()
	max_zoom: number;
    @Attribute()
	private y_scroll_visible;
    @Attribute()
	private x_scroll_visible;
    /**
     * Determine if scrollbar will be floating or not
     */
    @Attribute()
	floating_scroll: boolean;
    /**
     * Determine if x scroll is allowed
     */
    @Attribute()
	x_scroll: boolean;
    /**
     * Determine if x scroll is allowed
     */
    @Attribute()
	y_scroll: boolean;
    /**
     * If true, the scrollers will hide if they're not in use
     */
    @Attribute()
	auto_hide: boolean;
    @Attribute()
	break: number;
    /**
     * Disable user action
     */
    @Attribute()
	disable: boolean;
    @Attribute()
	private no_user_select;
    /**
     * Allow scroll by dragging with the mouse
     */
    @Attribute()
	mouse_drag: boolean;
    @Attribute()
	pinch: boolean;
    @ViewElement()
	private contentWrapper;
    @ViewElement()
	private contentZoom;
    @ViewElement()
	private mainContainer;
    @ViewElement()
	private contentHidder;
    @ViewElement()
	private verticalScrollerContainer;
    @ViewElement()
	private verticalScroller;
    @ViewElement()
	private horizontalScrollerContainer;
    @ViewElement()
	private horizontalScroller;
    private observer?;
    private display;
    private max;
    private margin;
    private position;
    private momentum;
    private contentWrapperSize;
    private scroller;
    private scrollerContainer;
    private hideDelay;
    private touchRecord;
    private pointerCount;
    private loadedOnce;
    private savedPercent?;
    private isDragScroller;
    private cachedSvg?;
    private previousMidPoint?;
    private previousDistance?;
    private startTranslate;
    get x(): number;
    get y(): number;
    get xMax(): number;
    get yMax(): number;
    constructor();
    /**
     * Callback trigger when the scroll change
     */
    onScrollChange: Aventus.Callback<(x: number, y: number) => void>;
    onZoomChange: Aventus.Callback<(zoom: number) => void>;
    private renderAnimation;
    private createAnimation;
    private nextPosition;
    private scrollDirection;
    /**
     * @param percent number between 0 - 100
     */
    private scrollDirectionPercent;
    private correctScrollValue;
    private triggerScrollChange;
    /**
     * Shortcut for functions scrollX and scrollY
     */
    scrollToPosition(x: number, y: number): void;
    /**
     * Scroll left - right
     */
    scrollX(x: number): void;
    /**
    * Scroll left - right
    * @param x percent between 0 - 100
    */
    scrollXPercent(x: number): void;
    /**
     * Scroll bottom - top
     */
    scrollY(y: number): void;
    /**
    * Scroll bottom - top
    * @param y percent between 0 - 100
    */
    scrollYPercent(y: number): void;
    private autoScrollInterval;
    private autoScrollSpeed;
    private startAutoScrollRight;
    /**
     * Define a speed percent to auto scroll right
     */
    autoScrollRight(percent?: number): void;
    /**
     * Stop auto scrolling right
     */
    stopAutoScrollRight(): void;
    private startAutoScrollLeft;
    /**
     * Define a speed percent to auto scroll left
     */
    autoScrollLeft(percent?: number): void;
    /**
     * Stop auto scrolling left
     */
    stopAutoScrollLeft(): void;
    private startAutoScrollTop;
    /**
     * Define a speed percent to auto scroll top
     */
    autoScrollTop(percent?: number): void;
    /**
     * Stop auto scrolling top
     */
    stopAutoScrollTop(): void;
    private startAutoScrollBottom;
    /**
     * Define a speed percent to auto scroll bottom
     */
    autoScrollBottom(percent?: number): void;
    /**
     * Stop auto scrolling bottom
     */
    stopAutoScrollBottom(): void;
    private createMatrix;
    private getMidPoint;
    private getDistance;
    /**
     * Zoom on a specific point
     */
    zoomOnPoint(clientX: number, clientY: number, newZoom: number): void;
    private pinchAction;
    private pressManager;
    private addAction;
    private addActionMove;
    private removeActionMove;
    private addScrollDrag;
    private shouldStopPropagation;
    private addDelta;
    private onWheel;
    private onTouchStartPointer;
    private onTouchStart;
    private onTouchMovePointer;
    private onTouchMove;
    private onTouchEndPointer;
    private onTouchEnd;
    private calculateRealSize;
    private calculatePositionScrollerContainer;
    private calculatePositionScrollerContainerY;
    private calculatePositionScrollerContainerX;
    private calculateSizeScroller;
    private changeZoom;
    /**
     * Inform that the size has changed
     */
    private dimensionRefreshed;
    private createResizeObserver;
    private addResizeObserver;
    protected postCreation(): void;
}
}

namespace Layout.Tabs {
abstract class TabHeader<T extends Layout.Tabs.Tab> extends Aventus.WebComponent implements Aventus.DefaultComponent {

    @Attribute()
	active: boolean;
    private _tab;
    get tab(): T;
    protected tabs: Layout.Tabs.Tabs<T, this>;
    init(tab: T, tabs: Layout.Tabs.Tabs<T, this>): any;
    abstract render(): Aventus.Asyncable<void>;
    onPress(): void;
    protected addPress(): void;
    protected postCreation(): void;
}
}

namespace Layout.Tabs {
abstract class Tab extends Aventus.WebComponent implements Aventus.DefaultComponent {

    @Attribute()
	selected: boolean;
    @InternalProtected()
	protected tabHeader?: Layout.Tabs.TabHeader<this>;
    get headerContent(): HTMLElement[];
    abstract identifier(): string;
}
}

namespace Modal {
abstract class ModalElement<T, U extends Modal.ModalOptions<T> = Modal.ModalOptions<T>> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    private static defaultCloseWithEsc;
    private static defaultCloseWithClick;
    private static defaultRejectValue;
    static configure(options: Partial<Modal.ModalOptions<any>>): void;
    protected static _show<T extends Modal.ModalElement<U, X>, U = Modal.ExtractTypeModal<T>, X extends Modal.ModalOptions<U> = Modal.ModalOptions<U>>(modal: T, element?: Element): Promise<U | null>;
    protected cb?: (response: T | null) => void;
    @Watch((target: ModalElement<T, U>, action: Aventus.WatchAction, path: string, value: any) => {
            target.onOptionsChanged();
        })
	protected options: U;
    @ViewElement()
	protected modalEl: HTMLDivElement;
    protected pressManagerClickClose?: Aventus.PressManager;
    protected pressManagerPrevent?: Aventus.PressManager;
    constructor();
    abstract configure(): U;
    protected onOptionsChanged(): void;
    /**
     * Define the callback
     */
    private init;
    show(element?: Element): Promise<T | null>;
    @BindThis()
	protected close(): void;
    @BindThis()
	protected reject(no_close?: boolean): void;
    @BindThis()
	protected resolve(response: T, no_close?: boolean): void;
}
}

namespace Modal {
type ExtractTypeModal<X extends Modal.ModalElement<U, Y>, U = any, Y extends Modal.ModalOptions = any> = X extends Modal.ModalElement<infer U, Y> ? U : never;
}

namespace Navigation {
class Default404 extends Navigation.Page implements Aventus.DefaultComponent {
    /**
     * @inheritdoc
     */
    configure(): Aventus.Asyncable<Navigation.Page.PageConfig>;
}
}

namespace Navigation {
abstract class Router extends Aventus.WebComponent implements Aventus.DefaultComponent {
    protected static page404: Form.Constructor<Navigation.Page>;
    protected static destroyPage: boolean;
    static configure(options: Navigation.RouterOptions): void;
    protected oldPage?: Navigation.Page;
    @ViewElement()
	contentEl: HTMLDivElement;
    protected allRoutes: {
        [key: string]: Navigation.RouteAsyncOption;
    };
    protected activePath: string;
    protected activeState?: Aventus.State;
    protected oneStateActive: boolean;
    protected showPageMutex: Aventus.Mutex;
    protected isReplace: boolean;
    constructor();
    /**
     * Add all your routes inside this function (addRoute or addRouteAsync)
     */
    protected abstract defineRoutes(): void;
    protected get stateManager(): Aventus.StateManager;
    protected addRouteAsync<T extends Navigation.Page>(options: Navigation.RouteAsyncOption): void;
    protected addRoute(route: string, elementCtr: new () => Navigation.Page): void;
    protected register(): void;
    protected initRoute(path: string): void;
    protected page404?: Navigation.Page;
    protected validError404(): any;
    protected error404(state?: Aventus.State): null | (new () => Navigation.Page);
    protected onNewPage(oldUrl: string, oldPage: Navigation.Page | undefined, newUrl: string, newPage: Navigation.Page): void;
    getSlugs(): Aventus.UriParamsValue | null;
    protected canChangeState(newState: Aventus.State): Promise<boolean>;
    navigate(state: Aventus.State | string, options?: {
        replace: boolean;
    }): Promise<boolean>;
    protected bindToUrl(): boolean;
    protected defaultUrl(): string | undefined;
    /**
     * Determine if the pash should be destroyed when hiding
     */
    protected shouldDestroyFrame(page: Navigation.Page): boolean;
    protected postCreation(): void;
}
}

namespace Toast {
abstract class ToastElement<T extends Toast.ToastOptions = Toast.ToastOptions> extends Aventus.WebComponent implements Aventus.DefaultComponent {

    static add(options: Toast.ToastOptions): Promise<boolean>;
    @Attribute()
	position: Toast.ToastPosition;
    /**
     * Use minus -1 to have an infinite timer
     */
    @Attribute()
	delay: number;
    @Attribute()
	protected is_active: boolean;
    protected showAsked: boolean;
    protected onHideCallback: (result: boolean) => void;
    timeout: number;
    private isTransition;
    private waitTransitionCbs;
    private _setOptions;
    abstract setOptions(options: T): Aventus.Asyncable<void>;
    show(onHideCallback: (result: boolean) => void): void;
    protected startDelay(): void;
    /**
     * When the user click on the cross, close the notification
     */
    protected close(): any;
    protected addTransition(): void;
    waitTransition(): Promise<void>;
    protected postCreation(): void;
}
}

namespace Toast {
type ToastOptions = {
    position?: Toast.ToastPosition;
    /**
     * Use minus -1 to have an infinite timer
     */
    delay?: number;
};
}

namespace Toast {
class ToastManager extends Aventus.WebComponent implements Aventus.DefaultComponent {
    private static defaultToast?;
    private static defaultToastManager?;
    @Internal()
	private static defaultPosition;
    @Internal()
	private static defaultDelay;
    private static heightLimitPercent;
    private static instance?;
    static add<T extends Toast.ToastOptions>(toast: Toast.ToastElement<T> | T): Promise<boolean>;
    static configure(options: Partial<Toast.ToastManagerOptions>): void;
    private activeToasts;
    private waitingToasts;
    get containerHeight(): number;
    get heightLimit(): number;
    protected mutex: Aventus.Mutex;
    @Attribute()
	gap: number;
    @Attribute()
	not_main: boolean;
    add<T extends Toast.ToastOptions>(toast: Toast.ToastElement<T> | T): Promise<boolean>;
    private _calculateBottom;
    private _calculateTop;
    private _notifyBottomRight;
    private _notifyTopRight;
    private _notifyBottomLeft;
    private _notifyTopLeft;
    private _notifyTop;
    private _notifyBottom;
    protected postConnect(): void;
    protected postDisonnect(): void;
}
}

class Process {
    private static handleErrors?;
    static configure(config: ProcessConfig): void;
    static execute<X extends Aventus.ResultWithError<Y> | Aventus.VoidWithError, Y>(prom: Promise<X>): Promise<Aventus.ExtractFromError<X, Y> | undefined>;
    static parseErrors<X extends Aventus.ResultWithError<Y> | Aventus.VoidWithError, Y>(result: X): Promise<Aventus.ExtractFromError<X> | undefined>;
}

	}
}
declare module ___Aventus {
namespace Navigation {
type FilterPrefix<T> = T extends `getPrefix` ? never : T;
}

namespace Navigation {
type ToKey<T> = [T] extends [string] ? string extends T ? never : T extends infer U ? [U] extends [T] ? U : never : never : never;
}

namespace Navigation {
type FirstKey<T> = Navigation.ToKey<Navigation.FilterPrefix<keyof T>>;
}
}//#endregion js def //
//#region js src //
{"namespace":"Aventus","available":[{"code":"const ProgressCircle = class ProgressCircle extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"value\", \"stroke_width\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'value'() { return this.getNumberProp('value') }\n    set 'value'(val) { this.setNumberAttr('value', val) }\rget 'stroke_width'() { return this.getNumberProp('stroke_width') }\n    set 'stroke_width'(val) { this.setNumberAttr('stroke_width', val) }\r    svg;\n    backCircle;\n    percentCircle;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"value\", ((target) => {\n    target.render();\n}));\rthis.__addPropertyActions(\"stroke_width\", ((target) => {\n    target.render();\n}));\r }\n    static __style = `:host{--_progress-circle-back-circle-color: var(--progress-circle-back-circle-color, rgba(191, 219, 254, .5));--_progress-circle-percent-circle-color: var(--progress-circle-percent-circle-color, #3b82f6);--_progress-circle-transition: var(--progress-circle-transition, stroke 0.3s cubic-bezier(.4, 0, .2, 1), stroke-dashoffset 0.3s cubic-bezier(.4, 0, .2, 1))}:host{align-items:center;aspect-ratio:1/1;display:flex;flex-direction:column;justify-content:center;position:relative;width:60px}:host .container{align-items:center;display:flex;flex-direction:column;height:100%;justify-content:center;position:relative;width:100%}:host .container svg{height:100%;transform:rotate(-90deg);width:100%}:host .container svg .back-circle{fill:rgba(0,0,0,0);stroke:var(--_progress-circle-back-circle-color);transition:stroke linear .2s}:host .container svg .percent-circle{fill:rgba(0,0,0,0);stroke:var(--_progress-circle-percent-circle-color);transition:var(--_progress-circle-transition)}:host .content{display:flex;position:absolute}`;\n    __getStatic() {\n        return ProgressCircle;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ProgressCircle.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"container\" _id=\"progresscircle_0\"></div><div class=\"content\">\r\t<slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"containerEl\",\n      \"ids\": [\n        \"progresscircle_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"ProgressCircle\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('value')){ this['value'] = 40; }\rif(!this.hasAttribute('stroke_width')){ this['stroke_width'] = 6; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('value');\rthis.__upgradeProperty('stroke_width');\r }\n    getLimitedValue(input) {\n        if (input === undefined) {\n            return 0;\n        }\n        else if (input > 100) {\n            return 100;\n        }\n        else {\n            return input;\n        }\n    }\n    render() {\n        let min = Math.min(this.offsetWidth, this.offsetHeight);\n        if (min == 0)\n            return;\n        const value = this.getLimitedValue(this.value);\n        const radius = min / 2;\n        const strokeWidth = this.stroke_width;\n        const normalizedRadius = radius - strokeWidth / 2;\n        const circumference = normalizedRadius * 2 * Math.PI;\n        const strokeDashoffset = (value / 100) * circumference;\n        const offset = circumference - strokeDashoffset;\n        let appendSvg = false;\n        if (!this.svg) {\n            appendSvg = true;\n            this.svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        }\n        this.svg.setAttribute(\"width\", radius * 2 + \"\");\n        this.svg.setAttribute(\"height\", radius * 2 + \"\");\n        this.svg.setAttribute(\"viewBox\", \"0 0 \" + (radius * 2) + \" \" + (radius * 2));\n        if (!this.backCircle) {\n            this.backCircle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n            this.svg.appendChild(this.backCircle);\n        }\n        this.backCircle.classList.add(\"back-circle\");\n        this.backCircle.setAttribute(\"r\", normalizedRadius + \"\");\n        this.backCircle.setAttribute(\"cx\", radius + \"\");\n        this.backCircle.setAttribute(\"cy\", radius + \"\");\n        this.backCircle.setAttribute(\"stroke-width\", strokeWidth + \"\");\n        this.backCircle.setAttribute(\"stroke-linecap\", \"round\");\n        if (!this.percentCircle) {\n            this.percentCircle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n            this.svg.appendChild(this.percentCircle);\n        }\n        this.percentCircle.classList.add(\"percent-circle\");\n        this.percentCircle.setAttribute(\"r\", normalizedRadius + \"\");\n        this.percentCircle.setAttribute(\"cx\", radius + \"\");\n        this.percentCircle.setAttribute(\"cy\", radius + \"\");\n        this.percentCircle.setAttribute(\"stroke-width\", strokeWidth + \"\");\n        this.percentCircle.setAttribute(\"stroke-dasharray\", circumference + \" \" + circumference);\n        this.percentCircle.setAttribute(\"stroke-dashoffset\", offset + \"\");\n        this.percentCircle.setAttribute(\"stroke-linecap\", \"round\");\n        if (appendSvg) {\n            this.containerEl.appendChild(this.svg);\n        }\n    }\n    postCreation() {\n        new Aventus.ResizeObserver(() => {\n            this.render();\n        }).observe(this);\n        this.render();\n    }\n}\nProgressCircle.Namespace=`Aventus`;\nProgressCircle.Tag=`av-progress-circle`;\n__as1(_, 'ProgressCircle', ProgressCircle);\nif(!window.customElements.get('av-progress-circle')){window.customElements.define('av-progress-circle', ProgressCircle);Aventus.WebComponentInstance.registerDefinition(ProgressCircle);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"SVGSVGElement","isStrong":false},{"fullName":"SVGCircleElement","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false}],"fullName":"Aventus.ProgressCircle","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-progress-circle","slots":{"default":{"local":true}}},{"code":"let Tracker=class Tracker {\n    velocityMultiplier = window.devicePixelRatio;\n    updateTime = Date.now();\n    delta = { x: 0, y: 0 };\n    velocity = { x: 0, y: 0 };\n    lastPosition = { x: 0, y: 0 };\n    constructor(touch) {\n        this.lastPosition = this.getPosition(touch);\n    }\n    update(touch) {\n        const { velocity, updateTime, lastPosition, } = this;\n        const now = Date.now();\n        const position = this.getPosition(touch);\n        const delta = {\n            x: -(position.x - lastPosition.x),\n            y: -(position.y - lastPosition.y),\n        };\n        const duration = (now - updateTime) || 16.7;\n        const vx = delta.x / duration * 16.7;\n        const vy = delta.y / duration * 16.7;\n        velocity.x = vx * this.velocityMultiplier;\n        velocity.y = vy * this.velocityMultiplier;\n        this.delta = delta;\n        this.updateTime = now;\n        this.lastPosition = position;\n    }\n    getPointerData(evt) {\n        return evt.touches ? evt.touches[evt.touches.length - 1] : evt;\n    }\n    getPosition(evt) {\n        const data = this.getPointerData(evt);\n        return {\n            x: data.clientX,\n            y: data.clientY,\n        };\n    }\n}\nTracker.Namespace=`Aventus`;\r\n__as1(_, 'Tracker', Tracker);\r\n","dependances":[{"fullName":"Touch","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"MouseEvent","isStrong":false}],"fullName":"Aventus.Tracker","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Layout.Row = class Row extends Aventus.WebComponent {\n    static __style = `:host{--_col-gap: var(--col-gap, 0px)}:host{container-name:row;container-type:inline-size;display:flex;flex-direction:row;flex-wrap:wrap;gap:var(--_col-gap);width:100%}`;\n    constructor() {\n        super();\n        this.style.containerName = \"row\";\n        this.style.containerType = \"inline-size\";\n    }\n    __getStatic() {\n        return Row;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Row.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Row\";\n    }\n}\nLayout.Row.Namespace=`Aventus.Layout`;\nLayout.Row.Tag=`av-row`;\n__as1(_.Layout, 'Row', Layout.Row);\nif(!window.customElements.get('av-row')){window.customElements.define('av-row', Layout.Row);Aventus.WebComponentInstance.registerDefinition(Layout.Row);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Aventus.Layout.Row","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-row","slots":{"default":{"local":true}}},{"code":"(function (SpecialTouch) {\n    SpecialTouch[SpecialTouch[\"Backspace\"] = 0] = \"Backspace\";\n    SpecialTouch[SpecialTouch[\"Insert\"] = 1] = \"Insert\";\n    SpecialTouch[SpecialTouch[\"End\"] = 2] = \"End\";\n    SpecialTouch[SpecialTouch[\"PageDown\"] = 3] = \"PageDown\";\n    SpecialTouch[SpecialTouch[\"PageUp\"] = 4] = \"PageUp\";\n    SpecialTouch[SpecialTouch[\"Escape\"] = 5] = \"Escape\";\n    SpecialTouch[SpecialTouch[\"AltGraph\"] = 6] = \"AltGraph\";\n    SpecialTouch[SpecialTouch[\"Control\"] = 7] = \"Control\";\n    SpecialTouch[SpecialTouch[\"Alt\"] = 8] = \"Alt\";\n    SpecialTouch[SpecialTouch[\"Shift\"] = 9] = \"Shift\";\n    SpecialTouch[SpecialTouch[\"CapsLock\"] = 10] = \"CapsLock\";\n    SpecialTouch[SpecialTouch[\"Tab\"] = 11] = \"Tab\";\n    SpecialTouch[SpecialTouch[\"Delete\"] = 12] = \"Delete\";\n    SpecialTouch[SpecialTouch[\"ArrowRight\"] = 13] = \"ArrowRight\";\n    SpecialTouch[SpecialTouch[\"ArrowLeft\"] = 14] = \"ArrowLeft\";\n    SpecialTouch[SpecialTouch[\"ArrowUp\"] = 15] = \"ArrowUp\";\n    SpecialTouch[SpecialTouch[\"ArrowDown\"] = 16] = \"ArrowDown\";\n    SpecialTouch[SpecialTouch[\"Enter\"] = 17] = \"Enter\";\n})(Lib.SpecialTouch || (Lib.SpecialTouch = {}));\n__as1(_.Lib, 'SpecialTouch', Lib.SpecialTouch);\r\n","dependances":[],"fullName":"Aventus.Lib.SpecialTouch","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"const Collapse = class Collapse extends Aventus.WebComponent {\n    get 'open'() { return this.getBoolAttr('open') }\n    set 'open'(val) { this.setBoolAttr('open', val) }\rget 'no_animation'() { return this.getBoolAttr('no_animation') }\n    set 'no_animation'(val) { this.setBoolAttr('no_animation', val) }\r    static __style = `:host{--_collapse-transition-duration: var(--collapse-transition-duration, 0.5s);--_collapse-transition-timing-function: var(--collapse-transition-timing-function, cubic-bezier(0.65, 0, 0.15, 1))}:host .title{cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0)}:host .collapse{display:grid;grid-template-rows:0fr;transition-duration:var(--_collapse-transition-duration);transition-timing-function:var(--_collapse-transition-timing-function);transition-property:grid-template-rows}:host .collapse .content{overflow:hidden}:host([open]) .collapse{grid-template-rows:1fr}:host([no_animation]) .collapse{transition:none}`;\n    __getStatic() {\n        return Collapse;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Collapse.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'header':`<slot name=\"header\"></slot>`,'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"title\" _id=\"collapse_0\">\r    <slot name=\"header\"></slot>\r</div><div class=\"collapse\" _id=\"collapse_1\">\r    <div class=\"content\">\r        <slot></slot>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"events\": [\n    {\n      \"eventName\": \"transitionend\",\n      \"id\": \"collapse_1\",\n      \"fct\": (e, c) => c.comp.transitionEnd(e)\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"collapse_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleOpen(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Collapse\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('open')) { this.attributeChangedCallback('open', false, false); }\rif(!this.hasAttribute('no_animation')) { this.attributeChangedCallback('no_animation', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('open');\rthis.__upgradeProperty('no_animation');\r }\n    __listBoolProps() { return [\"open\",\"no_animation\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    transitionEnd(e) {\n        let cst = e.constructor;\n        const new_e = new cst(e.type, e);\n        this.dispatchEvent(new_e);\n    }\n    toggleOpen() {\n        this.open = !this.open;\n    }\n}\nCollapse.Namespace=`Aventus`;\nCollapse.Tag=`av-collapse`;\n__as1(_, 'Collapse', Collapse);\nif(!window.customElements.get('av-collapse')){window.customElements.define('av-collapse', Collapse);Aventus.WebComponentInstance.registerDefinition(Collapse);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false}],"fullName":"Aventus.Collapse","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-collapse","slots":{"header":{"local":true},"default":{"local":true}}},{"code":"Layout.Col = class Col extends Aventus.WebComponent {\n    get 'use_container'() { return this.getBoolAttr('use_container') }\n    set 'use_container'(val) { this.setBoolAttr('use_container', val) }\rget 'size'() { return this.getNumberAttr('size') }\n    set 'size'(val) { this.setNumberAttr('size', val) }\rget 'size_xs'() { return this.getNumberAttr('size_xs') }\n    set 'size_xs'(val) { this.setNumberAttr('size_xs', val) }\rget 'size_sm'() { return this.getNumberAttr('size_sm') }\n    set 'size_sm'(val) { this.setNumberAttr('size_sm', val) }\rget 'size_md'() { return this.getNumberAttr('size_md') }\n    set 'size_md'(val) { this.setNumberAttr('size_md', val) }\rget 'size_lg'() { return this.getNumberAttr('size_lg') }\n    set 'size_lg'(val) { this.setNumberAttr('size_lg', val) }\rget 'size_xl'() { return this.getNumberAttr('size_xl') }\n    set 'size_xl'(val) { this.setNumberAttr('size_xl', val) }\rget 'offset'() { return this.getNumberAttr('offset') }\n    set 'offset'(val) { this.setNumberAttr('offset', val) }\rget 'offset_xs'() { return this.getNumberAttr('offset_xs') }\n    set 'offset_xs'(val) { this.setNumberAttr('offset_xs', val) }\rget 'offset_sm'() { return this.getNumberAttr('offset_sm') }\n    set 'offset_sm'(val) { this.setNumberAttr('offset_sm', val) }\rget 'offset_md'() { return this.getNumberAttr('offset_md') }\n    set 'offset_md'(val) { this.setNumberAttr('offset_md', val) }\rget 'offset_lg'() { return this.getNumberAttr('offset_lg') }\n    set 'offset_lg'(val) { this.setNumberAttr('offset_lg', val) }\rget 'offset_xl'() { return this.getNumberAttr('offset_xl') }\n    set 'offset_xl'(val) { this.setNumberAttr('offset_xl', val) }\rget 'offset_right'() { return this.getNumberAttr('offset_right') }\n    set 'offset_right'(val) { this.setNumberAttr('offset_right', val) }\rget 'offset_right_xs'() { return this.getNumberAttr('offset_right_xs') }\n    set 'offset_right_xs'(val) { this.setNumberAttr('offset_right_xs', val) }\rget 'offset_right_sm'() { return this.getNumberAttr('offset_right_sm') }\n    set 'offset_right_sm'(val) { this.setNumberAttr('offset_right_sm', val) }\rget 'offset_right_md'() { return this.getNumberAttr('offset_right_md') }\n    set 'offset_right_md'(val) { this.setNumberAttr('offset_right_md', val) }\rget 'offset_right_lg'() { return this.getNumberAttr('offset_right_lg') }\n    set 'offset_right_lg'(val) { this.setNumberAttr('offset_right_lg', val) }\rget 'offset_right_xl'() { return this.getNumberAttr('offset_right_xl') }\n    set 'offset_right_xl'(val) { this.setNumberAttr('offset_right_xl', val) }\rget 'center'() { return this.getBoolAttr('center') }\n    set 'center'(val) { this.setBoolAttr('center', val) }\r    static use_container = false;\n    static __style = `:host{--_col-padding: var(--col-padding, 8px);--_col-gap: var(--col-gap, 0px)}:host{display:flex;padding:var(--internal-col-padding)}:host([center]){justify-content:center}:host([size=\"0\"]){width:0}:host([offset=\"0\"]){margin-left:0}:host([offset_right=\"0\"]){margin-right:0}:host([size=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([offset=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([offset_right=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([size=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([offset=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([offset_right=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([size=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([offset=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([offset_right=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([size=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([offset=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([offset_right=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([size=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([offset=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([offset_right=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([size=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([offset=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([offset_right=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([size=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([offset=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([offset_right=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([size=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([offset=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([offset_right=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([size=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([offset=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([offset_right=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([size=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([offset=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([offset_right=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([size=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([offset=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([offset_right=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([size=\"12\"]){width:100%}:host([offset=\"12\"]){margin-left:100%}:host([offset_right=\"12\"]){margin-right:100%}@container row (min-width: 300px){:host([use_container][size_xs=\"0\"]){width:0}:host([use_container][offset_xs=\"0\"]){margin-left:0}:host([use_container][offset_right_xs=\"0\"]){margin-right:0}:host([use_container][size_xs=\"0\"]){display:none}:host([use_container][size_xs=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_xs=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_right_xs=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][size_xs=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_xs=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_right_xs=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][size_xs=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_xs=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_right_xs=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][size_xs=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_xs=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_right_xs=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][size_xs=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_xs=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_right_xs=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][size_xs=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_xs=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_right_xs=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][size_xs=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_xs=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_right_xs=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][size_xs=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_xs=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_right_xs=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][size_xs=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_xs=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_right_xs=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][size_xs=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_xs=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_right_xs=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][size_xs=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_xs=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_right_xs=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][size_xs=\"12\"]){width:100%}:host([use_container][offset_xs=\"12\"]){margin-left:100%}:host([use_container][offset_right_xs=\"12\"]){margin-right:100%}}@media screen and (min-width: 300px){:host(:not([use_container])[size_xs=\"0\"]){width:0}:host(:not([use_container])[offset_xs=\"0\"]){margin-left:0}:host(:not([use_container])[offset_right_xs=\"0\"]){margin-right:0}:host(:not([use_container])[size_xs=\"0\"]){display:none}:host(:not([use_container])[size_xs=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_xs=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_right_xs=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[size_xs=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_xs=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_right_xs=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[size_xs=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_xs=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_right_xs=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[size_xs=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_xs=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_right_xs=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[size_xs=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_xs=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_right_xs=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[size_xs=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_xs=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_right_xs=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[size_xs=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_xs=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_right_xs=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[size_xs=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_xs=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_right_xs=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[size_xs=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_xs=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_right_xs=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[size_xs=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_xs=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_right_xs=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[size_xs=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_xs=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_right_xs=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[size_xs=\"12\"]){width:100%}:host(:not([use_container])[offset_xs=\"12\"]){margin-left:100%}:host(:not([use_container])[offset_right_xs=\"12\"]){margin-right:100%}}@container row (min-width: 540px){:host([use_container][size_sm=\"0\"]){width:0}:host([use_container][offset_sm=\"0\"]){margin-left:0}:host([use_container][offset_right_sm=\"0\"]){margin-right:0}:host([use_container][size_sm=\"0\"]){display:none}:host([use_container][size_sm=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_sm=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_right_sm=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][size_sm=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_sm=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_right_sm=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][size_sm=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_sm=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_right_sm=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][size_sm=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_sm=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_right_sm=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][size_sm=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_sm=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_right_sm=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][size_sm=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_sm=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_right_sm=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][size_sm=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_sm=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_right_sm=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][size_sm=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_sm=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_right_sm=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][size_sm=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_sm=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_right_sm=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][size_sm=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_sm=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_right_sm=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][size_sm=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_sm=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_right_sm=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][size_sm=\"12\"]){width:100%}:host([use_container][offset_sm=\"12\"]){margin-left:100%}:host([use_container][offset_right_sm=\"12\"]){margin-right:100%}}@media screen and (min-width: 540px){:host(:not([use_container])[size_sm=\"0\"]){width:0}:host(:not([use_container])[offset_sm=\"0\"]){margin-left:0}:host(:not([use_container])[offset_right_sm=\"0\"]){margin-right:0}:host(:not([use_container])[size_sm=\"0\"]){display:none}:host(:not([use_container])[size_sm=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_sm=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_right_sm=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[size_sm=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_sm=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_right_sm=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[size_sm=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_sm=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_right_sm=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[size_sm=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_sm=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_right_sm=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[size_sm=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_sm=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_right_sm=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[size_sm=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_sm=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_right_sm=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[size_sm=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_sm=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_right_sm=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[size_sm=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_sm=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_right_sm=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[size_sm=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_sm=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_right_sm=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[size_sm=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_sm=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_right_sm=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[size_sm=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_sm=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_right_sm=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[size_sm=\"12\"]){width:100%}:host(:not([use_container])[offset_sm=\"12\"]){margin-left:100%}:host(:not([use_container])[offset_right_sm=\"12\"]){margin-right:100%}}@container row (min-width: 720px){:host([use_container][size_md=\"0\"]){width:0}:host([use_container][offset_md=\"0\"]){margin-left:0}:host([use_container][offset_right_md=\"0\"]){margin-right:0}:host([use_container][size_md=\"0\"]){display:none}:host([use_container][size_md=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_md=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_right_md=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][size_md=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_md=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_right_md=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][size_md=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_md=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_right_md=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][size_md=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_md=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_right_md=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][size_md=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_md=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_right_md=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][size_md=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_md=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_right_md=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][size_md=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_md=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_right_md=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][size_md=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_md=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_right_md=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][size_md=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_md=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_right_md=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][size_md=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_md=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_right_md=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][size_md=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_md=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_right_md=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][size_md=\"12\"]){width:100%}:host([use_container][offset_md=\"12\"]){margin-left:100%}:host([use_container][offset_right_md=\"12\"]){margin-right:100%}}@media screen and (min-width: 720px){:host(:not([use_container])[size_md=\"0\"]){width:0}:host(:not([use_container])[offset_md=\"0\"]){margin-left:0}:host(:not([use_container])[offset_right_md=\"0\"]){margin-right:0}:host(:not([use_container])[size_md=\"0\"]){display:none}:host(:not([use_container])[size_md=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_md=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_right_md=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[size_md=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_md=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_right_md=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[size_md=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_md=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_right_md=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[size_md=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_md=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_right_md=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[size_md=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_md=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_right_md=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[size_md=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_md=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_right_md=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[size_md=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_md=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_right_md=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[size_md=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_md=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_right_md=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[size_md=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_md=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_right_md=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[size_md=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_md=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_right_md=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[size_md=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_md=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_right_md=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[size_md=\"12\"]){width:100%}:host(:not([use_container])[offset_md=\"12\"]){margin-left:100%}:host(:not([use_container])[offset_right_md=\"12\"]){margin-right:100%}}@container row (min-width: 960px){:host([use_container][size_lg=\"0\"]){width:0}:host([use_container][offset_lg=\"0\"]){margin-left:0}:host([use_container][offset_right_lg=\"0\"]){margin-right:0}:host([use_container][size_lg=\"0\"]){display:none}:host([use_container][size_lg=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_lg=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_right_lg=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][size_lg=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_lg=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_right_lg=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][size_lg=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_lg=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_right_lg=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][size_lg=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_lg=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_right_lg=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][size_lg=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_lg=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_right_lg=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][size_lg=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_lg=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_right_lg=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][size_lg=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_lg=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_right_lg=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][size_lg=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_lg=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_right_lg=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][size_lg=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_lg=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_right_lg=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][size_lg=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_lg=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_right_lg=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][size_lg=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_lg=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_right_lg=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][size_lg=\"12\"]){width:100%}:host([use_container][offset_lg=\"12\"]){margin-left:100%}:host([use_container][offset_right_lg=\"12\"]){margin-right:100%}}@media screen and (min-width: 960px){:host(:not([use_container])[size_lg=\"0\"]){width:0}:host(:not([use_container])[offset_lg=\"0\"]){margin-left:0}:host(:not([use_container])[offset_right_lg=\"0\"]){margin-right:0}:host(:not([use_container])[size_lg=\"0\"]){display:none}:host(:not([use_container])[size_lg=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_lg=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_right_lg=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[size_lg=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_lg=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_right_lg=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[size_lg=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_lg=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_right_lg=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[size_lg=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_lg=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_right_lg=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[size_lg=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_lg=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_right_lg=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[size_lg=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_lg=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_right_lg=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[size_lg=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_lg=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_right_lg=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[size_lg=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_lg=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_right_lg=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[size_lg=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_lg=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_right_lg=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[size_lg=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_lg=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_right_lg=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[size_lg=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_lg=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_right_lg=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[size_lg=\"12\"]){width:100%}:host(:not([use_container])[offset_lg=\"12\"]){margin-left:100%}:host(:not([use_container])[offset_right_lg=\"12\"]){margin-right:100%}}@container row (min-width: 1140px){:host([use_container][size_xl=\"0\"]){width:0}:host([use_container][offset_xl=\"0\"]){margin-left:0}:host([use_container][offset_right_xl=\"0\"]){margin-right:0}:host([use_container][size_xl=\"0\"]){display:none}:host([use_container][size_xl=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_xl=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][offset_right_xl=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host([use_container][size_xl=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_xl=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][offset_right_xl=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host([use_container][size_xl=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_xl=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][offset_right_xl=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host([use_container][size_xl=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_xl=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][offset_right_xl=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host([use_container][size_xl=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_xl=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][offset_right_xl=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host([use_container][size_xl=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_xl=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][offset_right_xl=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host([use_container][size_xl=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_xl=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][offset_right_xl=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host([use_container][size_xl=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_xl=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][offset_right_xl=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host([use_container][size_xl=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_xl=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][offset_right_xl=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host([use_container][size_xl=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_xl=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][offset_right_xl=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host([use_container][size_xl=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_xl=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][offset_right_xl=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host([use_container][size_xl=\"12\"]){width:100%}:host([use_container][offset_xl=\"12\"]){margin-left:100%}:host([use_container][offset_right_xl=\"12\"]){margin-right:100%}}@media screen and (min-width: 1140px){:host(:not([use_container])[size_xl=\"0\"]){width:0}:host(:not([use_container])[offset_xl=\"0\"]){margin-left:0}:host(:not([use_container])[offset_right_xl=\"0\"]){margin-right:0}:host(:not([use_container])[size_xl=\"0\"]){display:none}:host(:not([use_container])[size_xl=\"1\"]){width:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_xl=\"1\"]){margin-left:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[offset_right_xl=\"1\"]){margin-right:calc(8.3333333333% - (var(--_col-gap, 0px) * 11 / 12))}:host(:not([use_container])[size_xl=\"2\"]){width:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_xl=\"2\"]){margin-left:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[offset_right_xl=\"2\"]){margin-right:calc(16.6666666667% - (var(--_col-gap, 0px) * 5 / 6))}:host(:not([use_container])[size_xl=\"3\"]){width:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_xl=\"3\"]){margin-left:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[offset_right_xl=\"3\"]){margin-right:calc(25% - (var(--_col-gap, 0px) * 3 / 4))}:host(:not([use_container])[size_xl=\"4\"]){width:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_xl=\"4\"]){margin-left:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[offset_right_xl=\"4\"]){margin-right:calc(33.3333333333% - (var(--_col-gap, 0px) * 2 / 3))}:host(:not([use_container])[size_xl=\"5\"]){width:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_xl=\"5\"]){margin-left:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[offset_right_xl=\"5\"]){margin-right:calc(41.6666666667% - (var(--_col-gap, 0px) * 1.4 / 2.4))}:host(:not([use_container])[size_xl=\"6\"]){width:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_xl=\"6\"]){margin-left:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[offset_right_xl=\"6\"]){margin-right:calc(50% - (var(--_col-gap, 0px) * 1 / 2))}:host(:not([use_container])[size_xl=\"7\"]){width:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_xl=\"7\"]){margin-left:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[offset_right_xl=\"7\"]){margin-right:calc(58.3333333333% - (var(--_col-gap, 0px) * 0.7142857143 / 1.7142857143))}:host(:not([use_container])[size_xl=\"8\"]){width:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_xl=\"8\"]){margin-left:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[offset_right_xl=\"8\"]){margin-right:calc(66.6666666667% - (var(--_col-gap, 0px) * 0.5 / 1.5))}:host(:not([use_container])[size_xl=\"9\"]){width:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_xl=\"9\"]){margin-left:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[offset_right_xl=\"9\"]){margin-right:calc(75% - (var(--_col-gap, 0px) * 0.3333333333 / 1.3333333333))}:host(:not([use_container])[size_xl=\"10\"]){width:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_xl=\"10\"]){margin-left:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[offset_right_xl=\"10\"]){margin-right:calc(83.3333333333% - (var(--_col-gap, 0px) * 0.2 / 1.2))}:host(:not([use_container])[size_xl=\"11\"]){width:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_xl=\"11\"]){margin-left:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[offset_right_xl=\"11\"]){margin-right:calc(91.6666666667% - (var(--_col-gap, 0px) * 0.0909090909 / 1.0909090909))}:host(:not([use_container])[size_xl=\"12\"]){width:100%}:host(:not([use_container])[offset_xl=\"12\"]){margin-left:100%}:host(:not([use_container])[offset_right_xl=\"12\"]){margin-right:100%}}`;\n    __getStatic() {\n        return Col;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Col.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Col\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('use_container')) {this.setAttribute('use_container' ,'true'); }\rif(!this.hasAttribute('size')){ this['size'] = undefined; }\rif(!this.hasAttribute('size_xs')){ this['size_xs'] = undefined; }\rif(!this.hasAttribute('size_sm')){ this['size_sm'] = undefined; }\rif(!this.hasAttribute('size_md')){ this['size_md'] = undefined; }\rif(!this.hasAttribute('size_lg')){ this['size_lg'] = undefined; }\rif(!this.hasAttribute('size_xl')){ this['size_xl'] = undefined; }\rif(!this.hasAttribute('offset')){ this['offset'] = undefined; }\rif(!this.hasAttribute('offset_xs')){ this['offset_xs'] = undefined; }\rif(!this.hasAttribute('offset_sm')){ this['offset_sm'] = undefined; }\rif(!this.hasAttribute('offset_md')){ this['offset_md'] = undefined; }\rif(!this.hasAttribute('offset_lg')){ this['offset_lg'] = undefined; }\rif(!this.hasAttribute('offset_xl')){ this['offset_xl'] = undefined; }\rif(!this.hasAttribute('offset_right')){ this['offset_right'] = undefined; }\rif(!this.hasAttribute('offset_right_xs')){ this['offset_right_xs'] = undefined; }\rif(!this.hasAttribute('offset_right_sm')){ this['offset_right_sm'] = undefined; }\rif(!this.hasAttribute('offset_right_md')){ this['offset_right_md'] = undefined; }\rif(!this.hasAttribute('offset_right_lg')){ this['offset_right_lg'] = undefined; }\rif(!this.hasAttribute('offset_right_xl')){ this['offset_right_xl'] = undefined; }\rif(!this.hasAttribute('center')) { this.attributeChangedCallback('center', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('use_container');\rthis.__upgradeProperty('size');\rthis.__upgradeProperty('size_xs');\rthis.__upgradeProperty('size_sm');\rthis.__upgradeProperty('size_md');\rthis.__upgradeProperty('size_lg');\rthis.__upgradeProperty('size_xl');\rthis.__upgradeProperty('offset');\rthis.__upgradeProperty('offset_xs');\rthis.__upgradeProperty('offset_sm');\rthis.__upgradeProperty('offset_md');\rthis.__upgradeProperty('offset_lg');\rthis.__upgradeProperty('offset_xl');\rthis.__upgradeProperty('offset_right');\rthis.__upgradeProperty('offset_right_xs');\rthis.__upgradeProperty('offset_right_sm');\rthis.__upgradeProperty('offset_right_md');\rthis.__upgradeProperty('offset_right_lg');\rthis.__upgradeProperty('offset_right_xl');\rthis.__upgradeProperty('center');\r }\n    __listBoolProps() { return [\"use_container\",\"center\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    static configure(options) {\n        if (options.use_container !== undefined)\n            this.use_container = options.use_container;\n    }\n}\nLayout.Col.Namespace=`Aventus.Layout`;\nLayout.Col.Tag=`av-col`;\n__as1(_.Layout, 'Col', Layout.Col);\nif(!window.customElements.get('av-col')){window.customElements.define('av-col', Layout.Col);Aventus.WebComponentInstance.registerDefinition(Layout.Col);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Layout.ColOptions","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.Layout.Col","isStrong":false}],"fullName":"Aventus.Layout.Col","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-col","slots":{"default":{"local":true}}},{"code":"const Img = class Img extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"src\", \"mode\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'cache'() { return this.getBoolAttr('cache') }\n    set 'cache'(val) { this.setBoolAttr('cache', val) }\r    get 'src'() { return this.getStringProp('src') }\n    set 'src'(val) { this.setStringAttr('src', val) }\rget 'mode'() { return this.getStringProp('mode') }\n    set 'mode'(val) { this.setStringAttr('mode', val) }\r    isCalculing;\n    maxCalculateSize = 10;\n    ratio = 1;\n    resizeObserver;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"src\", ((target) => {\n    target.onSrcChanged();\n}));\rthis.__addPropertyActions(\"mode\", ((target) => {\n    if (target.src != \"\") {\n        target.calculateSize();\n    }\n}));\r }\n    static __style = `:host{--internal-img-color: var(--img-color);--internal-img-stroke-color: var(--img-stroke-color, var(--internal-img-color));--internal-img-fill-color: var(--img-fill-color, var(--internal-img-color));--internal-img-color-transition: var(--img-color-transition, none)}:host{display:inline-block;overflow:hidden;font-size:0}:host *{box-sizing:border-box}:host img{opacity:0;transition:filter .3s linear}:host .svg{display:none;height:100%;width:100%}:host .svg svg{height:100%;width:100%}:host([src$=\".svg\"]) img{display:none}:host([src$=\".svg\"]) .svg{display:flex}:host([src$=\".svg\"]) .svg svg{transition:var(--internal-img-color-transition);stroke:var(--internal-img-stroke-color);fill:var(--internal-img-fill-color)}:host([display_bigger]) img{cursor:pointer}:host([display_bigger]) img:hover{filter:brightness(50%)}`;\n    __getStatic() {\n        return Img;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Img.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<img _id=\"img_0\" /><div class=\"svg\" _id=\"img_1\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"imgEl\",\n      \"ids\": [\n        \"img_0\"\n      ]\n    },\n    {\n      \"name\": \"svgEl\",\n      \"ids\": [\n        \"img_1\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Img\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('cache')) { this.attributeChangedCallback('cache', false, false); }\rif(!this.hasAttribute('src')){ this['src'] = undefined; }\rif(!this.hasAttribute('mode')){ this['mode'] = \"contains\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('cache');\rthis.__upgradeProperty('src');\rthis.__upgradeProperty('mode');\r }\n    __listBoolProps() { return [\"cache\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    calculateSize(attempt = 0) {\n        if (this.isCalculing || !this.imgEl || !this.svgEl) {\n            return;\n        }\n        if (this.src == \"\") {\n            return;\n        }\n        this.isCalculing = true;\n        if (getComputedStyle(this).display == 'none') {\n            return;\n        }\n        if (attempt == this.maxCalculateSize) {\n            this.isCalculing = false;\n            return;\n        }\n        let element = this.imgEl;\n        if (this.src?.endsWith(\".svg\")) {\n            element = this.svgEl;\n        }\n        this.style.width = '';\n        this.style.height = '';\n        element.style.width = '';\n        element.style.height = '';\n        if (element.offsetWidth == 0 && element.offsetHeight == 0) {\n            setTimeout(() => {\n                this.isCalculing = false;\n                this.calculateSize(attempt + 1);\n            }, 100);\n            return;\n        }\n        let style = getComputedStyle(this);\n        let addedY = Number(style.paddingTop.replace(\"px\", \"\")) + Number(style.paddingBottom.replace(\"px\", \"\")) + Number(style.borderTopWidth.replace(\"px\", \"\")) + Number(style.borderBottomWidth.replace(\"px\", \"\"));\n        let addedX = Number(style.paddingLeft.replace(\"px\", \"\")) + Number(style.paddingRight.replace(\"px\", \"\")) + Number(style.borderLeftWidth.replace(\"px\", \"\")) + Number(style.borderRightWidth.replace(\"px\", \"\"));\n        let availableHeight = this.offsetHeight - addedY;\n        let availableWidth = this.offsetWidth - addedX;\n        let sameWidth = (element.offsetWidth == availableWidth);\n        let sameHeight = (element.offsetHeight == availableHeight);\n        this.ratio = element.offsetWidth / element.offsetHeight;\n        if (sameWidth && !sameHeight) {\n            // height is set\n            element.style.width = (availableHeight * this.ratio) + 'px';\n            element.style.height = availableHeight + 'px';\n        }\n        else if (!sameWidth && sameHeight) {\n            // width is set\n            element.style.width = availableWidth + 'px';\n            element.style.height = (availableWidth / this.ratio) + 'px';\n        }\n        else if (!sameWidth && !sameHeight) {\n            if (this.mode == \"stretch\") {\n                element.style.width = '100%';\n                element.style.height = '100%';\n            }\n            else if (this.mode == \"contains\") {\n                // suppose this height is max\n                let newWidth = (availableHeight * this.ratio);\n                if (newWidth <= availableWidth) {\n                    //we can apply this value\n                    element.style.width = newWidth + 'px';\n                    element.style.height = availableHeight + 'px';\n                }\n                else {\n                    element.style.width = availableWidth + 'px';\n                    element.style.height = (availableWidth / this.ratio) + 'px';\n                }\n            }\n            else if (this.mode == \"cover\") {\n                // suppose this height is min\n                let newWidth = (availableHeight * this.ratio);\n                if (newWidth >= availableWidth) {\n                    //we can apply this value\n                    element.style.width = newWidth + 'px';\n                    element.style.height = availableHeight + 'px';\n                }\n                else {\n                    element.style.width = availableWidth + 'px';\n                    element.style.height = (availableWidth / this.ratio) + 'px';\n                }\n            }\n        }\n        //center img\n        let diffTop = (this.offsetHeight - element.offsetHeight - addedY) / 2;\n        let diffLeft = (this.offsetWidth - element.offsetWidth - addedX) / 2;\n        element.style.transform = \"translate(\" + diffLeft + \"px, \" + diffTop + \"px)\";\n        element.style.opacity = '1';\n        this.isCalculing = false;\n    }\n    async onSrcChanged() {\n        if (!this.src || !this.svgEl || !this.imgEl) {\n            return;\n        }\n        if (this.src.endsWith(\".svg\")) {\n            let svgContent = await Aventus.ResourceLoader.load(this.src);\n            this.svgEl.innerHTML = svgContent;\n            this.calculateSize();\n        }\n        else if (this.cache) {\n            let base64 = await Aventus.ResourceLoader.load({\n                url: this.src,\n                type: 'img'\n            });\n            this.imgEl.setAttribute(\"src\", base64);\n            this.calculateSize();\n        }\n        else {\n            this.imgEl.setAttribute(\"src\", this.src);\n            this.calculateSize();\n        }\n    }\n    postDestruction() {\n        this.resizeObserver?.disconnect();\n        this.resizeObserver = undefined;\n    }\n    postCreation() {\n        this.resizeObserver = new Aventus.ResizeObserver({\n            fps: 10,\n            callback: () => {\n                this.calculateSize();\n            }\n        });\n        this.resizeObserver.observe(this);\n    }\n}\nImg.Namespace=`Aventus`;\nImg.Tag=`av-img`;\n__as1(_, 'Img', Img);\nif(!window.customElements.get('av-img')){window.customElements.define('av-img', Img);Aventus.WebComponentInstance.registerDefinition(Img);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLImageElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Aventus.ResourceLoader","isStrong":false}],"fullName":"Aventus.Img","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-img","slots":{}},{"code":"Form.isSubclassOf=function isSubclassOf(subClass, superClass) {\n    if (typeof subClass !== 'function' || typeof superClass !== 'function')\n        return false;\n    let proto = subClass.prototype;\n    while (proto) {\n        if (proto === superClass.prototype)\n            return true;\n        proto = Object.getPrototypeOf(proto);\n    }\n    return false;\n}\n__as1(_.Form, 'isSubclassOf', Form.isSubclassOf);\r\n","dependances":[],"fullName":"Aventus.Form.isSubclassOf","required":false,"type":4,"isExported":true,"convertibleName":""},{"code":"Navigation.Page = class Page extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"visible\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'visible'() { return this.getBoolProp('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\r    router;\n    state;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"visible\", ((target) => {\n    if (target.visible) {\n        target.onShow();\n    }\n    else {\n        target.onHide();\n    }\n}));\r }\n    static __style = `:host{display:block}:host(:not([visible])){display:none}`;\n    constructor() {\n        super();\n        if (this.constructor == Page) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return Page;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Page.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Page\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\r }\n    __listBoolProps() { return [\"visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    async show(state) {\n        this.state = state;\n        this.visible = true;\n    }\n    async hide() {\n        this.visible = false;\n        this.state = undefined;\n    }\n    onShow() {\n    }\n    onHide() {\n    }\n    isAllowed(state, pattern, router) {\n        return true;\n    }\n}\nNavigation.Page.Namespace=`Aventus.Navigation`;\n__as1(_.Navigation, 'Page', Navigation.Page);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Navigation.Page","isStrong":false},{"fullName":"Aventus.Navigation.Router","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.Navigation.Page.PageConfig","isStrong":false},{"fullName":"Aventus.State","isStrong":false}],"fullName":"Aventus.Navigation.Page","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"let RouterStateManager=class RouterStateManager extends Aventus.StateManager {\n    static getInstance() {\n        return Aventus.Instance.get(RouterStateManager);\n    }\n}\nRouterStateManager.Namespace=`Aventus`;\r\n__as1(_, 'RouterStateManager', RouterStateManager);\r\n","dependances":[{"fullName":"Aventus.StateManager","isStrong":true},{"fullName":"Aventus.Instance","isStrong":false}],"fullName":"Aventus.RouterStateManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Navigation.RouterLink = class RouterLink extends Aventus.WebComponent {\n    get 'state'() { return this.getStringAttr('state') }\n    set 'state'(val) { this.setStringAttr('state', val) }\rget 'active_state'() { return this.getStringAttr('active_state') }\n    set 'active_state'(val) { this.setStringAttr('active_state', val) }\r    onActiveChange = new Aventus.Callback();\n    static __style = `:host a{color:inherit;display:contents;text-decoration:none}`;\n    __getStatic() {\n        return RouterLink;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(RouterLink.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<a _id=\"routerlink_0\"><slot></slot></a>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"routerlink_0°href\": {\n      \"fct\": (c) => `${c.print(c.comp.__ad88894dc7dea62195d227cdd21fc210method0())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"click\",\n      \"id\": \"routerlink_0\",\n      \"fct\": (e, c) => c.comp.prevent(e)\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"RouterLink\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('state')){ this['state'] = undefined; }\rif(!this.hasAttribute('active_state')){ this['active_state'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('state');\rthis.__upgradeProperty('active_state');\r }\n    addClickEvent() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.state === undefined)\n                    return;\n                let state = this.state;\n                if (this.state.startsWith(\".\")) {\n                    state = Aventus.Instance.get(RouterStateManager).getState()?.name ?? \"\";\n                    if (!state.endsWith(\"/\")) {\n                        state += \"/\";\n                    }\n                    state += this.state;\n                    state = Aventus.Uri.normalize(state);\n                }\n                Aventus.State.activate(state, Aventus.Instance.get(RouterStateManager));\n            }\n        });\n    }\n    registerActiveStateListener() {\n        let activeState = this.state;\n        if (this.active_state) {\n            activeState = this.active_state;\n        }\n        if (activeState === undefined)\n            return;\n        Aventus.Instance.get(RouterStateManager).subscribe(activeState, {\n            active: () => {\n                this.classList.add(\"active\");\n                this.onActiveChange.trigger(true);\n            },\n            inactive: () => {\n                this.classList.remove(\"active\");\n                this.onActiveChange.trigger(false);\n            }\n        });\n    }\n    prevent(e) {\n        e.preventDefault();\n    }\n    postCreation() {\n        this.registerActiveStateListener();\n        this.addClickEvent();\n    }\n    __ad88894dc7dea62195d227cdd21fc210method0() {\n        return this.state;\n    }\n}\nNavigation.RouterLink.Namespace=`Aventus.Navigation`;\nNavigation.RouterLink.Tag=`av-router-link`;\n__as1(_.Navigation, 'RouterLink', Navigation.RouterLink);\nif(!window.customElements.get('av-router-link')){window.customElements.define('av-router-link', Navigation.RouterLink);Aventus.WebComponentInstance.registerDefinition(Navigation.RouterLink);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Deprecated","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.RouterStateManager","isStrong":false},{"fullName":"Aventus.Uri","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Aventus.Navigation.RouterLink","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-router-link","slots":{"default":{"local":true}}},{"code":"Navigation.Link = class Link extends Aventus.WebComponent {\n    get 'to'() { return this.getStringAttr('to') }\n    set 'to'(val) { this.setStringAttr('to', val) }\rget 'active_pattern'() { return this.getStringAttr('active_pattern') }\n    set 'active_pattern'(val) { this.setStringAttr('active_pattern', val) }\r    onActiveChange = new Aventus.Callback();\n    static __style = `:host{display:contents}:host a{color:inherit;display:contents;text-decoration:none}`;\n    __getStatic() {\n        return Link;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Link.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<a _id=\"link_0\"><slot></slot></a>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"link_0°href\": {\n      \"fct\": (c) => `${c.print(c.comp.__7e4c6c9fe944acd9b1174c61347fdcb6method0())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"click\",\n      \"id\": \"link_0\",\n      \"fct\": (e, c) => c.comp.prevent(e)\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Link\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('to')){ this['to'] = undefined; }\rif(!this.hasAttribute('active_pattern')){ this['active_pattern'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('to');\rthis.__upgradeProperty('active_pattern');\r }\n    addClickEvent() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.to === undefined)\n                    return false;\n                let to = this.to;\n                if (this.to.startsWith(\".\")) {\n                    to = Aventus.Instance.get(RouterStateManager).getState()?.name ?? \"\";\n                    if (!to.endsWith(\"/\")) {\n                        to += \"/\";\n                    }\n                    to += this.to;\n                    to = Aventus.Uri.normalize(to);\n                }\n                Aventus.State.activate(to, Aventus.Instance.get(RouterStateManager));\n                return true;\n            }\n        });\n    }\n    registerActivetoListener() {\n        let activeto = this.to;\n        if (this.active_pattern) {\n            activeto = this.active_pattern;\n        }\n        if (activeto === undefined)\n            return;\n        Aventus.Instance.get(RouterStateManager).subscribe(activeto, {\n            active: () => {\n                this.classList.add(\"active\");\n                this.onActiveChange.trigger(true);\n            },\n            inactive: () => {\n                this.classList.remove(\"active\");\n                this.onActiveChange.trigger(false);\n            }\n        });\n    }\n    prevent(e) {\n        e.preventDefault();\n    }\n    postCreation() {\n        this.registerActivetoListener();\n        this.addClickEvent();\n    }\n    __7e4c6c9fe944acd9b1174c61347fdcb6method0() {\n        return this.to;\n    }\n}\nNavigation.Link.Namespace=`Aventus.Navigation`;\nNavigation.Link.Tag=`av-link`;\n__as1(_.Navigation, 'Link', Navigation.Link);\nif(!window.customElements.get('av-link')){window.customElements.define('av-link', Navigation.Link);Aventus.WebComponentInstance.registerDefinition(Navigation.Link);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.RouterStateManager","isStrong":false},{"fullName":"Aventus.Uri","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Aventus.Navigation.Link","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-link","slots":{"default":{"local":true}}},{"code":"Layout.Tabs.Tabs = class Tabs extends Aventus.WebComponent {\n    activeHeader;\n    tabs = {};\n    static __style = ``;\n    constructor() {\n        super();\n        if (this.constructor == Tabs) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return Tabs;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Tabs.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"header\" _id=\"tabs_0\"></div><div class=\"body\" _id=\"tabs_1\">\r\t<slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"headerEl\",\n      \"ids\": [\n        \"tabs_0\"\n      ]\n    },\n    {\n      \"name\": \"bodyEl\",\n      \"ids\": [\n        \"tabs_1\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Tabs\";\n    }\n    async loadTabs() {\n        // let elements = this.elements;\n        let elements = this.getElementsInSlot();\n        let first = null;\n        for (let element of elements) {\n            element.style.display = 'none';\n            if (element instanceof _.Layout.Tabs.Tab) {\n                this.tabs[element.identifier()] = element;\n                let header = new (this.defineTabHeader())();\n                this.headerEl.appendChild(header);\n                await header.init(element, this);\n                if (first == null) {\n                    first = header;\n                }\n                else if (!first.tab.selected && element.selected) {\n                    first = header;\n                }\n            }\n        }\n        if (first) {\n            this.setActive(first);\n        }\n    }\n    setActive(tabHeader) {\n        if (typeof tabHeader == 'number') {\n            if (this.headerEl.children.length > tabHeader) {\n                const header = this.headerEl.children[tabHeader];\n                if (header instanceof _.Layout.Tabs.TabHeader) {\n                    return this.setActive(header);\n                }\n            }\n            return false;\n        }\n        else if (typeof tabHeader == 'string') {\n            const header = this.tabs[tabHeader].tabHeader;\n            if (header)\n                return this.setActive(header);\n            return false;\n        }\n        if (this.activeHeader) {\n            this.activeHeader.active = false;\n            this.activeHeader.tab.selected = false;\n            this.activeHeader.tab.style.display = 'none';\n        }\n        this.activeHeader = tabHeader;\n        this.activeHeader.active = true;\n        this.activeHeader.tab.style.display = '';\n        this.activeHeader.tab.selected = true;\n    }\n    postCreation() {\n        super.postCreation();\n        this.loadTabs();\n    }\n}\nLayout.Tabs.Tabs.Namespace=`Aventus.Layout.Tabs`;\n__as1(_.Layout.Tabs, 'Tabs', Layout.Tabs.Tabs);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Layout.Tabs.Tab","isStrong":false},{"fullName":"Aventus.Layout.Tabs.TabHeader","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.Form.Constructor","isStrong":false}],"fullName":"Aventus.Layout.Tabs.Tabs","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Form.Validator=class Validator {\n    constructor() { this.validate = this.validate.bind(this); }\n    static async Test(validators, value, name, globalValidation) {\n        if (!Array.isArray(validators)) {\n            validators = [validators];\n        }\n        let result = [];\n        for (let validator of validators) {\n            let resultTemp = new validator();\n            const temp = await resultTemp.validate(value, name, globalValidation);\n            if (temp === false) {\n                result.push('Le champs n\\'est pas valide');\n            }\n            else if (Array.isArray(temp)) {\n                for (let error of temp) {\n                    result.push(error);\n                }\n            }\n            else if (typeof temp == 'string') {\n                result.push(temp);\n            }\n        }\n        return result.length == 0 ? undefined : result;\n    }\n}\nForm.Validator.Namespace=`Aventus.Form`;\r\n__as1(_.Form, 'Validator', Form.Validator);\r\n","dependances":[{"fullName":"Aventus.Form.Validator","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.Form.FormValidateResult","isStrong":false}],"fullName":"Aventus.Form.Validator","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Form.Validators.Required=class Required extends _.Form.Validator {\n    static msg = \"Le champs {name} est requis\";\n    _msg;\n    constructor(msg) {\n        super();\n        this._msg = msg ?? Form.Validators.Required.msg;\n    }\n    /**\n     * @inheritdoc\n     */\n    validate(value, name, globalValidation) {\n        const txt = this._msg.replace(/\\{ *name *\\}/g, name);\n        if (value === undefined || value === null) {\n            return txt;\n        }\n        if (typeof value == 'string' && value.trim() == \"\") {\n            return txt;\n        }\n        return true;\n    }\n}\nForm.Validators.Required.Namespace=`Aventus.Form.Validators`;\r\n__as1(_.Form.Validators, 'Required', Form.Validators.Required);\r\n","dependances":[{"fullName":"Aventus.Form.Validator","isStrong":true},{"fullName":"Aventus.Form.Validators.Required","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Aventus.Form.Validators.Required","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Form.Validators.Email=class Email extends _.Form.Validator {\n    static msg = \"Merci de saisir un email valide\";\n    _msg;\n    constructor(msg) {\n        super();\n        this._msg = msg ?? Form.Validators.Email.msg;\n    }\n    /**\n     * @inheritdoc\n     */\n    validate(value, name, globalValidation) {\n        if (typeof value == \"string\" && value) {\n            if (value.match(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}\\b/) != null) {\n                return true;\n            }\n            return this._msg.replace(/\\{ *name *\\}/g, name);\n        }\n        return true;\n    }\n}\nForm.Validators.Email.Namespace=`Aventus.Form.Validators`;\r\n__as1(_.Form.Validators, 'Email', Form.Validators.Email);\r\n","dependances":[{"fullName":"Aventus.Form.Validator","isStrong":true},{"fullName":"Aventus.Form.Validators.Email","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Aventus.Form.Validators.Email","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Form.FormElement = class FormElement extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"disabled\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'has_errors'() { return this.getBoolAttr('has_errors') }\n    set 'has_errors'(val) { this.setBoolAttr('has_errors', val) }\r    get 'disabled'() { return this.getBoolProp('disabled') }\n    set 'disabled'(val) { this.setBoolAttr('disabled', val) }\r    get 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\rget 'errors'() {\n\t\t\t\t\t\treturn this.__watch[\"errors\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'errors'(val) {\n\t\t\t\t\t\tthis.__watch[\"errors\"] = val;\n\t\t\t\t\t}\r    static get formAssociated() { return true; }\n    _form;\n    get form() {\n        return this._form;\n    }\n    set form(value) {\n        this.unlinkFormPart();\n        this._form = value;\n        this.linkFormPart();\n    }\n    internals;\n    canLinkValueToForm = false;\n    handler = undefined;\n    onChange = new Aventus.Callback();\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"value\", ((target) => {\n    target.onValueChange(target.value);\n}));\rthis.__addWatchesActions(\"errors\", ((target) => {\n    target.onErrorsChange();\n}));\r    super.__registerWatchesActions();\n}\n    static __style = ``;\n    constructor() {\n        super();\n        this.internals = this.attachInternals();\n        if (this.constructor == FormElement) {\n            throw \"can't instanciate an abstract class\";\n        }\n        this.refreshValueFromForm = this.refreshValueFromForm.bind(this);\n        this.onFormValidation = this.onFormValidation.bind(this);\n    }\n    __getStatic() {\n        return FormElement;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(FormElement.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"FormElement\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('has_errors')) { this.attributeChangedCallback('has_errors', false, false); }\rif(!this.hasAttribute('disabled')) { this.attributeChangedCallback('disabled', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"value\"] = undefined;\rw[\"errors\"] = [];\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('form');\rthis.__upgradeProperty('has_errors');\rthis.__upgradeProperty('disabled');\rthis.__correctGetter('value');\rthis.__correctGetter('errors');\r }\n    __listBoolProps() { return [\"has_errors\",\"disabled\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    refreshValueFromForm() {\n        if (this._form) {\n            this.errors = [];\n            this.value = this._form.value.get();\n        }\n    }\n    unlinkFormPart() {\n        if (this._form) {\n            this._form.unregister(this);\n            this._form.onValueChange.remove(this.refreshValueFromForm);\n            this._form.onValidation.remove(this.onFormValidation);\n        }\n    }\n    linkFormPart() {\n        if (this._form) {\n            this._form.register(this);\n            this._form.onValueChange.add(this.refreshValueFromForm);\n            this._form.onValidation.add(this.onFormValidation);\n            this.refreshValueFromForm();\n        }\n        else {\n            this.value = undefined;\n        }\n    }\n    async onFormValidation(errors) {\n        let _errors = await this.validation();\n        if (_errors.length == 0) {\n            _errors = errors;\n        }\n        else if (errors.length > 0) {\n            for (let error of errors) {\n                if (!_errors.includes(error)) {\n                    _errors.push(error);\n                }\n            }\n        }\n        this.errors = _errors;\n        return this.errors;\n    }\n    async validate() {\n        if (!this.form) {\n            this.errors = await this.validation();\n            return this.errors.length == 0;\n        }\n        return await this.form.test();\n    }\n    async validation() {\n        return [];\n    }\n    clearErrors() {\n        this.errors = [];\n    }\n    triggerChange(value) {\n        this.value = value;\n        this.onChange.trigger(this.value);\n        if (this.form) {\n            this.form.value.set(this.value);\n        }\n    }\n    onValueChange(value) {\n        this.linkValueToForm();\n    }\n    onErrorsChange() {\n        this.has_errors = this.errors.length > 0;\n        this.linkErrorToForm();\n    }\n    linkErrorToForm() {\n        if (!this.canLinkValueToForm)\n            return;\n        if (this.has_errors) {\n            this.internals.setValidity({\n                customError: true\n            }, this.errors.join(' & '));\n        }\n        else {\n            this.internals.setValidity({});\n        }\n    }\n    linkValueToForm() {\n        if (!this.canLinkValueToForm)\n            return;\n        if (this.value === undefined) {\n            this.internals.setFormValue(null);\n        }\n        else {\n            this.internals.setFormValue(this.value + '');\n        }\n    }\n    formAssociatedCallback(form) {\n        this.canLinkValueToForm = true;\n        this.linkValueToForm();\n        this.linkErrorToForm();\n        this.validate();\n    }\n    formDisabledCallback(disabled) {\n        this.disabled = disabled;\n    }\n    postCreation() {\n        super.postCreation();\n        let handler = this.findParentByType(_.Form.Form.formElements)?.registerElement(this);\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.unlinkFormPart();\n    }\n}\nForm.FormElement.Namespace=`Aventus.Form`;\n__as1(_.Form, 'FormElement', Form.FormElement);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Form.IFormElement","isStrong":true},{"fullName":"Storybook","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Aventus.Form.FormElement","isStrong":false},{"fullName":"Aventus.Form.InternalFormPart","isStrong":false},{"fullName":"Injectable","isStrong":false},{"fullName":"ElementInternals","isStrong":false},{"fullName":"Aventus.Form.IForm","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"HTMLFormElement","isStrong":false},{"fullName":"Aventus.Form.Form","isStrong":false}],"fullName":"Aventus.Form.FormElement","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Form.ButtonElement = class ButtonElement extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"type\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'type'() { return this.getStringProp('type') }\n    set 'type'(val) { this.setStringAttr('type', val) }\r    static get formAssociated() { return true; }\n    internals;\n    handler = undefined;\n    static __style = ``;\n    constructor() {\n        super();\n        this.internals = this.attachInternals();\n        if (this.constructor == ButtonElement) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return ButtonElement;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ButtonElement.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ButtonElement\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('type')){ this['type'] = 'button'; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('type');\r }\n    async triggerSubmit() {\n        if (this.type == \"submit\") {\n            if (\"loading\" in this) {\n                if (this.loading)\n                    return;\n                this.loading = true;\n            }\n            if (this.internals.form) {\n                this.internals.form.requestSubmit();\n            }\n            else if (this.handler) {\n                await this.handler.requestSubmit();\n                if (\"loading\" in this) {\n                    this.loading = false;\n                }\n            }\n        }\n    }\n    postCreation() {\n        super.postCreation();\n        this.handler = this.findParentByType(_.Form.Form.formElements)?.registerSubmit(this);\n        if (this.type == \"submit\") {\n            new Aventus.PressManager({\n                element: this,\n                onPress: () => {\n                    this.triggerSubmit();\n                }\n            });\n            this.addEventListener(\"keyup\", (e) => {\n                if (e.key == 'Enter') {\n                    this.triggerSubmit();\n                }\n            });\n        }\n    }\n}\nForm.ButtonElement.Namespace=`Aventus.Form`;\n__as1(_.Form, 'ButtonElement', Form.ButtonElement);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ElementInternals","isStrong":false},{"fullName":"Aventus.Form.IForm","isStrong":false},{"fullName":"Aventus.Form.Form","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Aventus.Form.ButtonElement","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Form.Form = class Form extends Aventus.WebComponent {\n    static get defaultConfig() {\n        return _.Form.FormHandler._globalConfig;\n    }\n    static set formElements(value) {\n        _.Form.FormHandler._IFormElements = value;\n    }\n    static get formElements() {\n        return _.Form.FormHandler._IFormElements;\n    }\n    form;\n    request;\n    elements = [];\n    btns = [];\n    onSubmit = new Aventus.Callback();\n    static __style = ``;\n    constructor() {\n        super();\n        this.checkEnter = this.checkEnter.bind(this);\n    }\n    __getStatic() {\n        return Form;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Form.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Form\";\n    }\n    checkEnter(e) {\n        if (e.key == \"Enter\") {\n            this.requestSubmit();\n        }\n    }\n    registerElement(element) {\n        if (this.elements.length > 0) {\n            this.elements[this.elements.length - 1].removeEventListener(\"keyup\", this.checkEnter);\n        }\n        this.elements.push(element);\n        element.addEventListener(\"keyup\", this.checkEnter);\n        return this;\n    }\n    registerSubmit(element) {\n        this.btns.push(element);\n        return this;\n    }\n    async requestSubmit() {\n        if (!this.form) {\n            for (let element of this.elements) {\n                this.form = element.form?.handler;\n                if (this.form)\n                    break;\n            }\n        }\n        if (this.form) {\n            if (this.request) {\n                this.form.submit(this.request);\n            }\n            else if (await this.form.validate()) {\n                this.onSubmit.trigger();\n            }\n        }\n    }\n    static create(schema, config) {\n        let form = new _.Form.FormHandler(schema, config);\n        return form;\n    }\n    static configure(value) {\n        _.Form.FormHandler._globalConfig = value;\n    }\n}\nForm.Form.Namespace=`Aventus.Form`;\nForm.Form.Tag=`av-form`;\n__as1(_.Form, 'Form', Form.Form);\nif(!window.customElements.get('av-form')){window.customElements.define('av-form', Form.Form);Aventus.WebComponentInstance.registerDefinition(Form.Form);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Form.IForm","isStrong":true},{"fullName":"Aventus.Form.FormSchema","isStrong":false},{"fullName":"Aventus.Form.FormHandlerConfig","isStrong":false},{"fullName":"Aventus.Form.FormHandler","isStrong":false},{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Injectable","isStrong":false},{"fullName":"Aventus.Form.SubmitFunction","isStrong":false},{"fullName":"Aventus.Form.FormElement","isStrong":false},{"fullName":"Aventus.Form.ButtonElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"KeyboardEvent","isStrong":false},{"fullName":"Aventus.Form.Form","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Aventus.Form.Form","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-form","slots":{"default":{"local":true}}},{"code":"Navigation.PageForm = class PageForm extends Navigation.Page {\n    _form;\n    get form() { return this._form; }\n    elements = [];\n    btns = [];\n    static __style = ``;\n    constructor() {\n        super();\n        this._form = new Form.FormHandler(this.formSchema(), this.formConfig());\n        if (this.constructor == PageForm) {\n            throw \"can't instanciate an abstract class\";\n        }\n        this.checkEnter = this.checkEnter.bind(this);\n    }\n    __getStatic() {\n        return PageForm;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PageForm.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PageForm\";\n    }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('form');\r }\n    formConfig() {\n        return {};\n    }\n    pageConfig() {\n        return {\n            submitWithEnter: true,\n            autoLoading: true\n        };\n    }\n    async submit() {\n        this.setLoading(true);\n        const result = await this.defineSubmit((fct) => this.form.submit(fct));\n        this.setLoading(false);\n        return result;\n    }\n    setLoading(isLoading) {\n        const autoLoading = this.pageConfig().autoLoading;\n        if (autoLoading) {\n            for (let btn of this.btns) {\n                if (\"loading\" in btn) {\n                    btn.loading = isLoading;\n                }\n            }\n        }\n    }\n    checkEnter(e) {\n        if (e.key == \"Enter\") {\n            this.submit();\n        }\n    }\n    registerElement(element) {\n        const submitWithEnter = this.pageConfig().submitWithEnter;\n        if (this.elements.length > 0) {\n            if (submitWithEnter)\n                this.elements[this.elements.length - 1].removeEventListener(\"keyup\", this.checkEnter);\n        }\n        this.elements.push(element);\n        if (submitWithEnter)\n            element.addEventListener(\"keyup\", this.checkEnter);\n        return this;\n    }\n    registerSubmit(element) {\n        this.btns.push(element);\n        return this;\n    }\n    async requestSubmit() {\n        await this.submit();\n    }\n}\nNavigation.PageForm.Namespace=`Aventus.Navigation`;\n__as1(_.Navigation, 'PageForm', Navigation.PageForm);\n","dependances":[{"fullName":"Aventus.Navigation.Page","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Form.IForm","isStrong":true},{"fullName":"Aventus.Form.FormHandler","isStrong":false},{"fullName":"Aventus.Form.FormElement","isStrong":false},{"fullName":"Aventus.Form.ButtonElement","isStrong":false},{"fullName":"Aventus.Form.FormSchema","isStrong":false},{"fullName":"Aventus.Form.FormHandlerConfig","isStrong":false},{"fullName":"Aventus.Navigation.PageFormConfig","isStrong":false},{"fullName":"Aventus.Form.SubmitFunction","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Form.WithError","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"KeyboardEvent","isStrong":false},{"fullName":"Aventus.Navigation.PageForm","isStrong":false}],"fullName":"Aventus.Navigation.PageForm","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Navigation.PageFormRoute = class PageFormRoute extends Navigation.PageForm {\n    static __style = ``;\n    constructor() {\n        super();\n        if (this.constructor == PageFormRoute) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return PageFormRoute;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PageFormRoute.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PageFormRoute\";\n    }\n    async defineSubmit(submit) {\n        await this.beforeSubmit();\n        const info = this.route();\n        let router;\n        let key = \"\";\n        if (Array.isArray(info)) {\n            router = new info[0];\n            key = info[1];\n        }\n        else {\n            router = new info;\n            const fcts = Object.getOwnPropertyNames(info.prototype).filter(m => m !== \"constructor\");\n            if (fcts.length == 1) {\n                key = fcts[0];\n            }\n            else {\n                const result = new Aventus.VoidWithError();\n                result.errors.push(new Aventus.GenericError(500, \"More than one fonction is defined\"));\n                return result;\n            }\n        }\n        const result = await submit(router[key]);\n        this.onResult(result);\n        return result;\n    }\n    beforeSubmit() { }\n}\nNavigation.PageFormRoute.Namespace=`Aventus.Navigation`;\n__as1(_.Navigation, 'PageFormRoute', Navigation.PageFormRoute);\n","dependances":[{"fullName":"Aventus.Navigation.PageForm","isStrong":true},{"fullName":"Aventus.Navigation.LastParameter","isStrong":false},{"fullName":"Aventus.Form.ExtractError","isStrong":false},{"fullName":"Awaited","isStrong":false},{"fullName":"Aventus.Navigation.Result","isStrong":false},{"fullName":"InstanceType","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.HttpRoute","isStrong":false},{"fullName":"Aventus.Navigation.KeyResult","isStrong":false},{"fullName":"Aventus.Form.SubmitFunction","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Form.WithError","isStrong":false},{"fullName":"Aventus.VoidWithError","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false}],"fullName":"Aventus.Navigation.PageFormRoute","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Form.FormHandler=class FormHandler {\n    static _globalConfig;\n    static _IFormElements = [Form.Form, Navigation.PageForm];\n    __watcher;\n    get item() {\n        return this.__watcher.item;\n    }\n    set item(item) {\n        this.__watcher.item = item;\n    }\n    get parts() {\n        return this.__watcher.form;\n    }\n    _elements = {};\n    get elements() {\n        return { ...this._elements };\n    }\n    _globalValidation;\n    _validateOnChange = false;\n    _handleValidateNoInputError;\n    _handleExecuteNoInputError;\n    defaultValues;\n    onItemChange = new Aventus.Callback();\n    constructor(schema, config, defaultValues) {\n        this.writeValidationIntoConsole = this.writeValidationIntoConsole.bind(this);\n        this.writeErrorIntoConsole = this.writeErrorIntoConsole.bind(this);\n        this._globalValidation = config?.validate ?? Form.FormHandler._globalConfig?.validate;\n        this._validateOnChange = config?.validateOnChange ?? Form.FormHandler._globalConfig?.validateOnChange ?? false;\n        this._handleValidateNoInputError = config?.handleValidateNoInputError ?? Form.FormHandler._globalConfig?.handleValidateNoInputError ?? this.writeValidationIntoConsole;\n        this._handleExecuteNoInputError = config?.handleExecuteNoInputError ?? Form.FormHandler._globalConfig?.handleExecuteNoInputError ?? this.writeErrorIntoConsole;\n        this.defaultValues = defaultValues ?? {};\n        this.onWatcherChanged = this.onWatcherChanged.bind(this);\n        this.__watcher = Aventus.Watcher.get({\n            form: {},\n            item: this.defaultValues\n        }, this.onWatcherChanged);\n        this.__watcher.form = this.transformForm(schema);\n    }\n    writeValidationIntoConsole(errors) {\n        for (let name in errors) {\n            if (!errors[name])\n                continue;\n            for (let error of errors[name]) {\n                console.log(name + \": \" + error);\n            }\n        }\n    }\n    writeErrorIntoConsole(errors) {\n        for (let error in errors) {\n            console.log(error);\n        }\n    }\n    transformForm(form) {\n        const result = form;\n        const normalizePart = (part) => {\n            let needTransform = true;\n            if (typeof part == 'object' && !Array.isArray(part)) {\n                const keys = Object.keys(part);\n                const keysAllows = ['validate', 'validateOnChange'];\n                let isValid = true;\n                for (let i = 0; i < keys.length; i++) {\n                    const allows = keysAllows;\n                    if (!allows.includes(keys[i])) {\n                        isValid = false;\n                        break;\n                    }\n                }\n                if (isValid) {\n                    needTransform = false;\n                }\n            }\n            if (needTransform) {\n                return {\n                    validate: part\n                };\n            }\n            return part;\n        };\n        const createKey = (key) => {\n            form[key] = normalizePart(form[key]);\n            this.transformFormPart(key, form[key]);\n        };\n        for (let key in result) {\n            createKey(key);\n        }\n        return result;\n    }\n    transformFormPart(key, part) {\n        if (!part)\n            return;\n        const realPart = part;\n        realPart.onValidation = new Aventus.Callback();\n        realPart.onValueChange = new Aventus.Callback();\n        realPart.handler = this;\n        if (part.validate) {\n            const isConstructor = (validate) => {\n                return Aventus.isClass(validate);\n            };\n            let validate;\n            if (Array.isArray(part.validate)) {\n                const fcts = [];\n                for (let temp of part.validate) {\n                    if (temp instanceof _.Form.Validator) {\n                        fcts.push(temp.validate);\n                    }\n                    else {\n                        let resultTemp = new temp();\n                        fcts.push(resultTemp.validate);\n                    }\n                }\n                validate = async (value, name, globalFct) => {\n                    let result = [];\n                    for (let fct of fcts) {\n                        const temp = await fct(value, name, globalFct);\n                        if (temp === false) {\n                            result.push('Le champs n\\'est pas valide');\n                        }\n                        else if (Array.isArray(temp)) {\n                            for (let error of temp) {\n                                result.push(error);\n                            }\n                        }\n                        else if (typeof temp == 'string') {\n                            result.push(temp);\n                        }\n                    }\n                    return result.length == 0 ? undefined : result;\n                };\n            }\n            else if (part.validate instanceof _.Form.Validator) {\n                validate = part.validate.validate;\n            }\n            else if (isConstructor(part.validate)) {\n                let cst = part.validate;\n                let resultTemp = new cst();\n                validate = resultTemp.validate;\n            }\n            else {\n                validate = part.validate;\n            }\n            realPart.validate = validate;\n        }\n        realPart.test = async () => {\n            const result = await this.validate(key);\n            return result;\n        };\n        if (!this._elements[key]) {\n            this._elements[key] = [];\n        }\n        realPart.register = (el) => {\n            if (this._elements[key] && !this._elements[key].includes(el)) {\n                this._elements[key].push(el);\n            }\n        };\n        realPart.unregister = (el) => {\n            if (!this._elements[key])\n                return;\n            const index = this._elements[key].indexOf(el);\n            if (index != -1) {\n                this._elements[key].splice(index, 1);\n            }\n        };\n        realPart.value = {\n            get: () => {\n                return Aventus.getValueFromObject(key, this.item);\n            },\n            set: (value) => {\n                return Aventus.setValueToObject(key, this.item, value);\n            }\n        };\n        return;\n    }\n    async onWatcherChanged(action, path, value) {\n        if (!this.parts)\n            return;\n        if (path == \"item\") {\n            for (let key in this.parts) {\n                let formPart = this.parts[key];\n                formPart.onValueChange.trigger();\n            }\n        }\n        else if (path.startsWith(\"item.\")) {\n            let key = path.substring(\"item.\".length);\n            if (this.parts[key]) {\n                let formPart = this.parts[key];\n                formPart.onValueChange.trigger();\n                const validateOnChange = formPart.validateOnChange === undefined ? this._validateOnChange : formPart.validateOnChange;\n                if (validateOnChange) {\n                    this.validate(key);\n                }\n            }\n            this.onItemChange.trigger(action, key, value);\n        }\n    }\n    async _validate(key) {\n        try {\n            if (!this.parts)\n                return { \"@general\": [\"Aucun formulaire trouvé\"] };\n            if (key !== undefined) {\n                let errorsForm = [];\n                if (this.parts[key]) {\n                    let formPart = this.parts[key];\n                    let value = formPart.value.get();\n                    const resultToError = (result) => {\n                        if (result === false) {\n                            errorsForm.push('Le champs n\\'est pas valide');\n                        }\n                        else if (typeof result == 'string' && result !== \"\") {\n                            errorsForm.push(result);\n                        }\n                        else if (Array.isArray(result)) {\n                            errorsForm = [...errorsForm, ...result];\n                        }\n                    };\n                    if (formPart.validate) {\n                        const global = async () => {\n                            if (this._globalValidation) {\n                                const result = await this._globalValidation(key, value);\n                                resultToError(result);\n                            }\n                        };\n                        let result = await formPart.validate(value, key, global);\n                        resultToError(result);\n                    }\n                    else if (this._globalValidation) {\n                        const result = await this._globalValidation(key, value);\n                        resultToError(result);\n                    }\n                    const proms = formPart.onValidation.trigger(errorsForm);\n                    const errors2d = await Promise.all(proms);\n                    const errors = [];\n                    for (let errorsTemp of errors2d) {\n                        for (let errorTemp of errorsTemp) {\n                            if (!errors.includes(errorTemp)) {\n                                errors.push(errorTemp);\n                            }\n                        }\n                    }\n                    errorsForm = errors;\n                }\n                return errorsForm.length == 0 ? {} : { [key]: errorsForm };\n            }\n            let errors = {};\n            for (let key in this.parts) {\n                errors = { ...errors, ...await this._validate(key) };\n            }\n            return errors;\n        }\n        catch (e) {\n            return { \"@general\": [e + \"\"] };\n        }\n    }\n    async validate(key) {\n        const result = await this._validate(key);\n        const unhandle = {};\n        let triggerUnhandle = false;\n        for (let key in result) {\n            if (!this._elements[key] || this._elements[key].length == 0) {\n                triggerUnhandle = true;\n                unhandle[key] = result[key];\n            }\n        }\n        if (triggerUnhandle && this._handleValidateNoInputError) {\n            this._handleValidateNoInputError(unhandle);\n        }\n        return Object.keys(result).length == 0;\n    }\n    async submit(query) {\n        const result = await this.validate();\n        if (!result) {\n            return null;\n        }\n        return this.execute(query);\n    }\n    async execute(query) {\n        if (typeof query == \"function\") {\n            if (!this.item) {\n                const result = new Aventus.VoidWithError();\n                result.errors.push(new Aventus.GenericError(404, \"No item inside the form\"));\n                return result;\n            }\n            query = query(this.item);\n        }\n        let queryResult = await query;\n        if (queryResult.errors.length > 0) {\n            queryResult.errors = this.parseErrors(queryResult);\n            if (queryResult.errors.length > 0 && this._handleExecuteNoInputError) {\n                this._handleExecuteNoInputError(queryResult.errors);\n            }\n        }\n        return queryResult;\n    }\n    parseErrors(queryResult) {\n        let noPrintErrors = [];\n        const elements = this.elements;\n        for (let error of queryResult.errors) {\n            if (error.details) {\n                if (Array.isArray(error.details)) {\n                    let found = false;\n                    for (let detail of error.details) {\n                        if (Object.hasOwn(detail, \"Name\")) {\n                            if (elements[detail.Name]) {\n                                for (const element of elements[detail.Name]) {\n                                    element.errors.push(error.message);\n                                }\n                                found = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (found) {\n                        continue;\n                    }\n                }\n                else {\n                    let found = false;\n                    for (let key in error.details) {\n                        if (elements[key]) {\n                            if (Array.isArray(error.details[key])) {\n                                for (const element of elements[key]) {\n                                    for (let detail of error.details[key]) {\n                                        element.errors.push(detail);\n                                    }\n                                }\n                                found = true;\n                            }\n                            else {\n                                for (const element of elements[key]) {\n                                    element.errors.push(error.details[key]);\n                                }\n                                found = true;\n                            }\n                        }\n                    }\n                    if (found) {\n                        continue;\n                    }\n                }\n            }\n            noPrintErrors.push(error);\n        }\n        return noPrintErrors;\n    }\n    reset() {\n        this.item = this.defaultValues;\n    }\n}\nForm.FormHandler.Namespace=`Aventus.Form`;\r\n__as1(_.Form, 'FormHandler', Form.FormHandler);\r\n","dependances":[{"fullName":"Internal","isStrong":true},{"fullName":"Aventus.Form.FormHandlerConfig","isStrong":true},{"fullName":"Aventus.Form.Constructor","isStrong":true},{"fullName":"Aventus.Form.IForm","isStrong":true},{"fullName":"Aventus.Form.InternalForm","isStrong":false},{"fullName":"Aventus.Form.IFormElement","isStrong":false},{"fullName":"Aventus.Form.FormValidate","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"Aventus.Form.FormSchema","isStrong":false},{"fullName":"Aventus.Form.FormHandler","isStrong":false},{"fullName":"Aventus.Watcher","isStrong":false},{"fullName":"Aventus.Form.FormPart","isStrong":false},{"fullName":"Aventus.Form.InternalFormPart","isStrong":false},{"fullName":"Aventus.Form.FormPartValidate","isStrong":false},{"fullName":"Aventus.Form.Validator","isStrong":false},{"fullName":"Aventus.isClass","isStrong":false},{"fullName":"Aventus.getValueFromObject","isStrong":false},{"fullName":"Aventus.setValueToObject","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Form.FormValidateResult","isStrong":false},{"fullName":"Aventus.Form.SubmitFunction","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Aventus.Form.WithError","isStrong":false},{"fullName":"Aventus.VoidWithError","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false},{"fullName":"Aventus.Navigation.PageForm","isStrong":true},{"fullName":"Aventus.Form.Form","isStrong":true}],"fullName":"Aventus.Form.FormHandler","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.ShortcutManager=class ShortcutManager {\n    static memory = {};\n    static autoPrevents = [];\n    static isInit = false;\n    static arrayKeys = [];\n    static options = new Map();\n    static replacingMemory = {};\n    static isTxt(touch) {\n        return touch.match(/[a-zA-Z0-9_\\+\\-]/g);\n    }\n    static getText(combinaison) {\n        let allTouches = [];\n        for (let touch of combinaison) {\n            let realTouch = \"\";\n            if (typeof touch == \"number\" && Lib.SpecialTouch[touch] !== undefined) {\n                realTouch = Lib.SpecialTouch[touch];\n            }\n            else if (this.isTxt(touch)) {\n                realTouch = touch;\n            }\n            else {\n                throw \"I can't use \" + touch + \" to add a shortcut\";\n            }\n            allTouches.push(realTouch);\n        }\n        allTouches.sort();\n        return allTouches.join(\"+\");\n    }\n    static subscribe(combinaison, cb, options) {\n        if (!Array.isArray(combinaison)) {\n            combinaison = [combinaison];\n        }\n        let key = this.getText(combinaison);\n        if (options?.replaceTemp) {\n            if (Lib.ShortcutManager.memory[key]) {\n                if (!this.replacingMemory[key]) {\n                    this.replacingMemory[key] = [];\n                }\n                this.replacingMemory[key].push(Lib.ShortcutManager.memory[key]);\n                delete Lib.ShortcutManager.memory[key];\n            }\n        }\n        if (!Lib.ShortcutManager.memory[key]) {\n            Lib.ShortcutManager.memory[key] = [];\n        }\n        if (!Lib.ShortcutManager.memory[key].includes(cb)) {\n            Lib.ShortcutManager.memory[key].push(cb);\n            if (options) {\n                this.options.set(cb, options);\n            }\n        }\n        if (!Lib.ShortcutManager.isInit) {\n            Lib.ShortcutManager.init();\n        }\n    }\n    static unsubscribe(combinaison, cb) {\n        if (!Array.isArray(combinaison)) {\n            combinaison = [combinaison];\n        }\n        let key = this.getText(combinaison);\n        if (Lib.ShortcutManager.memory[key]) {\n            let index = Lib.ShortcutManager.memory[key].indexOf(cb);\n            if (index != -1) {\n                Lib.ShortcutManager.memory[key].splice(index, 1);\n                let options = this.options.get(cb);\n                if (options) {\n                    this.options.delete(cb);\n                }\n                if (Lib.ShortcutManager.memory[key].length == 0) {\n                    delete Lib.ShortcutManager.memory[key];\n                    if (options?.replaceTemp) {\n                        if (this.replacingMemory[key]) {\n                            if (this.replacingMemory[key].length > 0) {\n                                Lib.ShortcutManager.memory[key] = this.replacingMemory[key].pop();\n                                if (this.replacingMemory[key].length == 0) {\n                                    delete this.replacingMemory[key];\n                                }\n                            }\n                            else {\n                                delete this.replacingMemory[key];\n                            }\n                        }\n                    }\n                }\n                if (Object.keys(Lib.ShortcutManager.memory).length == 0 && Lib.ShortcutManager.isInit) {\n                    //ShortcutManager.uninit();\n                }\n            }\n        }\n    }\n    static onKeyDown(e) {\n        if (e.ctrlKey) {\n            let txt = Lib.SpecialTouch[Lib.SpecialTouch.Control];\n            if (!this.arrayKeys.includes(txt)) {\n                this.arrayKeys.push(txt);\n            }\n        }\n        if (e.altKey) {\n            let txt = Lib.SpecialTouch[Lib.SpecialTouch.Alt];\n            if (!this.arrayKeys.includes(txt)) {\n                this.arrayKeys.push(txt);\n            }\n        }\n        if (e.shiftKey) {\n            let txt = Lib.SpecialTouch[Lib.SpecialTouch.Shift];\n            if (!this.arrayKeys.includes(txt)) {\n                this.arrayKeys.push(txt);\n            }\n        }\n        if (this.isTxt(e.key) && !this.arrayKeys.includes(e.key)) {\n            this.arrayKeys.push(e.key);\n        }\n        else if (Lib.SpecialTouch[e.key] !== undefined && !this.arrayKeys.includes(e.key)) {\n            this.arrayKeys.push(e.key);\n        }\n        this.arrayKeys.sort();\n        let key = this.arrayKeys.join(\"+\");\n        if (Lib.ShortcutManager.memory[key]) {\n            let preventDefault = true;\n            for (let cb of Lib.ShortcutManager.memory[key]) {\n                let options = this.options.get(cb);\n                if (options && options.preventDefault === false) {\n                    preventDefault = false;\n                }\n            }\n            this.arrayKeys = [];\n            for (let cb of Lib.ShortcutManager.memory[key]) {\n                const result = cb();\n                if (result === false) {\n                    preventDefault = result;\n                }\n            }\n            if (preventDefault) {\n                e.preventDefault();\n            }\n        }\n        else if (Lib.ShortcutManager.autoPrevents.includes(key)) {\n            e.preventDefault();\n        }\n    }\n    static onKeyUp(e) {\n        let index = this.arrayKeys.indexOf(e.key);\n        if (index != -1) {\n            this.arrayKeys.splice(index, 1);\n        }\n    }\n    static init() {\n        if (Lib.ShortcutManager.isInit)\n            return;\n        Lib.ShortcutManager.isInit = true;\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        Lib.ShortcutManager.autoPrevents = [\n            this.getText([Lib.SpecialTouch.Control, \"s\"]),\n            this.getText([Lib.SpecialTouch.Control, \"p\"]),\n            this.getText([Lib.SpecialTouch.Control, \"l\"]),\n            this.getText([Lib.SpecialTouch.Control, \"k\"]),\n            this.getText([Lib.SpecialTouch.Control, \"j\"]),\n            this.getText([Lib.SpecialTouch.Control, \"h\"]),\n            this.getText([Lib.SpecialTouch.Control, \"g\"]),\n            this.getText([Lib.SpecialTouch.Control, \"f\"]),\n            this.getText([Lib.SpecialTouch.Control, \"d\"]),\n            this.getText([Lib.SpecialTouch.Control, \"o\"]),\n            this.getText([Lib.SpecialTouch.Control, \"u\"]),\n            this.getText([Lib.SpecialTouch.Control, \"e\"]),\n        ];\n        window.addEventListener(\"blur\", () => {\n            this.arrayKeys = [];\n        });\n        document.body.addEventListener(\"keydown\", this.onKeyDown);\n        document.body.addEventListener(\"keyup\", this.onKeyUp);\n    }\n    static uninit() {\n        document.body.removeEventListener(\"keydown\", this.onKeyDown);\n        document.body.removeEventListener(\"keyup\", this.onKeyUp);\n        this.arrayKeys = [];\n        Lib.ShortcutManager.isInit = false;\n    }\n}\nLib.ShortcutManager.Namespace=`Aventus.Lib`;\r\n__as1(_.Lib, 'ShortcutManager', Lib.ShortcutManager);\r\n","dependances":[{"fullName":"Promise","isStrong":true},{"fullName":"Map","isStrong":true},{"fullName":"Aventus.Lib.ShortcutManagerOptions","isStrong":true},{"fullName":"Aventus.Lib.SpecialTouch","isStrong":false},{"fullName":"Aventus.Lib.ShortcutManager","isStrong":false},{"fullName":"KeyboardEvent","isStrong":false}],"fullName":"Aventus.Lib.ShortcutManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Layout.GridHelper = class GridHelper extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"unit\", \"nb_col\", \"nb_row\", \"col_width\", \"row_height\", \"ruler_size\", \"step\", \"step_big\", \"magnetic\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'show_rulers'() { return this.getBoolAttr('show_rulers') }\n    set 'show_rulers'(val) { this.setBoolAttr('show_rulers', val) }\rget 'show_grid'() { return this.getBoolAttr('show_grid') }\n    set 'show_grid'(val) { this.setBoolAttr('show_grid', val) }\rget 'show_ruler'() { return this.getBoolAttr('show_ruler') }\n    set 'show_ruler'(val) { this.setBoolAttr('show_ruler', val) }\rget 'show_guides'() { return this.getBoolAttr('show_guides') }\n    set 'show_guides'(val) { this.setBoolAttr('show_guides', val) }\rget 'lock'() { return this.getBoolAttr('lock') }\n    set 'lock'(val) { this.setBoolAttr('lock', val) }\rget 'visible'() { return this.getBoolAttr('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\r    get 'unit'() { return this.getStringProp('unit') }\n    set 'unit'(val) { this.setStringAttr('unit', val) }\rget 'nb_col'() { return this.getNumberProp('nb_col') }\n    set 'nb_col'(val) { this.setNumberAttr('nb_col', val) }\rget 'nb_row'() { return this.getNumberProp('nb_row') }\n    set 'nb_row'(val) { this.setNumberAttr('nb_row', val) }\rget 'col_width'() { return this.getNumberProp('col_width') }\n    set 'col_width'(val) { this.setNumberAttr('col_width', val) }\rget 'row_height'() { return this.getNumberProp('row_height') }\n    set 'row_height'(val) { this.setNumberAttr('row_height', val) }\rget 'ruler_size'() { return this.getNumberProp('ruler_size') }\n    set 'ruler_size'(val) { this.setNumberAttr('ruler_size', val) }\rget 'step'() { return this.getNumberProp('step') }\n    set 'step'(val) { this.setNumberAttr('step', val) }\rget 'step_big'() { return this.getNumberProp('step_big') }\n    set 'step_big'(val) { this.setNumberAttr('step_big', val) }\rget 'magnetic'() { return this.getNumberProp('magnetic') }\n    set 'magnetic'(val) { this.setNumberAttr('magnetic', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"unit\", ((target) => {\n    target.rulerLeftEl.style.setProperty(\"--ruler-size\", target.ruler_size + target.unit);\n    target.rulerTopEl.style.setProperty(\"--ruler-size\", target.ruler_size + target.unit);\n    target.lockEl.style.setProperty(\"--ruler-size\", target.ruler_size + target.unit);\n}));\rthis.__addPropertyActions(\"nb_row\", ((target) => {\n}));\rthis.__addPropertyActions(\"row_height\", ((target) => {\n}));\rthis.__addPropertyActions(\"ruler_size\", ((target) => {\n    target.rulerLeftEl.style.setProperty(\"--ruler-size\", target.ruler_size + target.unit);\n    target.rulerTopEl.style.setProperty(\"--ruler-size\", target.ruler_size + target.unit);\n    target.lockEl.style.setProperty(\"--ruler-size\", target.ruler_size + target.unit);\n}));\r }\n    static __style = `:host{--ruler-color: white;display:none;font-family:Arial,Helvetica,sans-serif;inset:0;pointer-events:none;position:fixed;user-select:none;z-index:9999}:host .grid{inset:0;position:absolute}:host .grid .cols,:host .grid .rows{display:flex;inset:0;position:absolute}:host .grid .rows{flex-direction:column}:host .grid .col{flex-shrink:0;height:100%;position:relative;width:var(--local-col-width)}:host .grid .col::after{background-color:#e78181;content:\"\";height:100%;position:absolute;right:-1px;top:0;width:2px}:host .grid .col:last-child::after{display:none}:host .grid .row{flex-shrink:0;height:var(--local-row-height);position:relative;width:100%}:host .grid .row::after{background-color:#e78181;bottom:-1px;content:\"\";height:2px;left:0;position:absolute;width:100%}:host .grid .row:last-child::after{display:none}:host .ruler-top{background-color:var(--ruler-color);height:var(--ruler-size);pointer-events:all;position:absolute;top:0;width:100%;z-index:3}:host .ruler-top::after{bottom:0;box-shadow:5px 0 5px #818181;content:\"\";height:100%;left:var(--ruler-size);pointer-events:none;position:absolute;width:calc(100% - var(--ruler-size))}:host .ruler-top .ruler-content{display:flex;flex-direction:row;height:100%;overflow:hidden;padding-left:var(--ruler-size)}:host .ruler-top .ruler-content .step{display:flex;flex-direction:column;flex-shrink:0;justify-content:space-between;text-align:left;width:var(--step-width)}:host .ruler-top .ruler-content .step span{align-items:center;display:flex;flex-grow:1;font-size:10px;transform:translateX(-50%);width:min-content}:host .ruler-top .ruler-content .step::after{background-color:#3d3d3d;content:\"\";display:inline-block;flex-shrink:0;height:3px;transform:translateX(-50%);width:2px}:host .ruler-top .ruler-content .step.big::after{background-color:#000;height:8px}:host .ruler-left{height:100%;pointer-events:all;position:absolute;top:0;width:var(--ruler-size);z-index:4}:host .ruler-left::after{box-shadow:0px 5px 5px #818181;content:\"\";height:calc(100% - var(--ruler-size));left:0;pointer-events:none;position:absolute;top:var(--ruler-size);width:100%}:host .ruler-left .ruler-content{display:flex;flex-direction:column;height:100%;overflow:hidden;padding-top:var(--ruler-size);position:relative;width:100%}:host .ruler-left .ruler-content::before{background-color:var(--ruler-color);content:\"\";inset:0;position:absolute;top:var(--ruler-size);z-index:2}:host .ruler-left .ruler-content .step{display:flex;flex-direction:row;flex-shrink:0;height:var(--step-height);justify-content:space-between;position:relative;text-align:left;z-index:3}:host .ruler-left .ruler-content .step span{display:flex;flex-grow:1;font-size:10px;height:min-content;justify-content:center;transform:translateY(-50%)}:host .ruler-left .ruler-content .step::after{background-color:#3d3d3d;content:\"\";display:inline-block;flex-shrink:0;height:2px;transform:translateY(-50%);width:3px}:host .ruler-left .ruler-content .step.big::after{background-color:#000;width:8px}:host .lock{align-items:center;cursor:pointer;display:flex;height:var(--ruler-size);justify-content:center;left:0;pointer-events:all;position:absolute;top:0;width:var(--ruler-size);z-index:5}:host .lock svg{aspect-ratio:1;display:inline-block;width:50%}:host .lock .close{display:none}:host([visible]){display:block}:host(:not([show_grid])) .grid{display:none}:host(:not([show_ruler])) .ruler-top{display:none}:host(:not([show_ruler])) .ruler-left{display:none}:host(:not([show_guides])) .guides{display:none}:host([lock]){--ruler-color: #eeeeee}:host([lock]) .ruler-top,:host([lock]) .ruler-left{cursor:not-allowed}:host([lock]) .guides av-grid-guide-helper{pointer-events:none}:host([lock]) .lock .open{display:none}:host([lock]) .lock .close{display:inline-block}`;\n    __getStatic() {\n        return GridHelper;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(GridHelper.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"lock\" _id=\"gridhelper_0\">\r    <svg class=\"close\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r        <rect width=\"18\" height=\"11\" x=\"3\" y=\"11\" rx=\"2\" ry=\"2\"></rect>\r        <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\r    </svg>\r    <svg class=\"open\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r        <rect width=\"18\" height=\"11\" x=\"3\" y=\"11\" rx=\"2\" ry=\"2\"></rect>\r        <path d=\"M7 11V7a5 5 0 0 1 9.9-1\"></path>\r    </svg>\r</div><div class=\"ruler-top\" _id=\"gridhelper_1\">\r    <div class=\"ruler-content\" _id=\"gridhelper_2\"></div>\r</div><div class=\"ruler-left\" _id=\"gridhelper_3\">\r    <div class=\"ruler-content\" _id=\"gridhelper_4\"></div>\r</div><div class=\"grid\" _id=\"gridhelper_5\">\r    <div class=\"cols\" _id=\"gridhelper_6\"></div>\r    <div class=\"rows\" _id=\"gridhelper_7\"></div>\r</div><div class=\"guides\" _id=\"gridhelper_8\">\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"lockEl\",\n      \"ids\": [\n        \"gridhelper_0\"\n      ]\n    },\n    {\n      \"name\": \"rulerTopEl\",\n      \"ids\": [\n        \"gridhelper_1\"\n      ]\n    },\n    {\n      \"name\": \"rulerTopContentEl\",\n      \"ids\": [\n        \"gridhelper_2\"\n      ]\n    },\n    {\n      \"name\": \"rulerLeftEl\",\n      \"ids\": [\n        \"gridhelper_3\"\n      ]\n    },\n    {\n      \"name\": \"rulerLeftContentEl\",\n      \"ids\": [\n        \"gridhelper_4\"\n      ]\n    },\n    {\n      \"name\": \"gridEl\",\n      \"ids\": [\n        \"gridhelper_5\"\n      ]\n    },\n    {\n      \"name\": \"colsEl\",\n      \"ids\": [\n        \"gridhelper_6\"\n      ]\n    },\n    {\n      \"name\": \"rowsEl\",\n      \"ids\": [\n        \"gridhelper_7\"\n      ]\n    },\n    {\n      \"name\": \"guidesEl\",\n      \"ids\": [\n        \"gridhelper_8\"\n      ]\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"gridhelper_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleLock(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"GridHelper\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('show_rulers')) { this.attributeChangedCallback('show_rulers', false, false); }\rif(!this.hasAttribute('show_grid')) {this.setAttribute('show_grid' ,'true'); }\rif(!this.hasAttribute('show_ruler')) {this.setAttribute('show_ruler' ,'true'); }\rif(!this.hasAttribute('show_guides')) {this.setAttribute('show_guides' ,'true'); }\rif(!this.hasAttribute('lock')) {this.setAttribute('lock' ,'true'); }\rif(!this.hasAttribute('visible')) {this.setAttribute('visible' ,'true'); }\rif(!this.hasAttribute('unit')){ this['unit'] = 'px'; }\rif(!this.hasAttribute('nb_col')){ this['nb_col'] = 0; }\rif(!this.hasAttribute('nb_row')){ this['nb_row'] = 0; }\rif(!this.hasAttribute('col_width')){ this['col_width'] = undefined; }\rif(!this.hasAttribute('row_height')){ this['row_height'] = undefined; }\rif(!this.hasAttribute('ruler_size')){ this['ruler_size'] = 25; }\rif(!this.hasAttribute('step')){ this['step'] = 20; }\rif(!this.hasAttribute('step_big')){ this['step_big'] = undefined; }\rif(!this.hasAttribute('magnetic')){ this['magnetic'] = 0; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('show_rulers');\rthis.__upgradeProperty('show_grid');\rthis.__upgradeProperty('show_ruler');\rthis.__upgradeProperty('show_guides');\rthis.__upgradeProperty('lock');\rthis.__upgradeProperty('visible');\rthis.__upgradeProperty('unit');\rthis.__upgradeProperty('nb_col');\rthis.__upgradeProperty('nb_row');\rthis.__upgradeProperty('col_width');\rthis.__upgradeProperty('row_height');\rthis.__upgradeProperty('ruler_size');\rthis.__upgradeProperty('step');\rthis.__upgradeProperty('step_big');\rthis.__upgradeProperty('magnetic');\r }\n    __listBoolProps() { return [\"show_rulers\",\"show_grid\",\"show_ruler\",\"show_guides\",\"lock\",\"visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    inPx(nb) {\n        if (this.unit == 'px') {\n            return nb;\n        }\n        if (this.unit == 'rem') {\n            return nb * 16;\n        }\n        if (this.unit == 'mm') {\n            return nb * 3.7795275591;\n        }\n        if (this.unit == 'cm') {\n            return nb * 37.795275591;\n        }\n        if (this.unit == 'in') {\n            return nb * 96;\n        }\n        if (this.unit == 'pt') {\n            return nb * 1.33333333;\n        }\n        throw 'unit not supported';\n    }\n    fromPx(nbPx) {\n        if (this.unit == 'px') {\n            return nbPx;\n        }\n        if (this.unit == 'rem') {\n            return Math.round(nbPx / 16 * 100) / 100;\n        }\n        if (this.unit == 'mm') {\n            return Math.round(nbPx * 0.2645833333 * 100) / 100;\n        }\n        if (this.unit == 'cm') {\n            return Math.round(nbPx * 0.02645833333 * 100) / 100;\n        }\n        if (this.unit == 'in') {\n            return Math.round(nbPx / 96 * 100) / 100;\n        }\n        if (this.unit == 'pt') {\n            return Math.round(nbPx * 0.75 * 100) / 100;\n        }\n        throw 'unit not supported';\n    }\n    toggleLock() {\n        this.lock = !this.lock;\n    }\n    draw() {\n        let nbCol = 0;\n        if (this.nb_col) {\n            this.gridEl.style.setProperty('--local-col-width', `calc(100% / ${this.nb_col})`);\n            nbCol = this.nb_col;\n        }\n        else {\n            let width = this.col_width;\n            if (width == 0) {\n                width = this.fromPx(16);\n            }\n            this.gridEl.style.setProperty('--local-col-width', width + this.unit);\n            nbCol = Math.ceil(this.offsetWidth / this.inPx(width));\n        }\n        if (this.colsEl.children.length != nbCol) {\n            this.colsEl.innerHTML = '';\n            for (let i = 0; i < nbCol; i++) {\n                const col = document.createElement(\"DIV\");\n                col.classList.add('col');\n                this.colsEl.appendChild(col);\n            }\n        }\n        let nbRow = 0;\n        if (this.nb_row) {\n            this.gridEl.style.setProperty('--local-row-height', `calc(100% / ${this.nb_row})`);\n            nbRow = this.nb_row;\n        }\n        else {\n            let height = this.row_height;\n            if (height == 0) {\n                height = this.fromPx(16);\n            }\n            this.gridEl.style.setProperty('--local-row-height', height + this.unit);\n            nbRow = Math.ceil(this.offsetHeight / this.inPx(height));\n        }\n        if (this.rowsEl.children.length != nbRow) {\n            this.rowsEl.innerHTML = '';\n            for (let i = 0; i < nbRow; i++) {\n                const row = document.createElement(\"DIV\");\n                row.classList.add('row');\n                this.rowsEl.appendChild(row);\n            }\n        }\n    }\n    drawRulerTop() {\n        const step = this.step;\n        const bigStep = this.step_big == 0 ? this.step : this.step_big;\n        const rulerSize = this.ruler_size;\n        this.rulerTopEl.style.setProperty(\"--step-width\", step + this.unit);\n        const nb = Math.ceil(this.offsetWidth / this.inPx(step));\n        const createStep = (nb, isBig, w) => {\n            const d = document.createElement('div');\n            d.classList.add(\"step\");\n            if (w) {\n                d.style.width = w + this.unit;\n            }\n            if (isBig) {\n                d.classList.add(\"big\");\n            }\n            const s = document.createElement(\"span\");\n            if (isBig)\n                s.innerHTML = nb + '';\n            d.appendChild(s);\n            this.rulerTopContentEl.appendChild(d);\n        };\n        let i = 0;\n        while (step * i - rulerSize < 0) {\n            i++;\n        }\n        createStep(rulerSize, true, step * i - rulerSize);\n        for (; i < nb; i++) {\n            if (i * step <= rulerSize)\n                continue;\n            const isBig = (step * i) % bigStep == 0;\n            createStep(i * step, isBig);\n        }\n    }\n    drawRulerLeft() {\n        const step = this.step;\n        const bigStep = this.step_big == 0 ? this.step : this.step_big;\n        const rulerSize = this.ruler_size;\n        this.rulerLeftEl.style.setProperty(\"--step-height\", step + this.unit);\n        const nb = Math.ceil(this.offsetHeight / this.inPx(step));\n        const createStep = (nb, isBig, h) => {\n            const d = document.createElement('div');\n            d.classList.add(\"step\");\n            if (h) {\n                d.style.height = h + this.unit;\n            }\n            if (isBig) {\n                d.classList.add(\"big\");\n            }\n            const s = document.createElement(\"span\");\n            if (isBig)\n                s.innerHTML = nb + '';\n            d.appendChild(s);\n            this.rulerLeftContentEl.appendChild(d);\n        };\n        let i = 0;\n        while (step * i - rulerSize < 0) {\n            i++;\n        }\n        createStep(rulerSize, true, step * i - rulerSize);\n        for (; i < nb; i++) {\n            if (i * step <= rulerSize)\n                continue;\n            const isBig = (step * i) % bigStep == 0;\n            createStep(i * step, isBig);\n        }\n    }\n    addDragLeft() {\n        let el = undefined;\n        new Aventus.PressManager({\n            element: this.rulerLeftContentEl,\n            onDblPress: () => {\n                const nbtxt = prompt(\"Top Position\");\n                if (nbtxt) {\n                    const nb = Number(nbtxt);\n                    if (!isNaN(nb)) {\n                        this.createGuideFromTop(nb);\n                    }\n                }\n            }\n        });\n        new Aventus.DragAndDrop({\n            element: this.rulerLeftContentEl,\n            applyDrag: false,\n            onStart: (e) => {\n                if (this.lock)\n                    return false;\n                el = new _.Layout.GridGuideHelper();\n                el.direction = 'y';\n                el.container = this;\n                this.guidesEl.appendChild(el);\n                el.onStart();\n                return true;\n            },\n            onMove: (e) => {\n                if (el) {\n                    el.onMoveY(e);\n                }\n            },\n            onStop: () => {\n                if (el) {\n                    el.onStop();\n                }\n            }\n        });\n    }\n    addDragTop() {\n        let el = undefined;\n        new Aventus.PressManager({\n            element: this.rulerTopContentEl,\n            onDblPress: () => {\n                const nbtxt = prompt(\"Left Position\");\n                if (nbtxt) {\n                    const nb = Number(nbtxt);\n                    if (!isNaN(nb)) {\n                        this.createGuideFromLeft(nb);\n                    }\n                }\n            }\n        });\n        new Aventus.DragAndDrop({\n            element: this.rulerTopContentEl,\n            applyDrag: false,\n            onStart: (e) => {\n                if (this.lock)\n                    return false;\n                el = new _.Layout.GridGuideHelper();\n                el.container = this;\n                el.direction = 'x';\n                this.guidesEl.appendChild(el);\n                el.onStart();\n                return true;\n            },\n            onMove: (e) => {\n                if (el) {\n                    el.onMoveX(e);\n                }\n            },\n            onStop: () => {\n                if (el) {\n                    el.onStop();\n                }\n            }\n        });\n    }\n    createGuideFromLeft(left) {\n        const el = new _.Layout.GridGuideHelper();\n        el.direction = 'y';\n        el.container = this;\n        el.style.left = left + this.unit;\n        this.guidesEl.appendChild(el);\n        this.save();\n    }\n    createGuideFromTop(top) {\n        const el = new _.Layout.GridGuideHelper();\n        el.direction = 'x';\n        el.container = this;\n        el.style.top = top + this.unit;\n        this.guidesEl.appendChild(el);\n        this.save();\n    }\n    addShortCut() {\n        let isKActive = false;\n        let timeout = 0;\n        Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Control, 'k'], () => {\n            isKActive = true;\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                isKActive = false;\n            }, 1000);\n        });\n        const commande = (letter, cb) => {\n            Lib.ShortcutManager.subscribe([letter], () => {\n                if (!isKActive)\n                    return false;\n                isKActive = false;\n                cb();\n                return;\n            });\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Control, letter], () => {\n                if (!isKActive)\n                    return false;\n                isKActive = false;\n                cb();\n                return;\n            });\n        };\n        commande('v', () => { this.visible = !this.visible; });\n        commande('g', () => { this.show_grid = !this.show_grid; });\n        commande('r', () => { this.show_ruler = !this.show_ruler; });\n        commande('j', () => { this.show_guides = !this.show_guides; });\n        commande('l', () => { this.lock = !this.lock; });\n    }\n    addResize() {\n        new Aventus.ResizeObserver({\n            callback: () => {\n                this.draw();\n                this.drawRulerTop();\n                this.drawRulerLeft();\n            },\n            fps: 30\n        }).observe(this);\n    }\n    save() {\n        const data = { x: [], y: [] };\n        for (let child of this.guidesEl.children) {\n            if (child instanceof _.Layout.GridGuideHelper) {\n                if (child.direction == 'x') {\n                    data.x.push(child.offsetTop);\n                }\n                else {\n                    data.y.push(child.offsetLeft);\n                }\n            }\n        }\n        const id = this.id != '' ? this.id : 'grid-helper';\n        localStorage.setItem(id, JSON.stringify(data));\n    }\n    reload() {\n        const id = this.id != '' ? this.id : 'grid-helper';\n        const items = localStorage.getItem(id);\n        if (items) {\n            const data = JSON.parse(items);\n            for (let g of data.x) {\n                const el = new _.Layout.GridGuideHelper();\n                el.direction = 'x';\n                el.style.top = g + this.unit;\n                el.container = this;\n                this.guidesEl.appendChild(el);\n            }\n            for (let g of data.y) {\n                const el = new _.Layout.GridGuideHelper();\n                el.direction = 'y';\n                el.style.left = g + this.unit;\n                el.container = this;\n                this.guidesEl.appendChild(el);\n            }\n        }\n    }\n    postCreation() {\n        this.reload();\n        this.addResize();\n        this.addShortCut();\n        this.addDragLeft();\n        this.addDragTop();\n        this.draw();\n    }\n}\nLayout.GridHelper.Namespace=`Aventus.Layout`;\nLayout.GridHelper.Tag=`av-grid-helper`;\n__as1(_.Layout, 'GridHelper', Layout.GridHelper);\nif(!window.customElements.get('av-grid-helper')){window.customElements.define('av-grid-helper', Layout.GridHelper);Aventus.WebComponentInstance.registerDefinition(Layout.GridHelper);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Layout.GridHelper","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.Layout.GridGuideHelper","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Aventus.Lib.ShortcutManager","isStrong":false},{"fullName":"Aventus.Lib.SpecialTouch","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false}],"fullName":"Aventus.Layout.GridHelper","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-grid-helper","slots":{}},{"code":"Layout.GridGuideHelper = class GridGuideHelper extends Aventus.WebComponent {\n    get 'direction'() { return this.getStringAttr('direction') }\n    set 'direction'(val) { this.setStringAttr('direction', val) }\rget 'moving'() { return this.getBoolAttr('moving') }\n    set 'moving'(val) { this.setBoolAttr('moving', val) }\r    container;\n    static __style = `:host{background-color:#c7c7c7;left:0;pointer-events:all;position:absolute;top:0;font-family:inherit}:host .position{background-color:#c7c7c7;border-radius:5px;padding:5px 15px;position:absolute;display:none;font-size:11px}:host(:hover){background-color:red}:host([direction=x]){cursor:ns-resize;height:2px;width:100%;transform:translateY(-50%)}:host([direction=x]) .position{bottom:10px}:host([direction=y]){cursor:ew-resize;height:100%;width:2px;transform:translateX(-50%)}:host([direction=y]) .position{left:10px}:host([moving]) .position{display:flex}`;\n    constructor() {\n        super();\n        this.onStart = this.onStart.bind(this);\n        this.onMoveX = this.onMoveX.bind(this);\n        this.onMoveY = this.onMoveY.bind(this);\n        this.onStop = this.onStop.bind(this);\n    }\n    __getStatic() {\n        return GridGuideHelper;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(GridGuideHelper.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"position\" _id=\"gridguidehelper_0\"><slot></slot></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"positionEl\",\n      \"ids\": [\n        \"gridguidehelper_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"GridGuideHelper\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('direction')){ this['direction'] = \"x\"; }\rif(!this.hasAttribute('moving')) { this.attributeChangedCallback('moving', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('direction');\rthis.__upgradeProperty('moving');\r }\n    __listBoolProps() { return [\"moving\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    displayValue(v) {\n        this.innerHTML = this.container.fromPx(v) + this.container.unit;\n    }\n    onStart() {\n        this.moving = true;\n    }\n    applyMagnetic(valuePx) {\n        const m = this.container.inPx(this.container.magnetic);\n        if (m == 0)\n            return valuePx;\n        const step = this.container.inPx(this.container.step);\n        const div = Math.round(valuePx / step) * step;\n        return Math.abs(div - valuePx) < m ? div : valuePx;\n    }\n    onMoveX(e) {\n        const valuePx = this.applyMagnetic(e.pageY);\n        this.style.top = valuePx + 'px';\n        this.positionEl.style.left = e.pageX + 10 + 'px';\n        this.displayValue(valuePx);\n    }\n    onMoveY(e) {\n        const valuePx = this.applyMagnetic(e.pageX);\n        this.style.left = valuePx + 'px';\n        this.positionEl.style.top = e.pageY - 20 + 'px';\n        this.displayValue(valuePx);\n    }\n    onStop() {\n        this.moving = false;\n        this.container.save();\n    }\n    postCreation() {\n        if (!this.container)\n            this.container = this.findParentByType(_.Layout.GridHelper);\n        if (this.direction == \"x\") {\n            new Aventus.DragAndDrop({\n                element: this,\n                offsetDrag: 0,\n                applyDrag: false,\n                onStart: () => {\n                    this.onStart();\n                },\n                onMove: (e) => {\n                    this.onMoveX(e);\n                },\n                onStop: () => {\n                    this.onStop();\n                }\n            });\n        }\n        else {\n            new Aventus.DragAndDrop({\n                element: this,\n                offsetDrag: 0,\n                applyDrag: false,\n                onStart: () => {\n                    this.onStart();\n                },\n                onMove: (e) => {\n                    this.onMoveY(e);\n                },\n                onStop: () => {\n                    this.onStop();\n                }\n            });\n        }\n        new Aventus.PressManager({\n            element: this,\n            onDblPress: () => {\n                const helper = this.findParentByType(_.Layout.GridHelper);\n                this.remove();\n                helper?.save();\n            }\n        });\n    }\n}\nLayout.GridGuideHelper.Namespace=`Aventus.Layout`;\nLayout.GridGuideHelper.Tag=`av-grid-guide-helper`;\n__as1(_.Layout, 'GridGuideHelper', Layout.GridGuideHelper);\nif(!window.customElements.get('av-grid-guide-helper')){window.customElements.define('av-grid-guide-helper', Layout.GridGuideHelper);Aventus.WebComponentInstance.registerDefinition(Layout.GridGuideHelper);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.Layout.GridHelper","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Aventus.NormalizedEvent","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Aventus.Layout.GridGuideHelper","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-grid-guide-helper","slots":{"default":{"local":true}}},{"code":"let TouchRecord=class TouchRecord {\n    _activeTouchID;\n    _touchList = {};\n    get _primitiveValue() {\n        return { x: 0, y: 0 };\n    }\n    isActive() {\n        return this._activeTouchID !== undefined;\n    }\n    getDelta() {\n        const tracker = this._getActiveTracker();\n        if (!tracker) {\n            return this._primitiveValue;\n        }\n        return { ...tracker.delta };\n    }\n    getVelocity() {\n        const tracker = this._getActiveTracker();\n        if (!tracker) {\n            return this._primitiveValue;\n        }\n        return { ...tracker.velocity };\n    }\n    getNbOfTouches() {\n        return Object.values(this._touchList).length;\n    }\n    getTouches() {\n        return Object.values(this._touchList);\n    }\n    getEasingDistance(damping) {\n        const deAcceleration = 1 - damping;\n        let distance = {\n            x: 0,\n            y: 0,\n        };\n        const vel = this.getVelocity();\n        Object.keys(vel).forEach(dir => {\n            let v = Math.abs(vel[dir]) <= 10 ? 0 : vel[dir];\n            while (v !== 0) {\n                distance[dir] += v;\n                v = (v * deAcceleration) | 0;\n            }\n        });\n        return distance;\n    }\n    track(evt) {\n        if ('TouchEvent' in window && evt instanceof TouchEvent) {\n            const { targetTouches, } = evt;\n            Array.from(targetTouches).forEach(touch => {\n                this._add(touch);\n            });\n        }\n        else {\n            this._add(evt);\n        }\n        return this._touchList;\n    }\n    update(evt) {\n        if ('TouchEvent' in window && evt instanceof TouchEvent) {\n            const { touches, changedTouches, } = evt;\n            Array.from(touches).forEach(touch => {\n                this._renew(touch);\n            });\n            this._setActiveID(changedTouches);\n        }\n        else if (evt instanceof PointerEvent) {\n            this._renew(evt);\n            this._setActiveID(evt);\n        }\n        return this._touchList;\n    }\n    release(evt) {\n        if ('TouchEvent' in window && evt instanceof TouchEvent) {\n            Array.from(evt.changedTouches).forEach(touch => {\n                this._delete(touch);\n            });\n        }\n        else {\n            this._delete(evt);\n        }\n    }\n    _getIdentifier(touch) {\n        if ('Touch' in window && touch instanceof Touch)\n            return touch.identifier;\n        if (touch instanceof PointerEvent)\n            return touch.pointerId;\n        return touch.button;\n    }\n    _add(touch) {\n        if (this._has(touch)) {\n            this._delete(touch);\n        }\n        const tracker = new Tracker(touch);\n        const identifier = this._getIdentifier(touch);\n        this._touchList[identifier] = tracker;\n    }\n    _renew(touch) {\n        if (!this._has(touch)) {\n            return;\n        }\n        const identifier = this._getIdentifier(touch);\n        const tracker = this._touchList[identifier];\n        tracker.update(touch);\n    }\n    _delete(touch) {\n        const identifier = this._getIdentifier(touch);\n        delete this._touchList[identifier];\n        if (this._activeTouchID == identifier) {\n            this._activeTouchID = undefined;\n        }\n    }\n    _has(touch) {\n        const identifier = this._getIdentifier(touch);\n        return this._touchList.hasOwnProperty(identifier);\n    }\n    _setActiveID(touches) {\n        if (touches instanceof PointerEvent || touches instanceof MouseEvent) {\n            this._activeTouchID = this._getIdentifier(touches);\n        }\n        else {\n            this._activeTouchID = touches[touches.length - 1].identifier;\n        }\n    }\n    _getActiveTracker() {\n        const { _touchList, _activeTouchID, } = this;\n        if (_activeTouchID !== undefined) {\n            return _touchList[_activeTouchID];\n        }\n        return undefined;\n    }\n}\nTouchRecord.Namespace=`Aventus`;\r\n__as1(_, 'TouchRecord', TouchRecord);\r\n","dependances":[{"fullName":"Aventus.Tracker","isStrong":false},{"fullName":"TouchEvent","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"MouseEvent","isStrong":false},{"fullName":"Touch","isStrong":false},{"fullName":"TouchList","isStrong":false}],"fullName":"Aventus.TouchRecord","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Layout.Scrollable = class Scrollable extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"zoom\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'min_zoom'() { return this.getNumberAttr('min_zoom') }\n    set 'min_zoom'(val) { this.setNumberAttr('min_zoom', val) }\rget 'max_zoom'() { return this.getNumberAttr('max_zoom') }\n    set 'max_zoom'(val) { this.setNumberAttr('max_zoom', val) }\rget 'y_scroll_visible'() { return this.getBoolAttr('y_scroll_visible') }\n    set 'y_scroll_visible'(val) { this.setBoolAttr('y_scroll_visible', val) }\rget 'x_scroll_visible'() { return this.getBoolAttr('x_scroll_visible') }\n    set 'x_scroll_visible'(val) { this.setBoolAttr('x_scroll_visible', val) }\rget 'floating_scroll'() { return this.getBoolAttr('floating_scroll') }\n    set 'floating_scroll'(val) { this.setBoolAttr('floating_scroll', val) }\rget 'x_scroll'() { return this.getBoolAttr('x_scroll') }\n    set 'x_scroll'(val) { this.setBoolAttr('x_scroll', val) }\rget 'y_scroll'() { return this.getBoolAttr('y_scroll') }\n    set 'y_scroll'(val) { this.setBoolAttr('y_scroll', val) }\rget 'auto_hide'() { return this.getBoolAttr('auto_hide') }\n    set 'auto_hide'(val) { this.setBoolAttr('auto_hide', val) }\rget 'break'() { return this.getNumberAttr('break') }\n    set 'break'(val) { this.setNumberAttr('break', val) }\rget 'disable'() { return this.getBoolAttr('disable') }\n    set 'disable'(val) { this.setBoolAttr('disable', val) }\rget 'no_user_select'() { return this.getBoolAttr('no_user_select') }\n    set 'no_user_select'(val) { this.setBoolAttr('no_user_select', val) }\rget 'mouse_drag'() { return this.getBoolAttr('mouse_drag') }\n    set 'mouse_drag'(val) { this.setBoolAttr('mouse_drag', val) }\rget 'pinch'() { return this.getBoolAttr('pinch') }\n    set 'pinch'(val) { this.setBoolAttr('pinch', val) }\r    get 'zoom'() { return this.getNumberProp('zoom') }\n    set 'zoom'(val) { this.setNumberAttr('zoom', val) }\r    observer;\n    display = { x: 0, y: 0 };\n    max = {\n        x: 0,\n        y: 0\n    };\n    margin = {\n        x: 0,\n        y: 0\n    };\n    position = {\n        x: 0,\n        y: 0\n    };\n    momentum = { x: 0, y: 0 };\n    contentWrapperSize = { x: 0, y: 0 };\n    scroller = {\n        x: () => {\n            if (!this.horizontalScroller) {\n                throw 'can\\'t find the horizontalScroller';\n            }\n            return this.horizontalScroller;\n        },\n        y: () => {\n            if (!this.verticalScroller) {\n                throw 'can\\'t find the verticalScroller';\n            }\n            return this.verticalScroller;\n        }\n    };\n    scrollerContainer = {\n        x: () => {\n            if (!this.horizontalScrollerContainer) {\n                throw 'can\\'t find the horizontalScrollerContainer';\n            }\n            return this.horizontalScrollerContainer;\n        },\n        y: () => {\n            if (!this.verticalScrollerContainer) {\n                throw 'can\\'t find the verticalScrollerContainer';\n            }\n            return this.verticalScrollerContainer;\n        }\n    };\n    hideDelay = { x: 0, y: 0 };\n    touchRecord;\n    pointerCount = 0;\n    loadedOnce = false;\n    savedPercent;\n    isDragScroller = false;\n    cachedSvg;\n    previousMidPoint;\n    previousDistance;\n    startTranslate = { x: 0, y: 0 };\n    get x() {\n        return this.position.x;\n    }\n    get y() {\n        return this.position.y;\n    }\n    get xMax() {\n        return this.max.x;\n    }\n    get yMax() {\n        return this.max.y;\n    }\n    onScrollChange = new Aventus.Callback();\n    onZoomChange = new Aventus.Callback();\n    renderAnimation;\n    autoScrollInterval = {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    };\n    autoScrollSpeed = {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    };\n    pressManager;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"zoom\", ((target) => {\n    target.changeZoom();\n}));\r }\n    static __style = `:host{--internal-scrollbar-container-color: var(--scrollbar-container-color, transparent);--internal-scrollbar-color: var(--scrollbar-color, #757575);--internal-scrollbar-active-color: var(--scrollbar-active-color, #858585);--internal-scroller-width: var(--scroller-width, 6px);--internal-scroller-top: var(--scroller-top, 3px);--internal-scroller-bottom: var(--scroller-bottom, 3px);--internal-scroller-right: var(--scroller-right, 3px);--internal-scroller-left: var(--scroller-left, 3px);--_scrollbar-content-padding: var(--scrollbar-content-padding, 0);--_scrollbar-container-display: var(--scrollbar-container-display, inline-block)}:host{display:block;height:100%;min-height:inherit;min-width:inherit;overflow:clip;position:relative;-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none;width:100%}:host .scroll-main-container{display:block;height:100%;min-height:inherit;min-width:inherit;position:relative;width:100%}:host .scroll-main-container .content-zoom{display:block;height:100%;min-height:inherit;min-width:inherit;position:relative;transform-origin:0 0;width:100%;z-index:4}:host .scroll-main-container .content-zoom .content-hidder{display:block;height:100%;min-height:inherit;min-width:inherit;overflow:clip;position:relative;width:100%}:host .scroll-main-container .content-zoom .content-hidder .content-wrapper{display:var(--_scrollbar-container-display);height:100%;min-height:inherit;min-width:inherit;padding:var(--_scrollbar-content-padding);position:relative;width:100%}:host .scroll-main-container .scroller-wrapper .container-scroller{display:none;overflow:hidden;position:absolute;transition:transform .2s linear;z-index:5}:host .scroll-main-container .scroller-wrapper .container-scroller .shadow-scroller{background-color:var(--internal-scrollbar-container-color);border-radius:5px}:host .scroll-main-container .scroller-wrapper .container-scroller .shadow-scroller .scroller{background-color:var(--internal-scrollbar-color);border-radius:5px;cursor:pointer;position:absolute;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;z-index:5}:host .scroll-main-container .scroller-wrapper .container-scroller .scroller.active{background-color:var(--internal-scrollbar-active-color)}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical{height:calc(100% - var(--internal-scroller-bottom)*2 - var(--internal-scroller-width));padding-left:var(--internal-scroller-left);right:var(--internal-scroller-right);top:var(--internal-scroller-bottom);transform:0;width:calc(var(--internal-scroller-width) + var(--internal-scroller-left))}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical.hide{transform:translateX(calc(var(--internal-scroller-width) + var(--internal-scroller-left)))}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical .shadow-scroller{height:100%}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical .shadow-scroller .scroller{width:calc(100% - var(--internal-scroller-left))}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal{bottom:var(--internal-scroller-bottom);height:calc(var(--internal-scroller-width) + var(--internal-scroller-top));left:var(--internal-scroller-right);padding-top:var(--internal-scroller-top);transform:0;width:calc(100% - var(--internal-scroller-right)*2 - var(--internal-scroller-width))}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal.hide{transform:translateY(calc(var(--internal-scroller-width) + var(--internal-scroller-top)))}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal .shadow-scroller{height:100%}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal .shadow-scroller .scroller{height:calc(100% - var(--internal-scroller-top))}:host([y_scroll]) .scroll-main-container .content-zoom .content-hidder .content-wrapper{height:auto}:host([x_scroll]) .scroll-main-container .content-zoom .content-hidder .content-wrapper{width:auto}:host([y_scroll_visible]) .scroll-main-container .scroller-wrapper .container-scroller.vertical{display:block}:host([x_scroll_visible]) .scroll-main-container .scroller-wrapper .container-scroller.horizontal{display:block}:host([no_user_select]) .content-wrapper *{user-select:none}:host([no_user_select]) ::slotted{user-select:none}`;\n    constructor() {\n        super();\n        this.renderAnimation = this.createAnimation();\n        this.onWheel = this.onWheel.bind(this);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onTouchMovePointer = this.onTouchMovePointer.bind(this);\n        this.onTouchMove = this.onTouchMove.bind(this);\n        this.onTouchMovePointer = this.onTouchMovePointer.bind(this);\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n        this.onTouchEndPointer = this.onTouchEndPointer.bind(this);\n        this.touchRecord = new TouchRecord();\n    }\n    __getStatic() {\n        return Scrollable;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Scrollable.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"scroll-main-container\" _id=\"scrollable_0\">\r    <div class=\"content-zoom\" _id=\"scrollable_1\">\r        <div class=\"content-hidder\" _id=\"scrollable_2\">\r            <div class=\"content-wrapper\" part=\"content-wrapper\" _id=\"scrollable_3\">\r                <slot></slot>\r            </div>\r        </div>\r    </div>\r    <div class=\"scroller-wrapper\">\r        <div class=\"container-scroller vertical\" _id=\"scrollable_4\">\r            <div class=\"shadow-scroller\">\r                <div class=\"scroller\" _id=\"scrollable_5\"></div>\r            </div>\r        </div>\r        <div class=\"container-scroller horizontal\" _id=\"scrollable_6\">\r            <div class=\"shadow-scroller\">\r                <div class=\"scroller\" _id=\"scrollable_7\"></div>\r            </div>\r        </div>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"mainContainer\",\n      \"ids\": [\n        \"scrollable_0\"\n      ]\n    },\n    {\n      \"name\": \"contentZoom\",\n      \"ids\": [\n        \"scrollable_1\"\n      ]\n    },\n    {\n      \"name\": \"contentHidder\",\n      \"ids\": [\n        \"scrollable_2\"\n      ]\n    },\n    {\n      \"name\": \"contentWrapper\",\n      \"ids\": [\n        \"scrollable_3\"\n      ]\n    },\n    {\n      \"name\": \"verticalScrollerContainer\",\n      \"ids\": [\n        \"scrollable_4\"\n      ]\n    },\n    {\n      \"name\": \"verticalScroller\",\n      \"ids\": [\n        \"scrollable_5\"\n      ]\n    },\n    {\n      \"name\": \"horizontalScrollerContainer\",\n      \"ids\": [\n        \"scrollable_6\"\n      ]\n    },\n    {\n      \"name\": \"horizontalScroller\",\n      \"ids\": [\n        \"scrollable_7\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Scrollable\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('min_zoom')){ this['min_zoom'] = 1; }\rif(!this.hasAttribute('max_zoom')){ this['max_zoom'] = undefined; }\rif(!this.hasAttribute('y_scroll_visible')) { this.attributeChangedCallback('y_scroll_visible', false, false); }\rif(!this.hasAttribute('x_scroll_visible')) { this.attributeChangedCallback('x_scroll_visible', false, false); }\rif(!this.hasAttribute('floating_scroll')) { this.attributeChangedCallback('floating_scroll', false, false); }\rif(!this.hasAttribute('x_scroll')) { this.attributeChangedCallback('x_scroll', false, false); }\rif(!this.hasAttribute('y_scroll')) {this.setAttribute('y_scroll' ,'true'); }\rif(!this.hasAttribute('auto_hide')) { this.attributeChangedCallback('auto_hide', false, false); }\rif(!this.hasAttribute('break')){ this['break'] = 0.1; }\rif(!this.hasAttribute('disable')) { this.attributeChangedCallback('disable', false, false); }\rif(!this.hasAttribute('no_user_select')) { this.attributeChangedCallback('no_user_select', false, false); }\rif(!this.hasAttribute('mouse_drag')) { this.attributeChangedCallback('mouse_drag', false, false); }\rif(!this.hasAttribute('pinch')) { this.attributeChangedCallback('pinch', false, false); }\rif(!this.hasAttribute('zoom')){ this['zoom'] = 1; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('x');\rthis.__correctGetter('y');\rthis.__correctGetter('xMax');\rthis.__correctGetter('yMax');\rthis.__upgradeProperty('min_zoom');\rthis.__upgradeProperty('max_zoom');\rthis.__upgradeProperty('y_scroll_visible');\rthis.__upgradeProperty('x_scroll_visible');\rthis.__upgradeProperty('floating_scroll');\rthis.__upgradeProperty('x_scroll');\rthis.__upgradeProperty('y_scroll');\rthis.__upgradeProperty('auto_hide');\rthis.__upgradeProperty('break');\rthis.__upgradeProperty('disable');\rthis.__upgradeProperty('no_user_select');\rthis.__upgradeProperty('mouse_drag');\rthis.__upgradeProperty('pinch');\rthis.__upgradeProperty('zoom');\r }\n    __listBoolProps() { return [\"y_scroll_visible\",\"x_scroll_visible\",\"floating_scroll\",\"x_scroll\",\"y_scroll\",\"auto_hide\",\"disable\",\"no_user_select\",\"mouse_drag\",\"pinch\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    createAnimation() {\n        return new Aventus.Animation({\n            fps: 60,\n            animate: () => {\n                const nextX = this.nextPosition('x');\n                const nextY = this.nextPosition('y');\n                this.momentum.x = nextX.momentum;\n                this.momentum.y = nextY.momentum;\n                this.scrollDirection('x', nextX.position);\n                this.scrollDirection('y', nextY.position);\n                if (!this.momentum.x && !this.momentum.y) {\n                    this.renderAnimation.stop();\n                }\n            },\n            stopped: () => {\n                if (this.momentum.x || this.momentum.y) {\n                    this.renderAnimation.start();\n                }\n            }\n        });\n    }\n    nextPosition(direction) {\n        const current = this.position[direction];\n        const remain = this.momentum[direction];\n        let result = {\n            momentum: 0,\n            position: 0,\n        };\n        if (Math.abs(remain) <= 0.1) {\n            result.position = current + remain;\n        }\n        else {\n            const _break = this.pointerCount > 0 ? 0.5 : this.break;\n            let nextMomentum = remain * (1 - _break);\n            nextMomentum |= 0;\n            result.momentum = nextMomentum;\n            result.position = current + remain - nextMomentum;\n        }\n        let correctPosition = this.correctScrollValue(result.position, direction);\n        if (correctPosition != result.position) {\n            result.position = correctPosition;\n            result.momentum = 0;\n        }\n        return result;\n    }\n    scrollDirection(direction, value) {\n        const max = this.max[direction];\n        if (max != 0) {\n            this.position[direction] = this.correctScrollValue(value, direction);\n        }\n        else {\n            this.position[direction] = 0;\n        }\n        let container = this.scrollerContainer[direction]();\n        let scroller = this.scroller[direction]();\n        if (this.auto_hide) {\n            container.classList.remove(\"hide\");\n            clearTimeout(this.hideDelay[direction]);\n            this.hideDelay[direction] = setTimeout(() => {\n                container.classList.add(\"hide\");\n            }, 1000);\n        }\n        let containerSize = direction == 'y' ? container.offsetHeight : container.offsetWidth;\n        if (this.contentWrapperSize[direction] != 0) {\n            let scrollPosition = this.position[direction] / this.contentWrapperSize[direction] * containerSize;\n            scroller.style.transform = `translate${direction.toUpperCase()}(${scrollPosition}px)`;\n            this.contentWrapper.style.transform = `translate3d(${-1 * this.x}px, ${-1 * this.y}px, 0)`;\n        }\n        this.triggerScrollChange();\n    }\n    scrollDirectionPercent(direction, percent) {\n        const max = this.max[direction];\n        this.scrollDirection(direction, max * percent / 100);\n    }\n    correctScrollValue(value, direction) {\n        if (value < 0) {\n            value = 0;\n        }\n        else if (value > this.max[direction]) {\n            value = this.max[direction];\n        }\n        return value;\n    }\n    triggerScrollChange() {\n        this.onScrollChange.trigger(this.x, this.y);\n    }\n    scrollToPosition(x, y) {\n        this.scrollDirection('x', x);\n        this.scrollDirection('y', y);\n    }\n    scrollX(x) {\n        this.scrollDirection('x', x);\n    }\n    scrollXPercent(x) {\n        this.scrollDirectionPercent('x', x);\n    }\n    scrollY(y) {\n        this.scrollDirection('y', y);\n    }\n    scrollYPercent(y) {\n        this.scrollDirectionPercent('y', y);\n    }\n    startAutoScrollRight() {\n        if (!this.autoScrollInterval.right) {\n            this.stopAutoScrollLeft();\n            this.autoScrollInterval.right = setInterval(() => {\n                if (this.x == this.max.x) {\n                    this.stopAutoScrollRight();\n                    return;\n                }\n                this.addDelta({\n                    x: this.autoScrollSpeed.right,\n                    y: 0\n                });\n            }, 100);\n        }\n    }\n    autoScrollRight(percent = 50) {\n        let slow = this.max.x * 1 / 100;\n        let fast = this.max.x * 10 / 100;\n        this.autoScrollSpeed.right = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollRight();\n    }\n    stopAutoScrollRight() {\n        if (this.autoScrollInterval.right) {\n            clearInterval(this.autoScrollInterval.right);\n            this.autoScrollInterval.right = 0;\n        }\n    }\n    startAutoScrollLeft() {\n        if (!this.autoScrollInterval.left) {\n            this.stopAutoScrollRight();\n            this.autoScrollInterval.left = setInterval(() => {\n                if (this.x == 0) {\n                    this.stopAutoScrollLeft();\n                    return;\n                }\n                this.addDelta({\n                    x: this.autoScrollSpeed.left * -1,\n                    y: 0\n                });\n            }, 100);\n        }\n    }\n    autoScrollLeft(percent = 50) {\n        let slow = this.max.x * 1 / 100;\n        let fast = this.max.x * 10 / 100;\n        this.autoScrollSpeed.left = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollLeft();\n    }\n    stopAutoScrollLeft() {\n        if (this.autoScrollInterval.left) {\n            clearInterval(this.autoScrollInterval.left);\n            this.autoScrollInterval.left = 0;\n        }\n    }\n    startAutoScrollTop() {\n        if (!this.autoScrollInterval.top) {\n            this.stopAutoScrollBottom();\n            this.autoScrollInterval.top = setInterval(() => {\n                if (this.y == 0) {\n                    this.stopAutoScrollTop();\n                    return;\n                }\n                this.addDelta({\n                    x: 0,\n                    y: this.autoScrollSpeed.top * -1\n                });\n            }, 100);\n        }\n    }\n    autoScrollTop(percent = 50) {\n        let slow = this.max.y * 1 / 100;\n        let fast = this.max.y * 10 / 100;\n        this.autoScrollSpeed.top = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollTop();\n    }\n    stopAutoScrollTop() {\n        if (this.autoScrollInterval.top) {\n            clearInterval(this.autoScrollInterval.top);\n            this.autoScrollInterval.top = 0;\n        }\n    }\n    startAutoScrollBottom() {\n        if (!this.autoScrollInterval.bottom) {\n            this.stopAutoScrollTop();\n            this.autoScrollInterval.bottom = setInterval(() => {\n                if (this.y == this.max.y) {\n                    this.stopAutoScrollBottom();\n                    return;\n                }\n                this.addDelta({\n                    x: 0,\n                    y: this.autoScrollSpeed.bottom\n                });\n            }, 100);\n        }\n    }\n    autoScrollBottom(percent = 50) {\n        let slow = this.max.y * 1 / 100;\n        let fast = this.max.y * 10 / 100;\n        this.autoScrollSpeed.bottom = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollBottom();\n    }\n    stopAutoScrollBottom() {\n        if (this.autoScrollInterval.bottom) {\n            clearInterval(this.autoScrollInterval.bottom);\n            this.autoScrollInterval.bottom = 0;\n        }\n    }\n    createMatrix() {\n        if (!this.cachedSvg) {\n            this.cachedSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        }\n        return this.cachedSvg.createSVGMatrix();\n    }\n    getMidPoint(a, b) {\n        return {\n            x: (a.lastPosition.x + b.lastPosition.x) / 2,\n            y: (a.lastPosition.y + b.lastPosition.y) / 2,\n        };\n    }\n    getDistance(a, b) {\n        return Math.sqrt((b.lastPosition.x - a.lastPosition.x) ** 2 + (b.lastPosition.y - a.lastPosition.y) ** 2);\n    }\n    zoomOnPoint(clientX, clientY, newZoom) {\n        let targetCoordinates = this.getBoundingClientRect();\n        let mousePositionRelativeToTarget = {\n            x: targetCoordinates.x - clientX,\n            y: targetCoordinates.y - clientY\n        };\n        let oldScale = this.zoom;\n        let newScale;\n        if (this.max_zoom > 0) {\n            newScale = Math.max(this.min_zoom, Math.min(this.max_zoom, newZoom));\n        }\n        else {\n            newScale = Math.max(this.min_zoom, newZoom);\n        }\n        let scaleDiff = newScale / oldScale;\n        const matrix = this.createMatrix()\n            .translate(this.x, this.y)\n            .translate(mousePositionRelativeToTarget.x, mousePositionRelativeToTarget.y)\n            .scale(scaleDiff)\n            .translate(-mousePositionRelativeToTarget.x, -mousePositionRelativeToTarget.y)\n            .scale(this.zoom);\n        const newZoomFinal = matrix.a || 1;\n        const newX = matrix.e || 0;\n        const newY = matrix.f || 0;\n        this.zoom = newZoomFinal;\n        this.onZoomChange.trigger(newZoomFinal);\n        this.scrollDirection('x', newX);\n        this.scrollDirection('y', newY);\n    }\n    pinchAction() {\n        const touches = this.touchRecord.getTouches();\n        if (touches.length == 2) {\n            const newMidpoint = this.getMidPoint(touches[0], touches[1]);\n            const prevMidpoint = this.previousMidPoint ?? newMidpoint;\n            const positioningElRect = this.getBoundingClientRect();\n            const originX = (positioningElRect.left + this.x - this.startTranslate.x) - prevMidpoint.x;\n            const originY = (positioningElRect.top + this.y - this.startTranslate.y) - prevMidpoint.y;\n            const newDistance = this.getDistance(touches[0], touches[1]);\n            const prevDistance = this.previousDistance;\n            let scaleDiff = prevDistance ? newDistance / prevDistance : 1;\n            const panX = prevMidpoint.x - newMidpoint.x;\n            const panY = prevMidpoint.y - newMidpoint.y;\n            let oldScale = this.zoom;\n            let newScale;\n            if (this.max_zoom > 0) {\n                newScale = Math.max(this.min_zoom, Math.min(this.max_zoom, oldScale * scaleDiff));\n            }\n            else {\n                newScale = Math.max(this.min_zoom, oldScale * scaleDiff);\n            }\n            scaleDiff = newScale / oldScale;\n            const matrix = this.createMatrix()\n                .translate(panX, panY)\n                .translate(originX, originY)\n                .translate(this.x, this.y)\n                .scale(scaleDiff)\n                .translate(-originX, -originY)\n                .scale(this.zoom);\n            const newZoom = matrix.a || 1;\n            const newX = matrix.e || 0;\n            const newY = matrix.f || 0;\n            this.zoom = newZoom;\n            this.onZoomChange.trigger(newZoom);\n            this.scrollDirection('x', newX);\n            this.scrollDirection('y', newY);\n            this.previousMidPoint = newMidpoint;\n            this.previousDistance = newDistance;\n        }\n        return null;\n    }\n    addAction() {\n        this.addEventListener(\"wheel\", this.onWheel, { passive: false });\n        this.pressManager = new Aventus.PressManager({\n            element: this,\n            offsetDrag: 0,\n            onPressStart: (e) => {\n                this.touchRecord.track(e.event);\n                this.pointerCount = this.touchRecord.getNbOfTouches();\n            },\n            onPressEnd: (e) => {\n                this.touchRecord.release(e.event);\n                this.pointerCount = this.touchRecord.getNbOfTouches();\n            },\n            onDragStart: (e) => {\n                if (!this.pinch && !this.x_scroll_visible && !this.y_scroll_visible) {\n                    return false;\n                }\n                return this.onTouchStartPointer(e);\n            },\n            onDrag: (e) => {\n                this.onTouchMovePointer(e);\n            },\n            onDragEnd: (e) => {\n                this.onTouchEndPointer(e);\n            }\n        });\n        // this.addEventListener(\"touchstart\", this.onTouchStart);\n        // this.addEventListener(\"trigger_pointer_pressstart\", this.onTouchStartPointer);\n        if (this.mouse_drag) {\n            // this.addEventListener(\"mousedown\", this.onTouchStart);\n        }\n        this.addScrollDrag('x');\n        this.addScrollDrag('y');\n    }\n    addActionMove() {\n        // document.body.addEventListener(\"touchmove\", this.onTouchMove);\n        // document.body.addEventListener(\"trigger_pointer_pressmove\", this.onTouchMovePointer);\n        // document.body.addEventListener(\"touchcancel\", this.onTouchEnd);\n        // document.body.addEventListener(\"touchend\", this.onTouchEnd);\n        // document.body.addEventListener(\"trigger_pointer_pressend\", this.onTouchEndPointer);\n        if (this.mouse_drag) {\n            // document.body.addEventListener(\"mousemove\", this.onTouchMove);\n            // document.body.addEventListener(\"mouseup\", this.onTouchEnd);\n        }\n    }\n    removeActionMove() {\n        // document.body.removeEventListener(\"touchmove\", this.onTouchMove);\n        // document.body.removeEventListener(\"trigger_pointer_pressmove\", this.onTouchMovePointer);\n        // document.body.removeEventListener(\"touchcancel\", this.onTouchEnd);\n        // document.body.removeEventListener(\"touchend\", this.onTouchEnd);\n        // document.body.removeEventListener(\"trigger_pointer_pressend\", this.onTouchEndPointer);\n        // document.body.removeEventListener(\"mousemove\", this.onTouchMove);\n        // document.body.removeEventListener(\"mouseup\", this.onTouchEnd);\n    }\n    addScrollDrag(direction) {\n        let scroller = this.scroller[direction]();\n        let startPosition = 0;\n        new Aventus.DragAndDrop({\n            element: scroller,\n            applyDrag: false,\n            usePercent: true,\n            offsetDrag: 0,\n            isDragEnable: () => !this.disable,\n            onStart: (e) => {\n                this.isDragScroller = true;\n                this.no_user_select = true;\n                scroller.classList.add(\"active\");\n                startPosition = this.position[direction];\n            },\n            onMove: (e, position) => {\n                let delta = position[direction] / 100 * this.contentWrapperSize[direction];\n                let value = startPosition + delta;\n                this.scrollDirection(direction, value);\n            },\n            onStop: () => {\n                this.no_user_select = false;\n                scroller.classList.remove(\"active\");\n                this.isDragScroller = false;\n            }\n        });\n    }\n    shouldStopPropagation(e, delta) {\n        if (!this.y_scroll && this.x_scroll) {\n            if ((delta.x > 0 && this.x != this.max.x) ||\n                (delta.x <= 0 && this.x != 0)) {\n                e.stopPropagation();\n            }\n        }\n        else {\n            if ((delta.y > 0 && this.y != this.max.y) ||\n                (delta.y <= 0 && this.y != 0)) {\n                e.stopPropagation();\n            }\n        }\n    }\n    addDelta(delta) {\n        if (this.disable) {\n            return;\n        }\n        this.momentum.x += delta.x;\n        this.momentum.y += delta.y;\n        this.renderAnimation?.start();\n    }\n    onWheel(e) {\n        if (e.ctrlKey) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this.pinch) {\n                let factor = 0.9;\n                if (e.deltaY < 0) {\n                    factor = 1.1;\n                }\n                this.zoomOnPoint(e.clientX, e.clientY, this.zoom * factor);\n            }\n            return;\n        }\n        const DELTA_MODE = [1.0, 28.0, 500.0];\n        const mode = DELTA_MODE[e.deltaMode] || DELTA_MODE[0];\n        let newValue = {\n            x: 0,\n            y: e.deltaY * mode,\n        };\n        if (!this.y_scroll && this.x_scroll) {\n            newValue = {\n                x: e.deltaY * mode,\n                y: 0,\n            };\n        }\n        else if (this.x_scroll && e.altKey) {\n            newValue = {\n                x: e.deltaY * mode,\n                y: 0,\n            };\n        }\n        this.shouldStopPropagation(e, newValue);\n        this.addDelta(newValue);\n    }\n    onTouchStartPointer(e) {\n        const ev = e.event;\n        if ('TouchEvent' in window && ev instanceof TouchEvent) {\n            this.onTouchStart(ev);\n            return true;\n        }\n        else if (ev instanceof PointerEvent) {\n            if (this.mouse_drag || ev.pointerType == \"touch\") {\n                this.onTouchStart(ev);\n                return true;\n            }\n        }\n        return false;\n    }\n    onTouchStart(e) {\n        if (this.isDragScroller)\n            return;\n        this.touchRecord.track(e);\n        this.momentum = {\n            x: 0,\n            y: 0\n        };\n        if (this.pointerCount === 0) {\n            this.addActionMove();\n        }\n        this.pointerCount = this.touchRecord.getNbOfTouches();\n        if (this.pinch && this.pointerCount == 2) {\n            this.startTranslate = { x: this.x, y: this.y };\n        }\n    }\n    onTouchMovePointer(e) {\n        const ev = e.event;\n        if ('TouchEvent' in window && ev instanceof TouchEvent) {\n            this.onTouchMove(ev);\n        }\n        else if (ev instanceof PointerEvent) {\n            if (this.mouse_drag || ev.pointerType == \"touch\") {\n                this.onTouchMove(ev);\n            }\n        }\n    }\n    onTouchMove(e) {\n        if (this.isDragScroller)\n            return;\n        this.touchRecord.update(e);\n        if (this.pinch && this.pointerCount == 2) {\n            // zoom\n            e.stopPropagation();\n            this.renderAnimation?.stop();\n            this.pinchAction();\n        }\n        else {\n            const delta = this.touchRecord.getDelta();\n            this.shouldStopPropagation(e, delta);\n            this.addDelta(delta);\n        }\n    }\n    onTouchEndPointer(e) {\n        const ev = e.event;\n        if ('TouchEvent' in window && ev instanceof TouchEvent) {\n            this.onTouchEnd(ev);\n        }\n        else if (ev instanceof PointerEvent) {\n            if (this.mouse_drag || ev.pointerType == \"touch\") {\n                this.onTouchEnd(ev);\n            }\n        }\n    }\n    onTouchEnd(e) {\n        if (this.isDragScroller)\n            return;\n        const delta = this.touchRecord.getEasingDistance(this.break);\n        this.shouldStopPropagation(e, delta);\n        this.addDelta(delta);\n        this.touchRecord.release(e);\n        this.pointerCount = this.touchRecord.getNbOfTouches();\n        if (this.pointerCount === 0) {\n            this.removeActionMove();\n        }\n        if (this.pointerCount < 2) {\n            this.previousMidPoint = undefined;\n            this.previousDistance = undefined;\n        }\n    }\n    calculateRealSize() {\n        if (!this.contentZoom || !this.mainContainer || !this.contentWrapper) {\n            return false;\n        }\n        const currentOffsetWidth = this.contentZoom.offsetWidth;\n        const currentOffsetHeight = this.contentZoom.offsetHeight;\n        let hasChanged = false;\n        if (this.contentWrapper.offsetWidth != this.contentWrapperSize.x || this.contentWrapper.offsetHeight != this.contentWrapperSize.y)\n            hasChanged = true;\n        this.contentWrapperSize.x = this.contentWrapper.offsetWidth;\n        this.contentWrapperSize.y = this.contentWrapper.offsetHeight;\n        if (this.zoom < 1) {\n            // scale the container for zoom\n            this.contentZoom.style.width = this.mainContainer.offsetWidth / this.zoom + 'px';\n            this.contentZoom.style.height = this.mainContainer.offsetHeight / this.zoom + 'px';\n            this.contentZoom.style.maxHeight = this.mainContainer.offsetHeight / this.zoom + 'px';\n            if (currentOffsetHeight != this.display.y || currentOffsetWidth != this.display.x)\n                hasChanged = true;\n            this.display.y = currentOffsetHeight;\n            this.display.x = currentOffsetWidth;\n        }\n        else {\n            const newX = currentOffsetWidth / this.zoom;\n            const newY = currentOffsetHeight / this.zoom;\n            if (newY != this.display.y || newX != this.display.x)\n                hasChanged = true;\n            this.display.y = newY;\n            this.display.x = newX;\n            this.contentZoom.style.width = '';\n            this.contentZoom.style.height = '';\n            this.contentZoom.style.maxHeight = '';\n        }\n        return hasChanged;\n    }\n    calculatePositionScrollerContainer(direction) {\n        if (direction == 'y') {\n            this.calculatePositionScrollerContainerY();\n        }\n        else {\n            this.calculatePositionScrollerContainerX();\n        }\n    }\n    calculatePositionScrollerContainerY() {\n        const leftMissing = this.mainContainer.offsetWidth - this.verticalScrollerContainer.offsetLeft;\n        if (leftMissing > 0 && this.y_scroll_visible && !this.floating_scroll) {\n            this.contentHidder.style.width = 'calc(100% - ' + leftMissing + 'px)';\n            this.contentHidder.style.marginRight = leftMissing + 'px';\n            this.margin.x = leftMissing;\n        }\n        else {\n            this.contentHidder.style.width = '';\n            this.contentHidder.style.marginRight = '';\n            this.margin.x = 0;\n        }\n    }\n    calculatePositionScrollerContainerX() {\n        const topMissing = this.mainContainer.offsetHeight - this.horizontalScrollerContainer.offsetTop;\n        if (topMissing > 0 && this.x_scroll_visible && !this.floating_scroll) {\n            this.contentHidder.style.height = 'calc(100% - ' + topMissing + 'px)';\n            this.contentHidder.style.marginBottom = topMissing + 'px';\n            this.margin.y = topMissing;\n        }\n        else {\n            this.contentHidder.style.height = '';\n            this.contentHidder.style.marginBottom = '';\n            this.margin.y = 0;\n        }\n    }\n    calculateSizeScroller(direction) {\n        const scrollerSize = ((this.display[direction] - this.margin[direction]) / this.contentWrapperSize[direction] * 100);\n        if (direction == \"y\") {\n            this.scroller[direction]().style.height = scrollerSize + '%';\n        }\n        else {\n            this.scroller[direction]().style.width = scrollerSize + '%';\n        }\n        let maxScrollContent = this.contentWrapperSize[direction] - this.display[direction];\n        if (maxScrollContent < 0) {\n            maxScrollContent = 0;\n        }\n        this.max[direction] = maxScrollContent + this.margin[direction];\n    }\n    changeZoom() {\n        this.contentZoom.style.transform = 'scale(' + this.zoom + ')';\n        this.dimensionRefreshed(true);\n    }\n    dimensionRefreshed(force = false) {\n        if (this.contentWrapper.offsetHeight > 0 && this.contentWrapper.offsetWidth > 0) {\n            this.loadedOnce = true;\n            if (this.savedPercent) {\n                this.position.x = this.contentWrapper.offsetWidth * this.savedPercent.x;\n                this.position.y = this.contentWrapper.offsetHeight * this.savedPercent.y;\n                this.savedPercent = undefined;\n            }\n        }\n        else if (this.loadedOnce) {\n            this.savedPercent = {\n                x: this.position.x / this.contentWrapperSize.x,\n                y: this.position.y / this.contentWrapperSize.y\n            };\n        }\n        if (!this.calculateRealSize() && !force) {\n            return;\n        }\n        if (this.contentWrapperSize.y - this.display.y > 0) {\n            if (!this.y_scroll_visible) {\n                this.y_scroll_visible = true;\n                this.calculatePositionScrollerContainer('y');\n            }\n            this.calculateSizeScroller('y');\n            this.scrollDirection('y', this.y);\n        }\n        else if (this.y_scroll_visible) {\n            this.y_scroll_visible = false;\n            this.calculatePositionScrollerContainer('y');\n            this.calculateSizeScroller('y');\n            this.scrollDirection('y', 0);\n        }\n        if (this.contentWrapperSize.x - this.display.x > 0) {\n            if (!this.x_scroll_visible) {\n                this.x_scroll_visible = true;\n                this.calculatePositionScrollerContainer('x');\n            }\n            this.calculateSizeScroller('x');\n            this.scrollDirection('x', this.x);\n        }\n        else if (this.x_scroll_visible) {\n            this.x_scroll_visible = false;\n            this.calculatePositionScrollerContainer('x');\n            this.calculateSizeScroller('x');\n            this.scrollDirection('x', 0);\n        }\n    }\n    createResizeObserver() {\n        let inProgress = false;\n        return new Aventus.ResizeObserver({\n            callback: entries => {\n                if (inProgress) {\n                    return;\n                }\n                inProgress = true;\n                this.dimensionRefreshed();\n                inProgress = false;\n            },\n            fps: 30\n        });\n    }\n    addResizeObserver() {\n        if (this.observer == undefined) {\n            this.observer = this.createResizeObserver();\n        }\n        this.observer.observe(this.contentWrapper);\n        this.observer.observe(this);\n    }\n    postCreation() {\n        this.dimensionRefreshed();\n        this.addResizeObserver();\n        this.addAction();\n    }\n    static lock(element) {\n        const container = element.findParentByType(Layout.Scrollable);\n        if (container) {\n            container.disable = true;\n        }\n    }\n    static unlock(element) {\n        const container = element.findParentByType(Layout.Scrollable);\n        if (container) {\n            container.disable = false;\n        }\n    }\n}\nLayout.Scrollable.Namespace=`Aventus.Layout`;\nLayout.Scrollable.Tag=`av-scrollable`;\n__as1(_.Layout, 'Scrollable', Layout.Scrollable);\nif(!window.customElements.get('av-scrollable')){window.customElements.define('av-scrollable', Layout.Scrollable);Aventus.WebComponentInstance.registerDefinition(Layout.Scrollable);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Layout.Scrollable","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Aventus.TouchRecord","isStrong":false},{"fullName":"SVGSVGElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.Animation","isStrong":false},{"fullName":"DOMMatrix","isStrong":false},{"fullName":"Aventus.Tracker","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"WheelEvent","isStrong":false},{"fullName":"Aventus.NormalizedEvent","isStrong":false},{"fullName":"TouchEvent","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"MouseEvent","isStrong":false}],"fullName":"Aventus.Layout.Scrollable","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-scrollable","slots":{"default":{"local":true}}},{"code":"Layout.Tabs.TabHeader = class TabHeader extends Aventus.WebComponent {\n    get 'active'() { return this.getBoolAttr('active') }\n    set 'active'(val) { this.setBoolAttr('active', val) }\r    _tab;\n    get tab() {\n        return this._tab;\n    }\n    tabs;\n    static __style = ``;\n    constructor() {\n        super();\n        if (this.constructor == TabHeader) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return TabHeader;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TabHeader.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TabHeader\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('active')) { this.attributeChangedCallback('active', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('tab');\rthis.__upgradeProperty('active');\r }\n    __listBoolProps() { return [\"active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    async init(tab, tabs) {\n        this.tabs = tabs;\n        this._tab = tab;\n        tab.tabHeader = this;\n        await this.render();\n    }\n    onPress() {\n        if (!this.active) {\n            this.tabs.setActive(this);\n        }\n    }\n    addPress() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.onPress();\n            }\n        });\n    }\n    postCreation() {\n        super.postCreation();\n        this.addPress();\n    }\n}\nLayout.Tabs.TabHeader.Namespace=`Aventus.Layout.Tabs`;\n__as1(_.Layout.Tabs, 'TabHeader', Layout.Tabs.TabHeader);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Layout.Tabs.Tab","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.Layout.Tabs.Tabs","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Aventus.Layout.Tabs.TabHeader","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Layout.Tabs.Tab = class Tab extends Aventus.WebComponent {\n    get 'selected'() { return this.getBoolAttr('selected') }\n    set 'selected'(val) { this.setBoolAttr('selected', val) }\r    tabHeader;\n    get headerContent() {\n        let elements = this.getElementsInSlot(\"header\");\n        return elements;\n    }\n    static __style = ``;\n    constructor() {\n        super();\n        if (this.constructor == Tab) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return Tab;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Tab.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>`,'header':`<slot name=\"header\"></slot>` }, \n        blocks: { 'default':`<slot></slot><div class=\"slot-header\">\r    <slot name=\"header\"></slot>\r</div>` }\n    });\n}\n    getClassName() {\n        return \"Tab\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('selected')) { this.attributeChangedCallback('selected', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('headerContent');\rthis.__upgradeProperty('selected');\r }\n    __listBoolProps() { return [\"selected\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n}\nLayout.Tabs.Tab.Namespace=`Aventus.Layout.Tabs`;\n__as1(_.Layout.Tabs, 'Tab', Layout.Tabs.Tab);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"Aventus.Layout.Tabs.TabHeader","isStrong":false},{"fullName":"HTMLElement","isStrong":false}],"fullName":"Aventus.Layout.Tabs.Tab","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true},"header":{"local":true}}},{"code":"Modal.ModalElement = class ModalElement extends Aventus.WebComponent {\n    get 'options'() {\n\t\t\t\t\t\treturn this.__watch[\"options\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'options'(val) {\n\t\t\t\t\t\tthis.__watch[\"options\"] = val;\n\t\t\t\t\t}\r    static defaultCloseWithEsc = true;\n    static defaultCloseWithClick = true;\n    static defaultRejectValue = null;\n    cb;\n    pressManagerClickClose;\n    pressManagerPrevent;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"options\", ((target, action, path, value) => {\n    target.onOptionsChanged();\n}));\r    super.__registerWatchesActions();\n}\n    static __style = `:host{align-items:center;display:flex;inset:0;justify-content:center;position:fixed;z-index:60}:host .modal{background-color:#fff;padding:1.5rem;position:relative}`;\n    constructor() {\n        super();\n        this.options = this.configure();\n        if (this.options.closeWithClick === undefined)\n            this.options.closeWithClick = Modal.ModalElement.defaultCloseWithClick;\n        if (this.options.closeWithEsc === undefined)\n            this.options.closeWithEsc = Modal.ModalElement.defaultCloseWithEsc;\n        if (!Object.hasOwn(this.options, \"rejectValue\")) {\n            this.options.rejectValue = Modal.ModalElement.defaultRejectValue;\n        }\n        if (this.constructor == ModalElement) {\n            throw \"can't instanciate an abstract class\";\n        }\n        this.close = this.close.bind(this);\n        this.reject = this.reject.bind(this);\n        this.resolve = this.resolve.bind(this);\n    }\n    __getStatic() {\n        return ModalElement;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ModalElement.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"modal\" _id=\"modalelement_0\">\r\t<slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"modalEl\",\n      \"ids\": [\n        \"modalelement_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"ModalElement\";\n    }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"options\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('options');\r }\n    onOptionsChanged() { }\n    init(cb) {\n        this.cb = cb;\n        if (this.options.closeWithEsc) {\n            Lib.ShortcutManager.subscribe(Lib.SpecialTouch.Escape, this.reject, { replaceTemp: true });\n        }\n        if (this.options.closeWithClick) {\n            this.pressManagerClickClose = new Aventus.PressManager({\n                element: this,\n                onPress: () => {\n                    this.reject();\n                }\n            });\n            this.pressManagerPrevent = new Aventus.PressManager({\n                element: this.modalEl,\n                onPress: () => { }\n            });\n        }\n    }\n    show(element) {\n        return Modal.ModalElement._show(this, element);\n    }\n    close() {\n        Lib.ShortcutManager.unsubscribe(Lib.SpecialTouch.Escape, this.reject);\n        this.pressManagerClickClose?.destroy();\n        this.pressManagerPrevent?.destroy();\n        this.remove();\n    }\n    reject(no_close) {\n        if (this.cb) {\n            this.cb(this.options.rejectValue ?? null);\n        }\n        if (no_close !== true) {\n            this.close();\n        }\n    }\n    resolve(response, no_close) {\n        if (this.cb) {\n            this.cb(response);\n        }\n        if (no_close !== true) {\n            this.close();\n        }\n    }\n    static configure(options) {\n        if (options.closeWithClick !== undefined)\n            this.defaultCloseWithClick = options.closeWithClick;\n        if (options.closeWithEsc !== undefined)\n            this.defaultCloseWithEsc = options.closeWithEsc;\n        if (!Object.hasOwn(options, \"rejectValue\")) {\n            this.defaultRejectValue = options.rejectValue;\n        }\n    }\n    static _show(modal, element) {\n        return new Promise((resolve) => {\n            modal.init((response) => {\n                resolve(response);\n            });\n            if (!element) {\n                element = document.body;\n            }\n            element.appendChild(modal);\n        });\n    }\n}\nModal.ModalElement.Namespace=`Aventus.Modal`;\n__as1(_.Modal, 'ModalElement', Modal.ModalElement);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Modal.ModalOptions","isStrong":false},{"fullName":"Aventus.Modal.ModalElement","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Aventus.Modal.ExtractTypeModal","isStrong":false},{"fullName":"Element","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.Lib.ShortcutManager","isStrong":false},{"fullName":"Aventus.Lib.SpecialTouch","isStrong":false},{"fullName":"BindThis","isStrong":false}],"fullName":"Aventus.Modal.ModalElement","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Navigation.Default404 = class Default404 extends Navigation.Page {\n    static __style = `:host{align-items:center;height:100%;justify-content:center;width:100%}:host h1{font-size:48px;text-align:center}:host([visible]){display:flex}`;\n    __getStatic() {\n        return Default404;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Default404.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<h1>Error 404</h1>` }\n    });\n}\n    getClassName() {\n        return \"Default404\";\n    }\n    configure() {\n        return {\n            destroy: true\n        };\n    }\n}\nNavigation.Default404.Namespace=`Aventus.Navigation`;\nNavigation.Default404.Tag=`av-default-404`;\n__as1(_.Navigation, 'Default404', Navigation.Default404);\nif(!window.customElements.get('av-default-404')){window.customElements.define('av-default-404', Navigation.Default404);Aventus.WebComponentInstance.registerDefinition(Navigation.Default404);}\n","dependances":[{"fullName":"Aventus.Navigation.Page","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.Navigation.Page.PageConfig","isStrong":false}],"fullName":"Aventus.Navigation.Default404","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-default-404","slots":{}},{"code":"Navigation.Router = class Router extends Aventus.WebComponent {\n    static page404 = _.Navigation.Default404;\n    static destroyPage = false;\n    oldPage;\n    allRoutes = {};\n    activePath = \"\";\n    activeState;\n    oneStateActive = false;\n    showPageMutex = new Aventus.Mutex();\n    isReplace = false;\n    get stateManager() {\n        return Aventus.Instance.get(RouterStateManager);\n    }\n    page404;\n    static __style = `:host{display:block}`;\n    constructor() {\n        super();\n        this.validError404 = this.validError404.bind(this);\n        this.canChangeState = this.canChangeState.bind(this);\n        this.stateManager.canChangeState(this.canChangeState);\n        if (this.constructor == Router) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return Router;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Router.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'before':`<slot name=\"before\"></slot>`,'after':`<slot name=\"after\"></slot>` }, \n        blocks: { 'default':`<slot name=\"before\"></slot><div class=\"content\" _id=\"router_0\"></div><slot name=\"after\"></slot>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"router_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Router\";\n    }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('stateManager');\r }\n    addRouteAsync(options) {\n        this.allRoutes[options.route] = options;\n    }\n    addRoute(route, elementCtr) {\n        this.allRoutes[route] = {\n            route: route,\n            scriptUrl: '',\n            render: () => elementCtr\n        };\n    }\n    register() {\n        try {\n            this.defineRoutes();\n            this.stateManager.onAfterStateChanged(this.validError404);\n            for (let key in this.allRoutes) {\n                this.initRoute(key);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    initRoute(path) {\n        let element = undefined;\n        let allRoutes = this.allRoutes;\n        this.stateManager.subscribe(path, {\n            active: (currentState) => {\n                this.oneStateActive = true;\n                this.showPageMutex.safeRunLastAsync(async () => {\n                    let isNew = false;\n                    if (!element || !element.parentElement) {\n                        let options = allRoutes[path];\n                        if (options.scriptUrl != \"\") {\n                            await Aventus.ResourceLoader.loadInHead(options.scriptUrl);\n                        }\n                        let cst = options.render();\n                        element = new cst;\n                        element.router = this;\n                        isNew = true;\n                    }\n                    const canResult = await element.isAllowed(currentState, path, this);\n                    if (canResult !== true) {\n                        if (canResult === false) {\n                            return;\n                        }\n                        this.navigate(canResult, { replace: true });\n                        return;\n                    }\n                    if (isNew)\n                        this.contentEl.appendChild(element);\n                    if (this.oldPage && this.oldPage != element) {\n                        await this.oldPage.hide();\n                        const { destroy } = await this.oldPage.configure();\n                        if (destroy === undefined && this.shouldDestroyFrame(this.oldPage)) {\n                            this.oldPage.remove();\n                        }\n                        else if (destroy === true) {\n                            this.oldPage.remove();\n                        }\n                    }\n                    let oldPage = this.oldPage;\n                    let oldUrl = this.activePath;\n                    this.oldPage = element;\n                    this.activePath = path;\n                    this.activeState = currentState;\n                    await element.show(currentState);\n                    const { title, description, keywords } = await element.configure();\n                    if (title !== undefined)\n                        document.title = title;\n                    if (keywords !== undefined) {\n                        let meta = document.querySelector('meta[name=\"keywords\"]');\n                        if (!meta) {\n                            meta = document.createElement('meta');\n                        }\n                        meta.setAttribute(\"content\", keywords.join(\", \"));\n                    }\n                    if (description !== undefined) {\n                        let meta = document.querySelector('meta[name=\"description\"]');\n                        if (!meta) {\n                            meta = document.createElement('meta');\n                        }\n                        meta.setAttribute(\"content\", description);\n                    }\n                    if (this.bindToUrl() && window.location.pathname != currentState.name) {\n                        let newUrl = window.location.origin + currentState.name;\n                        if (this.isReplace) {\n                            window.history.replaceState({}, title ?? \"\", newUrl);\n                        }\n                        else {\n                            window.history.pushState({}, title ?? \"\", newUrl);\n                        }\n                    }\n                    this.onNewPage(oldUrl, oldPage, path, element);\n                });\n            },\n            inactive: () => {\n                this.oneStateActive = false;\n            }\n        });\n    }\n    async validError404() {\n        if (!this.oneStateActive) {\n            let Page404 = this.error404(this.stateManager.getState()) ?? Navigation.Router.page404;\n            if (Page404) {\n                if (!this.page404 || !this.page404.parentElement) {\n                    this.page404 = new Page404();\n                    this.page404.router = this;\n                    this.contentEl.appendChild(this.page404);\n                }\n                if (this.oldPage && this.oldPage != this.page404) {\n                    await this.oldPage.hide();\n                }\n                if (this.bindToUrl()) {\n                    const currentState = this.stateManager.getState();\n                    if (currentState && window.location.pathname != currentState.name) {\n                        let newUrl = window.location.origin + currentState.name;\n                        if (this.isReplace) {\n                            window.history.replaceState({}, \"Not found\", newUrl);\n                        }\n                        else {\n                            window.history.pushState({}, \"Not found\", newUrl);\n                        }\n                    }\n                }\n                this.activeState = undefined;\n                this.oldPage = this.page404;\n                this.activePath = '';\n                await this.page404.show(this.activeState);\n            }\n        }\n    }\n    error404(state) {\n        return null;\n    }\n    onNewPage(oldUrl, oldPage, newUrl, newPage) {\n    }\n    getSlugs() {\n        return this.stateManager.getStateSlugs(this.activePath);\n    }\n    async canChangeState(newState) {\n        return true;\n    }\n    async navigate(state, options) {\n        if (options?.replace) {\n            this.isReplace = true;\n        }\n        const result = await this.stateManager.setState(state);\n        if (options?.replace) {\n            this.isReplace = false;\n        }\n        return result;\n    }\n    bindToUrl() {\n        return true;\n    }\n    defaultUrl() {\n        return \"/\";\n    }\n    shouldDestroyFrame(page) {\n        return Navigation.Router.destroyPage;\n    }\n    postCreation() {\n        this.register();\n        let oldUrl = window.localStorage.getItem(\"navigation_url\");\n        if (oldUrl !== null) {\n            Aventus.State.activate(oldUrl, this.stateManager);\n            window.localStorage.removeItem(\"navigation_url\");\n        }\n        else if (this.bindToUrl()) {\n            Aventus.State.activate(window.location.pathname, this.stateManager);\n        }\n        else {\n            let defaultUrl = this.defaultUrl();\n            if (defaultUrl) {\n                Aventus.State.activate(defaultUrl, this.stateManager);\n            }\n        }\n        if (this.bindToUrl()) {\n            window.onpopstate = (e) => {\n                if (window.location.pathname != this.stateManager.getState()?.name) {\n                    Aventus.State.activate(window.location.pathname, this.stateManager);\n                }\n            };\n        }\n    }\n    static configure(options) {\n        if (options.page404 !== undefined)\n            this.page404 = options.page404;\n        if (options.destroyPage !== undefined)\n            this.destroyPage = options.destroyPage;\n    }\n}\nNavigation.Router.Namespace=`Aventus.Navigation`;\n__as1(_.Navigation, 'Router', Navigation.Router);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Form.Constructor","isStrong":true},{"fullName":"Aventus.Navigation.Page","isStrong":true},{"fullName":"Aventus.Navigation.Default404","isStrong":true},{"fullName":"Aventus.Navigation.RouterOptions","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.Navigation.RouteAsyncOption","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Aventus.Mutex","isStrong":false},{"fullName":"Aventus.StateManager","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.RouterStateManager","isStrong":false},{"fullName":"Aventus.ResourceLoader","isStrong":false},{"fullName":"Aventus.Navigation.Router","isStrong":false},{"fullName":"Aventus.UriParamsValue","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Aventus.Navigation.Router","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"before":{"local":true},"after":{"local":true}}},{"code":"Toast.ToastElement = class ToastElement extends Aventus.WebComponent {\n    get 'position'() { return this.getStringAttr('position') }\n    set 'position'(val) { this.setStringAttr('position', val) }\rget 'delay'() { return this.getNumberAttr('delay') }\n    set 'delay'(val) { this.setNumberAttr('delay', val) }\rget 'is_active'() { return this.getBoolAttr('is_active') }\n    set 'is_active'(val) { this.setBoolAttr('is_active', val) }\r    showAsked = false;\n    onHideCallback = () => { };\n    timeout = 0;\n    isTransition = false;\n    waitTransitionCbs = [];\n    static __style = `:host{position:absolute}:host(:not([is_active])){opacity:0;visibility:hidden}:host([position=\"bottom left\"]){bottom:var(--_toast-space-bottom);left:0px}:host([position=\"top left\"]){left:var(--_toast-space-left);top:var(--_toast-space-top)}:host([position=\"bottom right\"]){bottom:var(--_toast-space-bottom);right:var(--_toast-space-right)}:host([position=\"top right\"]){right:var(--_toast-space-right);top:var(--_toast-space-top)}:host([position=top]){left:50%;top:var(--_toast-space-top);transform:translateX(-50%)}:host([position=bottom]){bottom:var(--_toast-space-bottom);left:50%;transform:translateX(-50%)}`;\n    constructor() {\n        super();\n        if (this.constructor == ToastElement) {\n            throw \"can't instanciate an abstract class\";\n        }\n    }\n    __getStatic() {\n        return ToastElement;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ToastElement.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ToastElement\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('position')){ this['position'] = _.Toast.ToastManager.defaultPosition; }\rif(!this.hasAttribute('delay')){ this['delay'] = _.Toast.ToastManager.defaultDelay; }\rif(!this.hasAttribute('is_active')) { this.attributeChangedCallback('is_active', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('position');\rthis.__upgradeProperty('delay');\rthis.__upgradeProperty('is_active');\r }\n    __listBoolProps() { return [\"is_active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    _setOptions(options) {\n        if (options.position !== undefined)\n            this.position = options.position;\n        if (options.delay !== undefined)\n            this.delay = options.delay;\n        return this.setOptions(options);\n    }\n    show(onHideCallback) {\n        this.onHideCallback = onHideCallback;\n        if (this.isReady) {\n            this.is_active = true;\n            this.startDelay();\n        }\n        else {\n            this.showAsked = true;\n        }\n    }\n    startDelay() {\n        if (this.delay > 0) {\n            this.timeout = setTimeout(() => {\n                this.close();\n            }, this.delay);\n        }\n    }\n    async close() {\n        if (this.onHideCallback) {\n            this.is_active = false;\n            this.onHideCallback(false);\n            this.remove();\n        }\n    }\n    addTransition() {\n        this.addEventListener(\"transitionStart\", (e) => {\n            this.isTransition = true;\n        });\n        this.addEventListener(\"transitionEnd\", () => {\n            this.isTransition = false;\n            let cbs = [...this.waitTransitionCbs];\n            this.waitTransitionCbs = [];\n            for (let cb of cbs) {\n                cb();\n            }\n        });\n    }\n    waitTransition() {\n        if (this.isTransition) {\n            return new Promise((resolve) => {\n                this.waitTransitionCbs.push(resolve);\n            });\n        }\n        return new Promise((resolve) => {\n            resolve();\n        });\n    }\n    postCreation() {\n        if (this.showAsked) {\n            this.is_active = true;\n            this.startDelay();\n        }\n    }\n    static add(options) {\n        return _.Toast.ToastManager.add(options);\n    }\n}\nToast.ToastElement.Namespace=`Aventus.Toast`;\n__as1(_.Toast, 'ToastElement', Toast.ToastElement);\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Toast.ToastOptions","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Toast.ToastManager","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.Toast.ToastPosition","isStrong":false},{"fullName":"Internal","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false}],"fullName":"Aventus.Toast.ToastElement","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"","slots":{"default":{"local":true}}},{"code":"Toast.ToastManager = class ToastManager extends Aventus.WebComponent {\n    get 'gap'() { return this.getNumberAttr('gap') }\n    set 'gap'(val) { this.setNumberAttr('gap', val) }\rget 'not_main'() { return this.getBoolAttr('not_main') }\n    set 'not_main'(val) { this.setBoolAttr('not_main', val) }\r    static defaultToast;\n    static defaultToastManager;\n    static defaultPosition = 'top right';\n    static defaultDelay = 5000;\n    static heightLimitPercent = 100;\n    static instance;\n    activeToasts = {\n        top: [],\n        'top left': [],\n        'bottom left': [],\n        bottom: [],\n        'bottom right': [],\n        'top right': [],\n    };\n    waitingToasts = {\n        top: [],\n        'top left': [],\n        'bottom left': [],\n        bottom: [],\n        'bottom right': [],\n        'top right': [],\n    };\n    get containerHeight() {\n        return this.offsetHeight;\n    }\n    get heightLimit() {\n        return this.containerHeight * Toast.ToastManager.heightLimitPercent / 100;\n    }\n    mutex = new Aventus.Mutex();\n    static __style = `:host{--_toast-space-bottom: var(--toast-space-bottom, 20px);--_toast-space-top: var(--toast-space-top, 20px);--_toast-space-right: var(--toast-space-right, 10px);--_toast-space-left: var(--toast-space-left, 10px)}:host{inset:0;overflow:hidden;pointer-events:none;position:fixed;z-index:50}:host ::slotted(*){pointer-events:auto}`;\n    __getStatic() {\n        return ToastManager;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ToastManager.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ToastManager\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('gap')){ this['gap'] = 10; }\rif(!this.hasAttribute('not_main')) { this.attributeChangedCallback('not_main', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('containerHeight');\rthis.__correctGetter('heightLimit');\rthis.__upgradeProperty('gap');\rthis.__upgradeProperty('not_main');\r }\n    __listBoolProps() { return [\"not_main\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    async add(toast) {\n        await this.mutex.waitOne();\n        let realToast;\n        if (toast instanceof _.Toast.ToastElement) {\n            realToast = toast;\n        }\n        else {\n            if (!Toast.ToastManager.defaultToast)\n                throw \"No default toast. Try ToastManager.configure()\";\n            realToast = new Toast.ToastManager.defaultToast();\n            await realToast._setOptions(toast);\n        }\n        this.appendChild(realToast);\n        if (realToast.position == \"bottom\") {\n            return this._notifyBottom(realToast, true);\n        }\n        else if (realToast.position == \"bottom left\") {\n            return this._notifyBottomLeft(realToast, true);\n        }\n        else if (realToast.position == \"top left\") {\n            return this._notifyTopLeft(realToast, true);\n        }\n        else if (realToast.position == \"bottom right\") {\n            return this._notifyBottomRight(realToast, true);\n        }\n        else if (realToast.position == \"top right\") {\n            return this._notifyTopRight(realToast, true);\n        }\n        else if (realToast.position == \"top\") {\n            return this._notifyTop(realToast, true);\n        }\n        return false;\n    }\n    _calculateBottom(toast, firstTime, position, from) {\n        return new Promise((resolve) => {\n            let height = toast.offsetHeight;\n            let containerHeight = this.containerHeight;\n            const _remove = (result) => {\n                let index = this.activeToasts[position].indexOf(toast);\n                if (index > -1) {\n                    this.activeToasts[position].splice(index, 1);\n                }\n                if (this.waitingToasts[position].length > 0) {\n                    let nextNotif = this.waitingToasts[position].splice(0, 1)[0];\n                    this._calculateBottom(nextNotif, false, position, index);\n                }\n                else {\n                    let containerHeight = this.containerHeight;\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeToasts[position][i];\n                        let bottom = containerHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom - height - this.gap + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeToasts[position].length;\n            if (length == 0) {\n                this.activeToasts[position].push(toast);\n                toast.show(_remove);\n            }\n            else {\n                let totHeight = 0;\n                for (let t of this.activeToasts[position]) {\n                    totHeight += t.offsetHeight + this.gap;\n                }\n                if (totHeight + height < this.heightLimit) {\n                    for (let i = from; i < this.activeToasts[position].length; i++) {\n                        let t = this.activeToasts[position][i];\n                        let bottom = containerHeight - (t.offsetTop + t.offsetHeight);\n                        t.style.bottom = bottom + height + this.gap + 'px';\n                    }\n                    this.activeToasts[position].push(toast);\n                    toast.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingToasts[position].push(toast);\n                }\n            }\n        });\n    }\n    _calculateTop(toast, firstTime, position, from) {\n        return new Promise(async (resolve) => {\n            let height = toast.offsetHeight;\n            const _remove = (result) => {\n                let index = this.activeToasts[position].indexOf(toast);\n                if (index > -1) {\n                    this.activeToasts[position].splice(index, 1);\n                }\n                if (this.waitingToasts[position].length > 0) {\n                    let nextNotif = this.waitingToasts[position].splice(0, 1)[0];\n                    this._calculateTop(nextNotif, false, position, index);\n                }\n                else {\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeToasts[position][i];\n                        let top = (notif.offsetTop - height - this.gap);\n                        notif.style.top = top + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeToasts[position].length;\n            if (length == 0) {\n                this.activeToasts[position].push(toast);\n                toast.show(_remove);\n            }\n            else {\n                let totHeight = 0;\n                for (let notif of this.activeToasts[position]) {\n                    await notif.waitTransition();\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < this.heightLimit) {\n                    for (let i = from; i < this.activeToasts[position].length; i++) {\n                        let notif = this.activeToasts[position][i];\n                        await notif.waitTransition();\n                        let top = (notif.offsetTop + notif.offsetHeight);\n                        notif.style.top = top + this.gap + 'px';\n                    }\n                    this.activeToasts[position].push(toast);\n                    toast.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingToasts[position].push(toast);\n                }\n            }\n            this.mutex.release();\n            return;\n        });\n    }\n    async _notifyBottomRight(toast, firstTime) {\n        return await this._calculateBottom(toast, firstTime, \"bottom right\", 0);\n    }\n    async _notifyTopRight(toast, firstTime) {\n        return await this._calculateTop(toast, firstTime, \"top right\", 0);\n    }\n    async _notifyBottomLeft(toast, firstTime) {\n        return await this._calculateBottom(toast, firstTime, \"bottom left\", 0);\n    }\n    async _notifyTopLeft(toast, firstTime) {\n        return await this._calculateTop(toast, firstTime, \"top left\", 0);\n    }\n    async _notifyTop(toast, firstTime, from = 0) {\n        return await this._calculateTop(toast, firstTime, \"top\", 0);\n    }\n    async _notifyBottom(toast, firstTime, from = 0) {\n        return await this._calculateBottom(toast, firstTime, \"bottom\", from);\n    }\n    postConnect() {\n        super.postConnect();\n        if (!Toast.ToastManager.instance && !this.not_main) {\n            Toast.ToastManager.instance = this;\n        }\n    }\n    postDisonnect() {\n        if (Toast.ToastManager.instance == this) {\n            Toast.ToastManager.instance = undefined;\n        }\n    }\n    static add(toast) {\n        if (!this.instance) {\n            this.instance = this.defaultToastManager ? new this.defaultToastManager() : new Toast.ToastManager();\n            document.body.appendChild(this.instance);\n        }\n        return this.instance.add(toast);\n    }\n    static configure(options) {\n        for (let key in options) {\n            if (options[key] !== undefined)\n                this[key] = options[key];\n        }\n    }\n}\nToast.ToastManager.Namespace=`Aventus.Toast`;\nToast.ToastManager.Tag=`av-toast-manager`;\n__as1(_.Toast, 'ToastManager', Toast.ToastManager);\nif(!window.customElements.get('av-toast-manager')){window.customElements.define('av-toast-manager', Toast.ToastManager);Aventus.WebComponentInstance.registerDefinition(Toast.ToastManager);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Form.Constructor","isStrong":true},{"fullName":"Aventus.Toast.ToastElement","isStrong":true},{"fullName":"Aventus.Toast.ToastManager","isStrong":false},{"fullName":"Internal","isStrong":true},{"fullName":"Aventus.Toast.ToastPosition","isStrong":true},{"fullName":"Aventus.Toast.ToastOptions","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Toast.ToastManagerOptions","isStrong":false},{"fullName":"Aventus.Mutex","isStrong":false},{"fullName":"Attribute","isStrong":false}],"fullName":"Aventus.Toast.ToastManager","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"av-toast-manager","slots":{"default":{"local":true}}},{"code":"let Process=class Process {\n    static handleErrors;\n    static configure(config) {\n        this.handleErrors = config.handleErrors;\n    }\n    static async execute(prom) {\n        const queryResult = await prom;\n        return await this.parseErrors(queryResult);\n    }\n    static async parseErrors(result) {\n        if (result.errors.length > 0) {\n            if (this.handleErrors) {\n                let msg = result.errors.map(p => p.message.replace(/\\n/g, '<br/>')).join(\"<br/>\");\n                this.handleErrors(msg, result.errors);\n            }\n            return undefined;\n        }\n        if (result instanceof Aventus.ResultWithError)\n            return result.result;\n        return undefined;\n    }\n}\nProcess.Namespace=`Aventus`;\r\n__as1(_, 'Process', Process);\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Aventus.ProcessConfig","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false},{"fullName":"Y","isStrong":false},{"fullName":"Aventus.VoidWithError","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Aventus.ExtractFromError","isStrong":false}],"fullName":"Aventus.Process","required":false,"type":1,"isExported":true,"convertibleName":""}],"existing":[{"fullName":"Aventus.ProcessConfig","dependances":[{"fullName":"Aventus.GenericError","isStrong":false}]},{"fullName":"Aventus.Toast.ToastPosition","dependances":[]},{"fullName":"Aventus.Navigation.FilterPrefix","dependances":[{"fullName":"T","isStrong":false}]},{"fullName":"Aventus.Navigation.ToKey","dependances":[{"fullName":"T","isStrong":false},{"fullName":"U","isStrong":false}]},{"fullName":"Aventus.Navigation.FirstKey","dependances":[{"fullName":"Aventus.Navigation.ToKey","isStrong":false},{"fullName":"Aventus.Navigation.FilterPrefix","isStrong":false}]},{"fullName":"Aventus.Navigation.LastParameter","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Last","isStrong":false},{"fullName":"Parameters","isStrong":false}]},{"fullName":"Aventus.Modal.ModalOptions","dependances":[]},{"fullName":"Aventus.Lib.ShortcutManagerOptions","dependances":[]},{"fullName":"Aventus.Layout.ColOptions","dependances":[]},{"fullName":"Aventus.Form.ExtractError","dependances":[{"fullName":"X","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false},{"fullName":"Y","isStrong":false},{"fullName":"Aventus.VoidWithError","isStrong":false}]},{"fullName":"Aventus.Navigation.PageFormConfig","dependances":[]},{"fullName":"Aventus.Navigation.Page.PageConfig","dependances":[]},{"fullName":"Aventus.Form.InternalFormPart","dependances":[{"fullName":"Aventus.Form.FormPartValidate","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Form.IFormElement","isStrong":false},{"fullName":"Aventus.Form.FormHandler","isStrong":false}]},{"fullName":"Aventus.Navigation.RouteAsyncOption","dependances":[{"fullName":"Aventus.Navigation.Page","isStrong":false}]},{"fullName":"Aventus.Form.WithError","dependances":[{"fullName":"Storybook","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Aventus.VoidWithError","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false}]},{"fullName":"Aventus.Form.InternalForm","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Aventus.Form.InternalFormPart","isStrong":false}]},{"fullName":"Aventus.Form.Constructor","dependances":[{"fullName":"AllowAbstract","isStrong":false},{"fullName":"T","isStrong":false}]},{"fullName":"Aventus.Toast.ToastManagerOptions","dependances":[{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.Toast.ToastElement","isStrong":false},{"fullName":"Aventus.Toast.ToastManager","isStrong":false},{"fullName":"Aventus.Toast.ToastPosition","isStrong":false}]},{"fullName":"Aventus.Navigation.KeyResult","dependances":[{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.HttpRoute","isStrong":false},{"fullName":"M","isStrong":false},{"fullName":"Aventus.Navigation.FirstKey","isStrong":false},{"fullName":"InstanceType","isStrong":false},{"fullName":"C","isStrong":false}]},{"fullName":"Aventus.Navigation.Result","dependances":[{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.HttpRoute","isStrong":false},{"fullName":"InstanceType","isStrong":false},{"fullName":"C","isStrong":false},{"fullName":"M","isStrong":false},{"fullName":"ReturnType","isStrong":false}]},{"fullName":"Aventus.Navigation.RouterOptions","dependances":[{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.Navigation.Page","isStrong":false}]},{"fullName":"Aventus.Form.FormValidateResult","dependances":[{"fullName":"Aventus.Asyncable","isStrong":false}]},{"fullName":"Aventus.Form.FormValidate","dependances":[{"fullName":"Aventus.Form.FormValidateResult","isStrong":false}]},{"fullName":"Aventus.Form.FormPartValidate","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Form.FormValidateResult","isStrong":false}]},{"fullName":"Aventus.Form.FormHandlerConfig","dependances":[{"fullName":"Aventus.Form.FormValidate","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false}]},{"fullName":"Aventus.Form.FormPartValidateList","dependances":[{"fullName":"Aventus.Form.FormPartValidate","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Aventus.Form.Constructor","isStrong":false},{"fullName":"Aventus.Form.Validator","isStrong":false}]},{"fullName":"Aventus.Form.FormPart","dependances":[{"fullName":"Aventus.Form.FormPartValidateList","isStrong":false}]},{"fullName":"Aventus.Form.FormSchema","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Aventus.Form.FormPart","isStrong":false},{"fullName":"Aventus.Form.FormPartValidateList","isStrong":false}]},{"fullName":"Aventus.Form.SubmitFunction","dependances":[{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.Form.WithError","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"T","isStrong":false}]},{"fullName":"Aventus.Form.IFormElement","dependances":[{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.Form.InternalFormPart","isStrong":false}]},{"fullName":"Aventus.Form.IForm","dependances":[{"fullName":"Aventus.Form.IForm","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.Form.FormElement","isStrong":false},{"fullName":"Aventus.Form.ButtonElement","isStrong":false}]},{"fullName":"Aventus.Modal.ExtractTypeModal","dependances":[{"fullName":"Aventus.Modal.ModalElement","isStrong":false},{"fullName":"U","isStrong":false},{"fullName":"Y","isStrong":false},{"fullName":"Aventus.Modal.ModalOptions","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Aventus.Toast.ToastOptions","dependances":[{"fullName":"Aventus.Toast.ToastPosition","isStrong":false}]}]}
//#endregion js src //
//#region css def //
{"av-button-element":[],"av-form":[],"av-form-element":[],"av-img":[{"name":"--img-color"},{"name":"--img-stroke-color","chainValues":["--internal-img-color"],"defaultValue":"--internal-img-color"},{"name":"--img-fill-color","chainValues":["--internal-img-color"],"defaultValue":"--internal-img-color"},{"name":"--img-color-transition","chainValues":["none"],"defaultValue":"none"}],"av-col":[{"name":"--col-padding","chainValues":["8px"],"defaultValue":"8px"},{"name":"--col-gap","chainValues":["0px"],"defaultValue":"0px"}],"av-collapse":[{"name":"--collapse-transition-duration","chainValues":["0.5s"],"defaultValue":"0.5s"},{"name":"--collapse-transition-timing-function","chainValues":["1"],"defaultValue":"1"}],"av-grid-guide-helper":[],"av-grid-helper":[],"av-row":[{"name":"--col-gap","chainValues":["0px"],"defaultValue":"0px"}],"av-scrollable":[{"name":"--scrollbar-container-color","chainValues":["transparent"],"defaultValue":"transparent"},{"name":"--scrollbar-color","chainValues":["#757575"],"defaultValue":"#757575"},{"name":"--scrollbar-active-color","chainValues":["#858585"],"defaultValue":"#858585"},{"name":"--scroller-width","chainValues":["6px"],"defaultValue":"6px"},{"name":"--scroller-top","chainValues":["3px"],"defaultValue":"3px"},{"name":"--scroller-bottom","chainValues":["3px"],"defaultValue":"3px"},{"name":"--scroller-right","chainValues":["3px"],"defaultValue":"3px"},{"name":"--scroller-left","chainValues":["3px"],"defaultValue":"3px"},{"name":"--scrollbar-content-padding","chainValues":["0"],"defaultValue":"0"},{"name":"--scrollbar-container-display","chainValues":["inline-block"],"defaultValue":"inline-block"}],"av-tab":[],"av-tab-header":[],"av-tabs":[],"av-modal-element":[],"av-default-404":[],"av-link":[],"av-page":[],"av-page-form":[],"av-page-form-route":[],"av-router":[],"av-router-link":[],"av-progress-circle":[{"name":"--progress-circle-back-circle-color","chainValues":[".5"],"defaultValue":".5"},{"name":"--progress-circle-percent-circle-color","chainValues":["#3b82f6"],"defaultValue":"#3b82f6"},{"name":"--progress-circle-transition","chainValues":["1"],"defaultValue":"1"}],"av-toast-element":[],"av-toast-manager":[{"name":"--toast-space-bottom","chainValues":["20px"],"defaultValue":"20px"},{"name":"--toast-space-top","chainValues":["20px"],"defaultValue":"20px"},{"name":"--toast-space-right","chainValues":["10px"],"defaultValue":"10px"},{"name":"--toast-space-left","chainValues":["10px"],"defaultValue":"10px"}]}
//#endregion css def //
//#region css //
{}
//#endregion css //
//#region html //
{"av-toast-manager":{"class":"Aventus.Toast.ToastManager","name":"av-toast-manager","description":"","attributes":{"gap":{"name":"gap","description":"","type":"number","values":[]},"not_main":{"name":"not_main","description":"","type":"boolean","values":[]}}},"av-progress-circle":{"class":"Aventus.ProgressCircle","name":"av-progress-circle","description":"","attributes":{"value":{"name":"value","description":"","type":"number","values":[]},"stroke_width":{"name":"stroke_width","description":"","type":"number","values":[]}}},"av-row":{"class":"Aventus.Layout.Row","name":"av-row","description":"","attributes":{}},"av-collapse":{"class":"Aventus.Collapse","name":"av-collapse","description":"","attributes":{"open":{"name":"open","description":"","type":"boolean","values":[]},"no_animation":{"name":"no_animation","description":"","type":"boolean","values":[]}}},"av-col":{"class":"Aventus.Layout.Col","name":"av-col","description":"","attributes":{"use_container":{"name":"use_container","description":"","type":"boolean","values":[]},"size":{"name":"size","description":"","type":"number","values":[]},"size_xs":{"name":"size_xs","description":"","type":"number","values":[]},"size_sm":{"name":"size_sm","description":"","type":"number","values":[]},"size_md":{"name":"size_md","description":"","type":"number","values":[]},"size_lg":{"name":"size_lg","description":"","type":"number","values":[]},"size_xl":{"name":"size_xl","description":"","type":"number","values":[]},"offset":{"name":"offset","description":"","type":"number","values":[]},"offset_xs":{"name":"offset_xs","description":"","type":"number","values":[]},"offset_sm":{"name":"offset_sm","description":"","type":"number","values":[]},"offset_md":{"name":"offset_md","description":"","type":"number","values":[]},"offset_lg":{"name":"offset_lg","description":"","type":"number","values":[]},"offset_xl":{"name":"offset_xl","description":"","type":"number","values":[]},"offset_right":{"name":"offset_right","description":"","type":"number","values":[]},"offset_right_xs":{"name":"offset_right_xs","description":"","type":"number","values":[]},"offset_right_sm":{"name":"offset_right_sm","description":"","type":"number","values":[]},"offset_right_md":{"name":"offset_right_md","description":"","type":"number","values":[]},"offset_right_lg":{"name":"offset_right_lg","description":"","type":"number","values":[]},"offset_right_xl":{"name":"offset_right_xl","description":"","type":"number","values":[]},"center":{"name":"center","description":"","type":"boolean","values":[]}}},"av-img":{"class":"Aventus.Img","name":"av-img","description":"","attributes":{"cache":{"name":"cache","description":"","type":"boolean","values":[]},"src":{"name":"src","description":"","type":"string","values":[]},"mode":{"name":"mode","description":"","type":"string","values":[{"name":"stretch","description":""},{"name":"contains","description":""},{"name":"cover","description":""}]}}},"av-router-link":{"class":"Aventus.Navigation.RouterLink","name":"av-router-link","description":"","attributes":{"state":{"name":"state","description":"","type":"string","values":[]},"active_state":{"name":"active_state","description":"If set define when active class is added otherwhise class active is added when state define is active","type":"string","values":[]},"onActiveChange":{"name":"@activeChange","description":"","values":[]}}},"av-link":{"class":"Aventus.Navigation.Link","name":"av-link","description":"","attributes":{"to":{"name":"to","description":"","type":"string","values":[]},"active_pattern":{"name":"active_pattern","description":"If set define when active class is added otherwhise class active is added when to define is active","type":"string","values":[]},"onActiveChange":{"name":"@activeChange","description":"","values":[]}}},"av-form":{"class":"Aventus.Form.Form","name":"av-form","description":"","attributes":{"form":{"name":":form","description":"","values":[]},"request":{"name":":request","description":"","values":[]},"onSubmit":{"name":"@submit","description":"","values":[]}}},"av-grid-helper":{"class":"Aventus.Layout.GridHelper","name":"av-grid-helper","description":"","attributes":{"show_rulers":{"name":"show_rulers","description":"","type":"boolean","values":[]},"show_grid":{"name":"show_grid","description":"","type":"boolean","values":[]},"show_ruler":{"name":"show_ruler","description":"","type":"boolean","values":[]},"show_guides":{"name":"show_guides","description":"","type":"boolean","values":[]},"lock":{"name":"lock","description":"","type":"boolean","values":[]},"visible":{"name":"visible","description":"","type":"boolean","values":[]},"unit":{"name":"unit","description":"","type":"string","values":[{"name":"px","description":""},{"name":"rem","description":""},{"name":"cm","description":""},{"name":"mm","description":""},{"name":"in","description":""}]},"nb_col":{"name":"nb_col","description":"","type":"number","values":[]},"nb_row":{"name":"nb_row","description":"","type":"number","values":[]},"col_width":{"name":"col_width","description":"","type":"number","values":[]},"row_height":{"name":"row_height","description":"","type":"number","values":[]},"ruler_size":{"name":"ruler_size","description":"","type":"number","values":[]},"step":{"name":"step","description":"","type":"number","values":[]},"step_big":{"name":"step_big","description":"","type":"number","values":[]},"magnetic":{"name":"magnetic","description":"","type":"number","values":[]}}},"av-grid-guide-helper":{"class":"Aventus.Layout.GridGuideHelper","name":"av-grid-guide-helper","description":"","attributes":{"direction":{"name":"direction","description":"","type":"string","values":[{"name":"y","description":""},{"name":"x","description":""}]},"moving":{"name":"moving","description":"","type":"boolean","values":[]}}},"av-scrollable":{"class":"Aventus.Layout.Scrollable","name":"av-scrollable","description":"","attributes":{"min_zoom":{"name":"min_zoom","description":"","type":"number","values":[]},"max_zoom":{"name":"max_zoom","description":"","type":"number","values":[]},"floating_scroll":{"name":"floating_scroll","description":"Determine if scrollbar will be floating or not","type":"boolean","values":[]},"x_scroll":{"name":"x_scroll","description":"Determine if x scroll is allowed","type":"boolean","values":[]},"y_scroll":{"name":"y_scroll","description":"Determine if x scroll is allowed","type":"boolean","values":[]},"auto_hide":{"name":"auto_hide","description":"If true, the scrollers will hide if they're not in use","type":"boolean","values":[]},"break":{"name":"break","description":"","type":"number","values":[]},"disable":{"name":"disable","description":"Disable user action","type":"boolean","values":[]},"mouse_drag":{"name":"mouse_drag","description":"Allow scroll by dragging with the mouse","type":"boolean","values":[]},"pinch":{"name":"pinch","description":"","type":"boolean","values":[]},"zoom":{"name":"zoom","description":"Set the zoom to apply for the container","type":"number","values":[]},"onScrollChange":{"name":"@scrollChange","description":"/**\r\n         * Callback trigger when the scroll change\r\n         */","values":[]},"onZoomChange":{"name":"@zoomChange","description":"","values":[]}}},"av-default-404":{"class":"Aventus.Navigation.Default404","name":"av-default-404","description":"","attributes":{"visible":{"name":"visible","description":"","type":"boolean","values":[]}}}}
//#endregion html //
//#region dependances //
{}
//#endregion dependances //
