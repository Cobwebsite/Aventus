import { IAttributeData, ITagData } from 'vscode-html-languageservice';

export function defaultTags(): ITagData[] {
	let result: ITagData[] = [];
	return result;
}
export const defaultAttrs: IAttributeData[] = [{
	name: "@element",
	description: "Add a selector for the element inside your logical part"
}, {
	name: "@bind",
	description: "Bind a watcher to a variable"
}, {
	name: "@press",
	description: "Add an event for when the element is clicked"
}, {
	name: "@press-start",
	description: "Add an event for when mouse down or touch start on the element"
}, {
	name: "@press-stop",
	description: "Add an event for when mouse up or touch start on the element"
}, {
	name: "@longpress",
	description: "Add an event for when the element is long pressed"
}, {
	name: "@longpress-delay",
	description: "Add the delay for the long press"
}, {
	name: "@dblpress",
	description: "Add an event for when the element is double press"
}, {
	name: "@dblpress-delay",
	description: "Add the delay for the double press"
}, {
	name: "@drag",
	description: "Add an event for when the element is dragged"
}, {
	name: "@drag-start",
	description: "Add an event for when the element first drag"
}, {
	name: "@drag-end",
	description: "Add an event for when the element drag end"
}];

export const allGenericTags: { [tagName: string]: string } = {
	"a": "HTMLAnchorElement",
	"abbr": "HTMLElement",
	"address": "HTMLElement",
	"area": "HTMLAreaElement",
	"article": "HTMLElement",
	"aside": "HTMLElement",
	"audio": "HTMLAudioElement",
	"b": "HTMLElement",
	"base": "HTMLBaseElement",
	"bdi": "HTMLElement",
	"bdo": "HTMLElement",
	"blockquote": "HTMLQuoteElement",
	"body": "HTMLBodyElement",
	"br": "HTMLBRElement",
	"button": "HTMLButtonElement",
	"canvas": "HTMLCanvasElement",
	"caption": "HTMLTableCaptionElement",
	"cite": "HTMLElement",
	"code": "HTMLElement",
	"col": "HTMLTableColElement",
	"colgroup": "HTMLTableColElement",
	"data": "HTMLDataElement",
	"datalist": "HTMLDataListElement",
	"dd": "HTMLElement",
	"del": "HTMLModElement",
	"details": "HTMLDetailsElement",
	"dfn": "HTMLElement",
	"dialog": "HTMLDialogElement",
	"div": "HTMLDivElement",
	"dl": "HTMLDListElement",
	"dt": "HTMLElement",
	"em": "HTMLElement",
	"embed": "HTMLEmbedElement",
	"fieldset": "HTMLFieldSetElement",
	"figcaption": "HTMLElement",
	"figure": "HTMLElement",
	"footer": "HTMLElement",
	"form": "HTMLFormElement",
	"h1": "HTMLHeadingElement",
	"h2": "HTMLHeadingElement",
	"h3": "HTMLHeadingElement",
	"h4": "HTMLHeadingElement",
	"h5": "HTMLHeadingElement",
	"h6": "HTMLHeadingElement",
	"head": "HTMLHeadElement",
	"header": "HTMLElement",
	"hgroup": "HTMLElement",
	"hr": "HTMLHRElement",
	"html": "HTMLHtmlElement",
	"i": "HTMLElement",
	"iframe": "HTMLIFrameElement",
	"img": "HTMLImageElement",
	"input": "HTMLInputElement",
	"ins": "HTMLModElement",
	"kbd": "HTMLElement",
	"label": "HTMLLabelElement",
	"legend": "HTMLLegendElement",
	"li": "HTMLLIElement",
	"link": "HTMLLinkElement",
	"main": "HTMLElement",
	"map": "HTMLMapElement",
	"mark": "HTMLElement",
	"menu": "HTMLMenuElement",
	"meta": "HTMLMetaElement",
	"meter": "HTMLMeterElement",
	"nav": "HTMLElement",
	"noscript": "HTMLElement",
	"object": "HTMLObjectElement",
	"ol": "HTMLOListElement",
	"optgroup": "HTMLOptGroupElement",
	"option": "HTMLOptionElement",
	"output": "HTMLOutputElement",
	"p": "HTMLParagraphElement",
	"picture": "HTMLPictureElement",
	"pre": "HTMLPreElement",
	"progress": "HTMLProgressElement",
	"q": "HTMLQuoteElement",
	"rp": "HTMLElement",
	"rt": "HTMLElement",
	"ruby": "HTMLElement",
	"s": "HTMLElement",
	"samp": "HTMLElement",
	"script": "HTMLScriptElement",
	"section": "HTMLElement",
	"select": "HTMLSelectElement",
	"slot": "HTMLSlotElement",
	"small": "HTMLElement",
	"source": "HTMLSourceElement",
	"span": "HTMLSpanElement",
	"strong": "HTMLElement",
	"style": "HTMLStyleElement",
	"sub": "HTMLElement",
	"summary": "HTMLElement",
	"sup": "HTMLElement",
	"table": "HTMLTableElement",
	"tbody": "HTMLTableSectionElement",
	"td": "HTMLTableCellElement",
	"template": "HTMLTemplateElement",
	"textarea": "HTMLTextAreaElement",
	"tfoot": "HTMLTableSectionElement",
	"th": "HTMLTableCellElement",
	"thead": "HTMLTableSectionElement",
	"time": "HTMLTimeElement",
	"title": "HTMLTitleElement",
	"tr": "HTMLTableRowElement",
	"track": "HTMLTrackElement",
	"u": "HTMLElement",
	"ul": "HTMLUListElement",
	"var": "HTMLElement",
	"video": "HTMLVideoElement",
	"wbr": "HTMLElement",
	"acronym": "HTMLElement",
	"applet": "HTMLUnknownElement",
	"basefont": "HTMLElement",
	"bgsound": "HTMLUnknownElement",
	"big": "HTMLElement",
	"blink": "HTMLUnknownElement",
	"center": "HTMLElement",
	"dir": "HTMLDirectoryElement",
	"font": "HTMLFontElement",
	"frame": "HTMLFrameElement",
	"frameset": "HTMLFrameSetElement",
	"isindex": "HTMLUnknownElement",
	"keygen": "HTMLUnknownElement",
	"listing": "HTMLPreElement",
	"marquee": "HTMLMarqueeElement",
	"menuitem": "HTMLElement",
	"multicol": "HTMLUnknownElement",
	"nextid": "HTMLUnknownElement",
	"nobr": "HTMLElement",
	"noembed": "HTMLElement",
	"noframes": "HTMLElement",
	"param": "HTMLParamElement",
	"plaintext": "HTMLElement",
	"rb": "HTMLElement",
	"rtc": "HTMLElement",
	"spacer": "HTMLUnknownElement",
	"strike": "HTMLElement",
	"tt": "HTMLElement",
	"xmp": "HTMLPreElement",
	"animate": "SVGAnimateElement",
	"animateMotion": "SVGAnimateMotionElement",
	"animateTransform": "SVGAnimateTransformElement",
	"circle": "SVGCircleElement",
	"clipPath": "SVGClipPathElement",
	"defs": "SVGDefsElement",
	"desc": "SVGDescElement",
	"ellipse": "SVGEllipseElement",
	"feBlend": "SVGFEBlendElement",
	"feColorMatrix": "SVGFEColorMatrixElement",
	"feComponentTransfer": "SVGFEComponentTransferElement",
	"feComposite": "SVGFECompositeElement",
	"feConvolveMatrix": "SVGFEConvolveMatrixElement",
	"feDiffuseLighting": "SVGFEDiffuseLightingElement",
	"feDisplacementMap": "SVGFEDisplacementMapElement",
	"feDistantLight": "SVGFEDistantLightElement",
	"feDropShadow": "SVGFEDropShadowElement",
	"feFlood": "SVGFEFloodElement",
	"feFuncA": "SVGFEFuncAElement",
	"feFuncB": "SVGFEFuncBElement",
	"feFuncG": "SVGFEFuncGElement",
	"feFuncR": "SVGFEFuncRElement",
	"feGaussianBlur": "SVGFEGaussianBlurElement",
	"feImage": "SVGFEImageElement",
	"feMerge": "SVGFEMergeElement",
	"feMergeNode": "SVGFEMergeNodeElement",
	"feMorphology": "SVGFEMorphologyElement",
	"feOffset": "SVGFEOffsetElement",
	"fePointLight": "SVGFEPointLightElement",
	"feSpecularLighting": "SVGFESpecularLightingElement",
	"feSpotLight": "SVGFESpotLightElement",
	"feTile": "SVGFETileElement",
	"feTurbulence": "SVGFETurbulenceElement",
	"filter": "SVGFilterElement",
	"foreignObject": "SVGForeignObjectElement",
	"g": "SVGGElement",
	"image": "SVGImageElement",
	"line": "SVGLineElement",
	"linearGradient": "SVGLinearGradientElement",
	"marker": "SVGMarkerElement",
	"mask": "SVGMaskElement",
	"metadata": "SVGMetadataElement",
	"mpath": "SVGMPathElement",
	"path": "SVGPathElement",
	"pattern": "SVGPatternElement",
	"polygon": "SVGPolygonElement",
	"polyline": "SVGPolylineElement",
	"radialGradient": "SVGRadialGradientElement",
	"rect": "SVGRectElement",
	"set": "SVGSetElement",
	"stop": "SVGStopElement",
	"svg": "SVGSVGElement",
	"switch": "SVGSwitchElement",
	"symbol": "SVGSymbolElement",
	"text": "SVGTextElement",
	"textPath": "SVGTextPathElement",
	"tspan": "SVGTSpanElement",
	"use": "SVGUseElement",
	"view": "SVGViewElement",
}

export const defaultSnippet = {
	'for': 'for(let ${1:i} = 0; ${1:i} < ${2:this.}; ${1:i}++) {\n\t${3}\n}',
	'forIn': 'for(let ${1:index} in ${2:this.}) {\n\t${3}\n}',
	'forOf': 'for(let ${1:element} of ${2:this.}) {\n\t${3}\n}',
	'if': 'if(${1:true}) {\n\t${2}\n}',
	'else if': 'else if(${1:true}) {\n\t${2}\n}',
	'else': 'else {\n\t${1}\n}',
}